{"version":3,"file":"static/js/688.2bff3aaf.chunk.js","mappings":"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","sources":["components/admin/admin home/loader/Loader.jsx","components/admin/admin home/MainHome.jsx","components/admin/Admin/Admin.jsx","components/login/useOnKeyPress.js","components/login/LoginAdmin.jsx","components/admin/loader-admin/LoaderAdmin.js","components/admin/drivers/useOnKeyPress.js","components/admin/drivers/Drivers.jsx","components/admin/chat/ChatDriver.jsx","components/admin/clients/Clients.jsx","components/admin/colors/Colors.jsx","components/admin/car-brend/CarBrand.jsx","components/admin/service/Service.jsx","components/admin/balance/Balance.jsx","components/admin/orders/Orders.jsx","components/admin/car-model/CarModel.jsx","components/admin/payment/Payment.jsx","components/admin/reject-reason/RejectReason.jsx","components/admin/extra-services/ExtraServices.jsx","components/admin/price/Price.jsx","rootes.jsx","components/notFound/NotFound.jsx","components/App/App.js"],"sourcesContent":["import \"./loader.scss\";\r\n\r\nconst Loader = () => {\r\n    return <>\r\n        <div className=\"spinner-container\">\r\n            <div className=\"sloy\">\r\n                <span className=\"loader\"></span>\r\n            </div>\r\n\r\n        </div>\r\n    </>\r\n};\r\n\r\nexport default Loader;","import \"./adminHome.scss\"\r\nimport {useEffect, useMemo, useState} from \"react\"\r\nimport {GoogleMap, useLoadScript, MarkerF, InfoWindow} from \"@react-google-maps/api\";\r\nimport Loader from \"./loader/Loader\";\r\nimport axios from \"axios\";\r\nimport {w3cwebsocket as W3CWebSocket} from \"websocket\";\r\n\r\nconst API_KEY = \"AIzaSyBEN2azIRg6YCHa-tV8yAEUJoHsn__fRBM\";\r\n\r\nconst MainHome = () => {\r\n    const [statisitc, setStatisitc] = useState([]);\r\n    const [sockedContext, setSockedContext] = useState(null);\r\n    const [locationsList, setLocationsList] = useState([]);\r\n    const [center, setCenter] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (!localStorage.getItem(\"token\")) return;\r\n\r\n        const websocket = new W3CWebSocket(`wss://api.adataxi.uz/ws/driver/?token=${localStorage.getItem(\"token\")}`);\r\n        setSockedContext(websocket);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        navigator.geolocation.getCurrentPosition((position) => {\r\n            const {latitude, longitude} = position.coords;\r\n            let locMy = {lat: latitude, lng: longitude};\r\n            setCenter(locMy);\r\n        });\r\n\r\n        axios.get(`https://api.adataxi.uz/api/v1/site/statistics/`).then((response) => {\r\n            setStatisitc(response.data[0])\r\n        })\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (!sockedContext) return;\r\n        sockedContext.onmessage = (event) => {\r\n            const data = JSON.parse(event.data);\r\n            if (data.message?.code === -35) {\r\n                localStorage.removeItem(\"token\");\r\n                localStorage.removeItem(\"userId\");\r\n                window.location.pathname = \"/\";\r\n                return;\r\n            }\r\n\r\n            if (data.action === \"driver_location\") {\r\n                setLocationsList(data.message)\r\n            }\r\n        };\r\n    }, [sockedContext]);\r\n\r\n    const {isLoaded} = useLoadScript({\r\n        googleMapsApiKey: API_KEY\r\n    });\r\n\r\n    const options = useMemo(() => (\r\n        {\r\n            disableDefaultUI: false,\r\n            clickableIcons: false\r\n        }), []);\r\n\r\n    const [selectedLocation, setSelectedLocation] = useState(null);\r\n\r\n    const onMarkerClick = (location) => {\r\n        setSelectedLocation(location);\r\n    };\r\n\r\n    const onCloseClick = () => {\r\n        setSelectedLocation(null);\r\n    };\r\n\r\n    if (!isLoaded) return <Loader/>;\r\n\r\n    const icon = {url: './images/admin/driver-icon.png', scaledSize: {width: 45, height: 45}};\r\n\r\n    return <div className=\"admin-home-container\">\r\n\r\n        <div className=\"header-side\">\r\n            <div className=\"statistic-card\">\r\n                <div className=\"icon\">\r\n                    <img src=\"./images/admin/driver.png\" alt=\"\"/>\r\n                </div>\r\n                <div className=\"title\">Haydovchilar soni:</div>\r\n                <div className=\"count\">{statisitc.drivers}</div>\r\n            </div>\r\n            <div className=\"statistic-card\">\r\n                <div className=\"icon\">\r\n                    <img src=\"./images/admin/user.png\" alt=\"\"/>\r\n                </div>\r\n                <div className=\"title\">Mijozlar soni:</div>\r\n                <div className=\"count\">{statisitc.clients}</div>\r\n            </div>\r\n            <div className=\"statistic-card\">\r\n                <div className=\"icon\">\r\n                    <img src=\"./images/admin/handshake.png\" alt=\"\"/>\r\n                </div>\r\n                <div className=\"title\">To'liq ro'yxatdan o'tgan haydovchilar:</div>\r\n                <div className=\"count\">{statisitc.avilable_drivers}</div>\r\n            </div>\r\n            <div className=\"statistic-card\">\r\n                <div className=\"icon\">\r\n                    <img src=\"./images/admin/shopping-list.png\" alt=\"\"/>\r\n                </div>\r\n                <div className=\"title\">Yakunlangan buyurtmalar soni:</div>\r\n                <div className=\"count\">{statisitc.rides}</div>\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"map\">\r\n            <GoogleMap\r\n                zoom={5}\r\n                center={center}\r\n                options={options}\r\n                mapContainerClassName=\"map-container\">\r\n\r\n                {locationsList.map((item, index) => (\r\n                    item.latitude && item.longitude &&\r\n                    <MarkerF\r\n                        key={index}\r\n                        position={{lat: item.latitude, lng: item.longitude}}\r\n                        icon={icon}\r\n                        onClick={() => onMarkerClick(item)}\r\n                    />\r\n                ))}\r\n\r\n                {selectedLocation && (\r\n                    <InfoWindow\r\n                        position={{\r\n                            lat: Number(selectedLocation.latitude),\r\n                            lng: Number(selectedLocation.longitude)\r\n                        }}\r\n                        onCloseClick={onCloseClick}\r\n                    >\r\n                        <div className=\"info-box\">\r\n                            <div className=\"info-text\">\r\n                                <span>Moshina raqam:</span>\r\n                                {selectedLocation.car_number} <br/>\r\n                                <span>Tel raqam:</span>\r\n                                {selectedLocation.phone_number}\r\n                            </div>\r\n                        </div>\r\n                    </InfoWindow>\r\n                )}\r\n\r\n\r\n            </GoogleMap>\r\n        </div>\r\n    </div>\r\n};\r\n\r\n\r\nexport default MainHome","import {useState, useEffect, useContext} from \"react\";\r\nimport {useNavigate, Route, Routes, NavLink} from \"react-router-dom\";\r\nimport \"./admin.scss\"\r\nimport {adminPageRoutes} from \"../../../rootes\";\r\nimport {MyContext} from \"../../App/App\";\r\nimport i18next from \"i18next\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\n\r\nconst Admin = () => {\r\n    const {t} = useTranslation();\r\n    let value = useContext(MyContext);\r\n    const navigate = useNavigate();\r\n    const [adminMenu, setAdminMenu] = useState(false)\r\n\r\n    const menues = [\r\n        {\r\n            name: \"Dashboard\",\r\n            url: \"/dashboard\",\r\n            img: \"../images/admin/dashboard.png\"\r\n        },\r\n        {\r\n            name: \"Haydovchilar\",\r\n            url: \"/drivers\",\r\n            img: \"../images/admin/driver.png\"\r\n        },\r\n        {\r\n            name: \"Mijozlar\",\r\n            url: \"/clients\",\r\n            img: \"../images/admin/user.png\"\r\n        },\r\n        {\r\n            name: \"Buyurtmalar\",\r\n            url: \"/orders\",\r\n            img: \"../images/admin/shopping-list.png\"\r\n        },\r\n        {\r\n            name: \"Moshina brendi\",\r\n            url: \"/car-brands\",\r\n            img: \"../images/admin/car.png\"\r\n        },\r\n        {\r\n            name: \"Moshina modeli\",\r\n            url: \"/car-models\",\r\n            img: \"../images/admin/car.png\"\r\n        },\r\n        {\r\n            name: \"Ranglar\",\r\n            url: \"/colors\",\r\n            img: \"../images/admin/palette.png\"\r\n        },\r\n        {\r\n            name: \"Narxlar\",\r\n            url: \"/price\",\r\n            img: \"../images/admin/price-list.png\"\r\n        },\r\n        {\r\n            name: \"Qo'shimcha xizmatlar\",\r\n            url: \"/extra-services\",\r\n            img: \"../images/admin/technical-service.png\"\r\n        },\r\n        {\r\n            name: \"Bekor qilish sababi\",\r\n            url: \"/reject-reason\",\r\n            img: \"../images/admin/rejected.png\"\r\n        },\r\n\r\n        // {\r\n        //     name: \"Tariflar\",\r\n        //     url: \"/service\",\r\n        //     img: \"../images/admin/list.png\"\r\n        // },\r\n\r\n        {\r\n            name: \"Balans\",\r\n            url: \"/balance\",\r\n            img: \"../images/admin/wallet.png\"\r\n        },\r\n        {\r\n            name: \"To'lov tizimi\",\r\n            url: \"/payment\",\r\n            img: \"../images/admin/credit-card.png\"\r\n        },\r\n    ];\r\n\r\n    useEffect(() => {\r\n        // axios.get(`${value.url}dashboard/home/`, {\r\n        //     headers: {\r\n        //         \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\r\n        //     }\r\n        // }).then((response) => {\r\n        //     setStatisticsCount(response.data)\r\n        //     setCountPrice(response.data.balance)\r\n        // }).catch((error) => {\r\n        //     if (error.response.statusText == \"Unauthorized\") {\r\n        //         window.location.pathname = \"/\";\r\n        //         localStorage.removeItem(\"token\");\r\n        //     }\r\n        // });\r\n    }, []);\r\n\r\n    const language = [\r\n        {\r\n            code: \"uz\",\r\n            name: \"O'zbek tili\",\r\n            country_code: \"uz\",\r\n        },\r\n        {\r\n            code: \"en\",\r\n            name: \"English language\",\r\n            country_code: \"en\",\r\n        },\r\n        {\r\n            code: \"ru\",\r\n            name: \"Pусский язык\",\r\n            country_code: \"ru\",\r\n        },\r\n    ];\r\n    const changeLanguage = (code) => {\r\n        localStorage.setItem(\"lng\", code);\r\n        i18next.changeLanguage(code);\r\n    };\r\n\r\n    const logOut = () => {\r\n        const isConfirmed = window.confirm(\"Rostdan ham profildan chiqmoqchimisz?\");\r\n        if (isConfirmed) {\r\n            window.location.pathname = \"/\";\r\n            localStorage.removeItem(\"admin\")\r\n            localStorage.removeItem(\"token\")\r\n        }\r\n    }\r\n\r\n    return <div className=\"admin-home\">\r\n        <div className={`left-box ${adminMenu ? \"\" : \"hide-left\"}`}>\r\n\r\n            <div className={`logo ${adminMenu ? \"\" : \"hide-logo\"}`}>\r\n                <img onClick={() => navigate('/')} src=\"../images/logo2.png\" alt=\"\"/>\r\n            </div>\r\n\r\n            <div className=\"admin-navbar\">\r\n                {\r\n                    menues.map((item, index) => {\r\n                        return <NavLink to={item.url} key={index}\r\n                                        className={`nav-item ${({isActive}) => isActive ? \"active\" : \"\"}`}>\r\n                            <img src={item.img} alt=\"\"/>\r\n                            {adminMenu ? <span>{item.name}</span> : \"\"}\r\n                        </NavLink>\r\n                    })\r\n                }\r\n            </div>\r\n\r\n            <div onClick={() => setAdminMenu(!adminMenu)} className={`circle ${adminMenu ? \"\" : \"circle-rotate\"}`}>\r\n                <img src=\"../images/admin/previous.png\" alt=\"\"/>\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <div className={`right-box ${adminMenu ? \"\" : \"show-right\"}`}>\r\n            <div className=\"top-box\">\r\n                <div className=\"languge\">\r\n                    <Dropdown>\r\n                        <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                            <img className=\"globe\" src=\"./images/globe-alt.webp\" alt=\"language\" loading=\"lazy\"/>\r\n                            <div className=\"name\">\r\n                                {language.map((item, index) => {\r\n                                    return (\r\n                                        <div key={index}>\r\n                                            {i18next.language === item.code ? item.name : \"\"}\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n\r\n                            {language.map(({code, name, country_code}) => (\r\n                                <Dropdown.Item key={country_code}\r\n                                               onClick={() => changeLanguage(code)}>{name}</Dropdown.Item>\r\n                            ))}\r\n\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </div>\r\n                <div className=\"title\">\r\n                    <img src=\"./images/logo.png\" alt=\"\"/>\r\n                </div>\r\n                <div className=\"icons\">\r\n                    <div onClick={() => logOut()} className=\"exit\"><img src=\"./images/admin/logout.png\" alt=\"\"/></div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"bottom-box\">\r\n                <Routes>\r\n                    {\r\n                        adminPageRoutes.map((route, index) => (\r\n                            <Route key={index} {...route} />\r\n                        ))\r\n                    }\r\n                </Routes>\r\n            </div>\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport default Admin","import {useEffect} from \"react\";\n\nexport const useOnKeyPress = (callback,targetKey) =>{\n    useEffect(()=>{\n        const keyPressHandler = (event)=>{\n            if (event.key === targetKey){\n                callback()\n            }\n        };\n\n        window.addEventListener('keydown',keyPressHandler);\n        return () =>{\n            window.removeEventListener('keydown', keyPressHandler)\n        }\n    },[callback, targetKey]);\n};","import {useContext, useEffect, useState} from \"react\";\r\nimport \"./style.scss\";\r\nimport axios from \"axios\";\r\nimport {MyContext} from \"../App/App\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {useOnKeyPress} from \"./useOnKeyPress\";\r\n\r\nconst LoginAdmin = () => {\r\n    let value = useContext(MyContext);\r\n    const navigate = useNavigate();\r\n    const [phone, setPhone] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const HandleLogin = () => {\r\n        if (phone.trim().length > 0 && password.trim().length > 0) {\r\n            let user = {\r\n                username: phone,\r\n                password\r\n            };\r\n            axios.post(`${value.url}/dashboard/login/`, user).then((response) => {\r\n                localStorage.setItem(\"admin\", response.data.user)\r\n                localStorage.setItem(\"token\", response.data.token);\r\n                window.location.pathname = '/dashboard';\r\n                localStorage.setItem(\"lng\", \"uz\")\r\n            }).catch((error) => {\r\n                if (error.response?.status === 404) alert(\"Bu foydalanuvchi topilmadi\");\r\n            });\r\n\r\n        } else alert(\"Formani to'ldiring\")\r\n\r\n    };\r\n\r\n    const Clear = () => {\r\n        setPhone(\"\");\r\n        setPassword(\"\");\r\n    };\r\n\r\n    useOnKeyPress(HandleLogin, 'Enter');\r\n    useOnKeyPress(Clear, 'Delete');\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"admin\") && localStorage.getItem(\"token\")) {\r\n            navigate('/dashboard');\r\n        }\r\n    })\r\n\r\n    return <div className=\"login-container\">\r\n        <div className=\"login-card\">\r\n            <div className=\"logo\">\r\n                <img src=\"./images/logo.png\" alt=\"\"/>\r\n            </div>\r\n            <div className=\"input_box\">\r\n                <input value={phone} onChange={(e) => setPhone(e.target.value)} placeholder=\"Username\" type=\"text\"/>\r\n                <input value={password} onChange={(e) => setPassword(e.target.value)} placeholder=\"Password\"\r\n                       type=\"password\"/>\r\n            </div>\r\n\r\n            <div onClick={HandleLogin} onKeyUp={() => console.log(\"enter\")} className=\"btn-login\">\r\n                Kirish\r\n            </div>\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport default LoginAdmin;","import \"./adminHome.scss\";\n\n\nconst LoaderAdmin = ()=>{\n    return <div className=\"loader-admin\">\n        <div className=\"lds-spinner\">\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n        </div>\n    </div>\n};\n\nexport default LoaderAdmin","import {useEffect} from \"react\";\n\nexport const useOnKeyPress = (callback,targetKey) =>{\n    useEffect(()=>{\n        const keyPressHandler = (event)=>{\n            if (event.key === targetKey){\n                callback()\n            }\n        };\n\n        window.addEventListener('keydown',keyPressHandler);\n        return () =>{\n            window.removeEventListener('keydown', keyPressHandler)\n        }\n    },[callback, targetKey]);\n};","import {useEffect, useRef, useState, useContext} from \"react\";\r\nimport {CSSTransition} from \"react-transition-group\";\r\nimport {useFormik} from \"formik\";\r\nimport i18next from \"i18next\";\r\nimport axios from \"axios\";\r\nimport {\r\n    TextField,\r\n    MenuItem,\r\n    InputLabel,\r\n    FormControl,\r\n    Select,\r\n    OutlinedInput,\r\n    Checkbox,\r\n    ListItemText\r\n} from \"@mui/material\";\r\nimport \"./style.scss\"\r\nimport {MyContext} from \"../../App/App\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport LoaderAdmin from \"../loader-admin/LoaderAdmin\";\r\nimport Lightbox from 'react-image-lightbox';\r\nimport 'react-image-lightbox/style.css';\r\nimport {useOnKeyPress} from \"./useOnKeyPress\";\r\n\r\nconst Drivers = () => {\r\n    const {t} = useTranslation();\r\n    let value = useContext(MyContext);\r\n    const [modalShow, setModalShow] = useState({show: false, status: false});\r\n    const nodeRef = useRef(null);\r\n    const [getSearchText, setGetSearchText] = useState(\"\");\r\n    const [driverPhoto, setDriverPhoto] = useState(null);\r\n    const [carInformation, setCarInformation] = useState([]);\r\n    const [driversList, setDriversList] = useState([]);\r\n    const [driverId, setDriverId] = useState(\"\");\r\n    const [reason, setReason] = useState(\"\");\r\n    const [loader, setLoader] = useState(false);\r\n\r\n    const [car_serviceId, setCarServiceId] = useState([])\r\n    const [car_categoriesId, setCarCategoriesId] = useState([])\r\n\r\n    const [regions, setRegions] = useState([])\r\n\r\n    const [luggage, setLuggage] = useState(\"male\");\r\n    const [profileImage, setProfileImage] = useState(null);\r\n    const [car_images, setCar_images] = useState([]);\r\n    const [base_car_images, setBase_Car_images] = useState([]);\r\n\r\n    const [doc_images, setDocImages] = useState([]);\r\n    const [base_doc_images, setBaseDocImages] = useState([]);\r\n\r\n    const [car_make, setCar_make] = useState([]);\r\n    const [car_model, setCar_model] = useState([]);\r\n    const [car_colors, setCar_colors] = useState([]);\r\n    const [extra_services, setExtra_services] = useState([]);\r\n    const [extra_servicesList, setExtra_servicesList] = useState([]);\r\n\r\n    const [car_categories, setCar_categories] = useState([]);\r\n    const [car_service, setCar_service] = useState([]);\r\n\r\n    const [from, setFrom] = useState(\"\");\r\n    const [to, setTo] = useState(\"\");\r\n\r\n    const ITEM_HEIGHT = 48;\r\n    const ITEM_PADDING_TOP = 8;\r\n    const MenuProps = {\r\n        PaperProps: {\r\n            style: {\r\n                maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n                width: 250,\r\n            },\r\n        },\r\n    };\r\n\r\n    const [confirmFilter, setConfirmFilter] = useState(\"\");\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [currentImage, setCurrentImage] = useState(\"\");\r\n\r\n    const validate = (values) => {\r\n        const errors = {};\r\n\r\n        if (!values.first_name) {\r\n            errors.first_name = \"Required\";\r\n        }\r\n\r\n        if (!values.last_name) {\r\n            errors.last_name = \"Required\";\r\n        }\r\n\r\n        if (!values.phone) {\r\n            errors.phone = \"Required\";\r\n        }\r\n\r\n        if (!values.car_model) {\r\n            errors.car_model = \"Required\";\r\n        }\r\n\r\n        if (!values.car_color) {\r\n            errors.car_color = \"Required\";\r\n        }\r\n\r\n        if (!values.car_make) {\r\n            errors.car_make = \"Required\";\r\n        }\r\n\r\n        if (!values.car_number) {\r\n            errors.car_number = \"Required\";\r\n        }\r\n\r\n        if (!values.extra_services) {\r\n            errors.extra_services = \"Required\";\r\n        }\r\n\r\n        if (!values.seat_count) {\r\n            errors.seat_count = \"Required\";\r\n        }\r\n\r\n        if (!values.from_region) {\r\n            errors.from_region = \"Required\";\r\n        }\r\n\r\n        if (!values.to_region) {\r\n            errors.to_region = \"Required\";\r\n        }\r\n\r\n        return errors;\r\n    };\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            phone: \"\",\r\n            first_name: \"\",\r\n            last_name: \"\",\r\n            birth_date: \"\",\r\n            car_number: \"\",\r\n            car_color: \"\",\r\n            car_make: \"\",\r\n            car_model: \"\",\r\n            extra_services: [],\r\n            seat_count: \"\",\r\n            from_region: \"\",\r\n            to_region: \"\"\r\n        },\r\n        validate,\r\n        onSubmit: (values) => {\r\n            sendAllInfo()\r\n        },\r\n    });\r\n\r\n    const [Pages, setPages] = useState([]);\r\n    const [activeItem, setActiveItem] = useState(1);\r\n    const [links, setLinks] = useState({});\r\n\r\n    const visiblePages = [];\r\n    const totalPages = Pages.length;\r\n\r\n    if (totalPages <= 7) {\r\n        visiblePages.push(...Pages.map((_, index) => index + 1));\r\n    } else {\r\n        visiblePages.push(1);\r\n\r\n        if (activeItem > 3) {\r\n            visiblePages.push(\"...\");\r\n        }\r\n\r\n        for (let i = Math.max(2, activeItem - 1); i <= Math.min(totalPages - 1, activeItem + 1); i++) {\r\n            visiblePages.push(i);\r\n        }\r\n\r\n        if (activeItem < totalPages - 2) {\r\n            visiblePages.push(\"...\");\r\n        }\r\n\r\n        visiblePages.push(totalPages);\r\n    }\r\n\r\n    const getList = (url = null, page = 1) => {\r\n        setLoader(true);\r\n        const main = url ? url : `${value.url}/dashboard/driver/?page=${page}`;\r\n        axios.get(main, {\r\n            headers: {\r\n                \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\r\n            }\r\n        }).then((response) => {\r\n            setDriversList(response.data.results);\r\n            setLinks(response.data.links);\r\n            setPages(response.data.links.pages);\r\n            setActiveItem(page);\r\n        }).finally(() => {\r\n            setLoader(false);\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        getList();\r\n        axios.get(`${value.url}/dashboard/carcategory/`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setCar_categories(response.data);\r\n        })\r\n\r\n        axios.get(`${value.url}/dashboard/carservice/`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setCar_service(response.data);\r\n        })\r\n\r\n        axios.get(`${value.url}/dashboard/carmake/`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setCar_make(response.data);\r\n        })\r\n\r\n        axios.get(`${value.url}/dashboard/carcolor/`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setCar_colors(response.data);\r\n        })\r\n\r\n        axios.get(`${value.url}/dashboard/extraservices/`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setExtra_servicesList(response.data);\r\n        })\r\n\r\n        axios.get(`${value.url}/dashboard/region/`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setRegions(response.data);\r\n        })\r\n\r\n    }, []);\r\n\r\n    const getCarNames = (id) => {\r\n        axios.get(`${value.url}/dashboard/carmake/${id}/`, {\r\n            headers: {\r\n                \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\r\n            }\r\n        }).then((response) => {\r\n            setCar_model(response.data);\r\n        })\r\n    }\r\n\r\n    const getInputPhoto = (event) => {\r\n        const file = event.target.files[0];\r\n        setProfileImage(file);\r\n    };\r\n\r\n    const sendAllInfo = () => {\r\n        const formData = new FormData();\r\n        let user = {\r\n            role: \"driver\",\r\n            first_name: formik.values.first_name,\r\n            last_name: formik.values.last_name,\r\n            phone: formik.values.phone,\r\n            gender: luggage,\r\n            is_verified: true,\r\n            is_confirmed: true\r\n        }\r\n        let driver = {\r\n            car_make: formik.values.car_make,\r\n            car_model: formik.values.car_model,\r\n            car_color: formik.values.car_color,\r\n            car_number: formik.values.car_number,\r\n            seat_count: formik.values.seat_count,\r\n            birth_date: formik.values.birth_date,\r\n            extra_services: formik.values.extra_services,\r\n            from_region: formik.values.from_region,\r\n            to_region: formik.values.to_region\r\n        }\r\n\r\n        for (let key in user) {\r\n            formData.append(key, user[key]);\r\n        }\r\n\r\n        for (let key in driver) {\r\n            if (Array.isArray(driver[key])) {\r\n                driver[key].forEach(value => {\r\n                    formData.append(`driver.${key}`, value);\r\n                });\r\n            } else {\r\n                formData.append(`driver.${key}`, driver[key]);\r\n            }\r\n        }\r\n\r\n        if (profileImage) {\r\n            formData.append('profile_image', profileImage);\r\n        }\r\n\r\n        if (!driverId) {\r\n            axios.post(`${value.url}/dashboard/driver/`, formData,\r\n                {\r\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n                }).then((response) => {\r\n                setModalShow({status: \"\", show: false})\r\n                getList()\r\n                formik.resetForm();\r\n            })\r\n        }\r\n\r\n        if (driverId) {\r\n            axios.patch(`${value.url}/dashboard/driver/${driverId}/`, formData,\r\n                {\r\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n                }).then((response) => {\r\n                setModalShow({status: \"\", show: false})\r\n                getList(null, activeItem)\r\n                formik.resetForm();\r\n            })\r\n        }\r\n    }\r\n\r\n    const editInfo = (id) => {\r\n\r\n        axios.get(`${value.url}/dashboard/driver/${id}/`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            formik.setValues({\r\n                phone: response.data.user.phone,\r\n                first_name: response.data.user.first_name,\r\n                last_name: response.data.user.last_name,\r\n                birth_date: response.data.birth_date,\r\n                car_number: response.data.car_number,\r\n                car_color: response.data.car_color && response.data.car_color.id,\r\n                car_make: response.data.car_make && response.data.car_make.id,\r\n                car_model: response.data.car_model && response.data.car_model.id,\r\n                extra_services: response.data.extra_services.length > 0 ? response.data.extra_services.map(service => service.id) : [],\r\n                seat_count: response.data.seat_count,\r\n                from_region: response.data.from_region && response.data.from_region.id,\r\n                to_region: response.data.to_region && response.data.to_region.id,\r\n            });\r\n\r\n            setLuggage(response.data.user.gender)\r\n            if (response.data.car_make) {\r\n                getCarNames(response.data.car_make.id)\r\n            }\r\n        })\r\n        setDriverId(id)\r\n    }\r\n\r\n    const blockDriver = (status) => {\r\n        if (status === \"block\") {\r\n            if (reason.trim().length > 0) {\r\n                axios.post(`${value.url}/dashboard/driver/block-driver/`,\r\n                    {driver_id: driverId, reason}, {\r\n                        headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n                    }).then((response) => {\r\n                    setModalShow({status: \"\", show: false})\r\n                    getList(null, activeItem)\r\n                    setReason(\"\")\r\n                })\r\n            } else alert(\"Bloklash sababini kiriting!\")\r\n        }\r\n\r\n        if (status === \"unblock\") {\r\n            axios.post(`${value.url}/dashboard/driver/unblock-driver/`,\r\n                {driver_id: driverId}, {\r\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n                }).then((response) => {\r\n                setModalShow({status: \"\", show: false})\r\n                getList(null, activeItem)\r\n                setReason(\"\")\r\n            })\r\n        }\r\n    }\r\n\r\n    const handleCheckboxChangeService = (serviceId) => {\r\n        setCarServiceId((prevSelected) =>\r\n            prevSelected.includes(serviceId)\r\n                ? prevSelected.filter((id) => id !== serviceId)\r\n                : [...prevSelected, serviceId]\r\n        );\r\n    };\r\n\r\n    const handleCheckboxChangeCategory = (serviceId) => {\r\n        setCarCategoriesId((prevSelected) =>\r\n            prevSelected.includes(serviceId)\r\n                ? prevSelected.filter((id) => id !== serviceId)\r\n                : [...prevSelected, serviceId]\r\n        );\r\n    };\r\n\r\n    const verify = () => {\r\n        let driver = {\r\n            driver_id: driverId,\r\n            available_services: car_serviceId,\r\n            available_categories: car_categoriesId\r\n        }\r\n\r\n        axios.post(`${value.url}/dashboard/driver/confirm-driver/`,\r\n            driver, {\r\n                headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n            }).then((response) => {\r\n            setModalShow({status: \"\", show: false})\r\n\r\n            setDriversList(prevList =>\r\n                prevList.map(item =>\r\n                    item.id === driverId\r\n                        ? {...item, is_confirmed: true}\r\n                        : item\r\n                )\r\n            );\r\n\r\n        })\r\n    }\r\n\r\n    const getInformation = (id) => {\r\n        setModalShow({show: true, status: \"car-information\"});\r\n\r\n        axios.get(`${value.url}/dashboard/driver/${id}/`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setCarInformation(response.data);\r\n        })\r\n    }\r\n\r\n    const handleAddImage = (e) => {\r\n        const file = e.target.files[0];\r\n        if (file) {\r\n            const reader = new FileReader();\r\n            reader.onloadend = () => {\r\n                setCar_images((prevImages) => [\r\n                    ...prevImages,\r\n                    {\r\n                        preview: reader.result,\r\n                        file: file\r\n                    }\r\n                ]);\r\n            };\r\n            reader.readAsDataURL(file);\r\n        }\r\n        e.target.value = null;\r\n    };\r\n\r\n    const getCarImages = (id) => {\r\n        setModalShow({show: true, status: \"car-photos\"});\r\n        setDriverId(id)\r\n        axios.post(`${value.url}/dashboard/driver/car-images/`, {driver_id: id}, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setBase_Car_images(response.data)\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    const handleDeleteImageBase = (id) => {\r\n        axios.post(`${value.url}/dashboard/driver/delete-car-image/`, {driver_car_image: id}, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            getCarImages(driverId)\r\n        })\r\n    };\r\n\r\n    const handleDeleteImage = (index) => {\r\n        setCar_images((prevImages) => prevImages.filter((_, i) => i !== index));\r\n    };\r\n\r\n    const addCar_Images = () => {\r\n        const formData = new FormData();\r\n        formData.append('driver', driverId);\r\n\r\n        car_images.forEach((image, index) => {\r\n            formData.append('car_images', image.file);\r\n        });\r\n\r\n        axios.post(`${value.url}/dashboard/driver/update-image/`, formData, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setModalShow({status: \"\", show: false})\r\n            setCar_images([])\r\n        })\r\n    }\r\n\r\n    const handleAddImageDoc = (e) => {\r\n        const file = e.target.files[0];\r\n        if (file) {\r\n            const reader = new FileReader();\r\n            reader.onloadend = () => {\r\n                setDocImages((prevImages) => [\r\n                    ...prevImages,\r\n                    {\r\n                        preview: reader.result,\r\n                        file: file\r\n                    }\r\n                ]);\r\n            };\r\n            reader.readAsDataURL(file);\r\n        }\r\n        e.target.value = null;\r\n    };\r\n\r\n    const getDocsImages = (id) => {\r\n        setModalShow({show: true, status: \"car-docs\"});\r\n        setDriverId(id)\r\n        axios.post(`${value.url}/dashboard/driver/document-images/`, {driver_id: id}, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setBaseDocImages(response.data)\r\n        })\r\n    }\r\n\r\n    const handleDeleteImageDocsBase = (id) => {\r\n        axios.post(`${value.url}/dashboard/driver/delete-document-image/`, {driver_document_image: id}, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            getDocsImages(driverId)\r\n        })\r\n    };\r\n\r\n    const handleDeleteImageDocs = (index) => {\r\n        setDocImages((prevImages) => prevImages.filter((_, i) => i !== index));\r\n    };\r\n\r\n    const addCar_Images_Docs = () => {\r\n        const formData = new FormData();\r\n        formData.append('driver', driverId);\r\n\r\n        doc_images.forEach((image, index) => {\r\n            formData.append('document_images', image.file);\r\n        });\r\n\r\n        axios.post(`${value.url}/dashboard/driver/update-image/`, formData, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setModalShow({status: \"\", show: false})\r\n            setCar_images([])\r\n            setDocImages([])\r\n        })\r\n    }\r\n\r\n    const delDriver = (id) => {\r\n        setLoader(true)\r\n        const isConfirmed = window.confirm(\"Rostdan ham ushbu haydovchini o‘chirmoqchimisiz?\");\r\n        if (isConfirmed) {\r\n            axios.delete(`${value.url}/dashboard/driver/${id}/`, {\r\n                headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n            }).then((response) => {\r\n                getList(null, activeItem)\r\n            }).catch((error) => {\r\n                console.log(error);\r\n            }).finally(() => {\r\n                setLoader(false);\r\n            });\r\n        } else {\r\n            setLoader(false);\r\n        }\r\n    };\r\n\r\n    const filterData = () => {\r\n        setLoader(true);\r\n        let page = 1\r\n        axios.get(`${value.url}/dashboard/driver/?phone=${getSearchText}&status=${confirmFilter}&from_region=${from}&to_region=${to}`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setDriversList(response.data.results);\r\n            setLinks(response.data.links);\r\n            setPages(response.data.links.pages);\r\n            setActiveItem(page);\r\n        }).finally(() => {\r\n            setLoader(false);\r\n        });\r\n    }\r\n\r\n    useOnKeyPress(filterData, 'Enter');\r\n\r\n    return <div className=\"drivers-container\">\r\n        <CSSTransition\r\n            in={modalShow.show}\r\n            nodeRef={nodeRef}\r\n            timeout={300}\r\n            classNames=\"alert\"\r\n            unmountOnExit\r\n        >\r\n            <div className=\"modal-sloy\">\r\n                <div ref={nodeRef} className=\"modal-card\">\r\n\r\n                    {modalShow.status === \"add-driver\" && (\r\n                        <div className=\"add-driver\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img\r\n                                    onClick={() => {\r\n                                        setModalShow({status: \"\", show: false})\r\n                                        formik.resetForm();\r\n                                    }}\r\n                                    src=\"./images/admin/x.png\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"title\">Haydovchi qo'shish</div>\r\n\r\n                            <div className=\"title-form\">Haydovchi ma'lumotlari:</div>\r\n\r\n                            <div className=\"form-container\">\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides-file\">\r\n                                        <input onChange={getInputPhoto} type=\"file\"/>\r\n                                        <div className={`sloy-image ${profileImage ? \"active\" : \"\"}`}>\r\n                                            Profil rasmi\r\n                                            <img src=\"./images/admin/image.png\" alt=\"\"/>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.first_name === \"Required\"}\r\n                                            value={formik.values.first_name}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"first_name\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Ism\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.last_name === \"Required\"}\r\n                                            value={formik.values.last_name}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"last_name\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Familiya\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.phone === \"Required\"}\r\n                                            value={formik.values.phone}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"phone\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Telefon raqam\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                    <div className=\"select-sides-time\">\r\n                                        <label htmlFor=\"\">Tug'ilgan sana:</label>\r\n                                        <input\r\n                                            className={`working_time ${formik.errors.birth_date === \"Required\" ? \"working_time_required\" : \"\"}`}\r\n                                            name=\"birth_date\" onChange={formik.handleChange}\r\n                                            value={formik.values.birth_date}\r\n                                            type=\"date\"/>\r\n                                    </div>\r\n                                    <div className=\"select-sides\">\r\n                                        <div className=\"title-on\">\r\n                                            Jinsi:\r\n                                        </div>\r\n                                        <div className=\"on-of\">\r\n                                            <div onClick={() => setLuggage(\"male\")}\r\n                                                 className={`of ${luggage === \"male\" ? \"on\" : \"\"}`}>\r\n                                                Erkak\r\n                                            </div>\r\n                                            <div onClick={() => setLuggage(\"female\")}\r\n                                                 className={`of ${luggage === \"female\" ? \"on\" : \"\"}`}>\r\n                                                Ayol\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"title-form\">Avtomobil ma'lumotlari:</div>\r\n\r\n                            <div className=\"form-container\">\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Avtomobil modeli</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.car_make === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.car_make}\r\n                                                name=\"car_make\"\r\n                                                label=\"Avtomobil modeli\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {\r\n                                                    car_make.map((item, index) => {\r\n                                                        return <MenuItem onClick={() => getCarNames(item.id)}\r\n                                                                         key={index}\r\n                                                                         value={item.id}>\r\n                                                            {item.translations[i18next.language].name}\r\n                                                        </MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Avtomobil nomi</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.car_model === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.car_model}\r\n                                                name=\"car_model\"\r\n                                                label=\"Avtomobil nomi\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {\r\n                                                    car_model.map((item, index) => {\r\n                                                        return <MenuItem key={index}\r\n                                                                         value={item.id}>\r\n                                                            {item.translations[i18next.language].name}\r\n                                                        </MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.car_number === \"Required\"}\r\n                                            value={formik.values.car_number}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"car_number\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Avtomobil raqami\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"select-box \">\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Avtomobil rangi</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.car_color === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                name=\"car_color\"\r\n                                                label=\"Avtomobil rangi\"\r\n                                                value={formik.values.car_color}\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {\r\n                                                    car_colors.map((item, index) => {\r\n                                                        return <MenuItem key={index}\r\n                                                                         value={item.id}>\r\n                                                            {item.translations[i18next.language].name}\r\n                                                        </MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <TextField\r\n                                                id=\"seat_count\"\r\n                                                name=\"seat_count\"\r\n                                                label=\"O‘rindiqlar soni\"\r\n                                                type=\"number\"\r\n                                                value={formik.values.seat_count}\r\n                                                onChange={formik.handleChange}\r\n                                                error={formik.touched.seat_count && Boolean(formik.errors.seat_count)}\r\n                                                helperText={formik.touched.seat_count && formik.errors.seat_count}\r\n                                                inputProps={{min: 1}}\r\n                                                fullWidth\r\n                                                size=\"small\"\r\n                                            />\r\n                                        </FormControl>\r\n                                    </div>\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, width: \"100%\"}} className=\"selectMui\" size=\"small\">\r\n                                            <InputLabel id=\"demo-multiple-checkbox-label\">Xizmatlar</InputLabel>\r\n\r\n                                            <Select\r\n                                                error={formik.errors.extra_services === \"Required\"}\r\n                                                name=\"extra_services\"\r\n                                                labelId=\"demo-multiple-checkbox-label\"\r\n                                                id=\"demo-multiple-checkbox\"\r\n                                                multiple\r\n                                                value={formik.values.extra_services}\r\n                                                onChange={(event) => {\r\n                                                    const {value} = event.target;\r\n                                                    formik.setFieldValue(\r\n                                                        \"extra_services\",\r\n                                                        typeof value === 'string' ? value.split(',') : value\r\n                                                    );\r\n                                                }}\r\n                                                input={<OutlinedInput label=\"Xizmatlar\"/>}\r\n                                                renderValue={(selected) =>\r\n                                                    selected\r\n                                                        .map((id) => {\r\n                                                            const item = extra_servicesList.find(i => i.id === id);\r\n                                                            return item ? item.translations[i18next.language].name : '';\r\n                                                        })\r\n                                                        .join(', ')\r\n                                                }\r\n                                                MenuProps={MenuProps}\r\n                                            >\r\n                                                {extra_servicesList.map((item) => (\r\n                                                    <MenuItem key={item.id} value={item.id}>\r\n                                                        <Checkbox\r\n                                                            checked={formik.values.extra_services.includes(item.id)}\r\n                                                        />\r\n                                                        <ListItemText\r\n                                                            primary={item.translations[i18next.language].name}\r\n                                                        />\r\n                                                    </MenuItem>\r\n                                                ))}\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"title-form\">Asosan qaysi yo'nalishda harakat qilasiz:</div>\r\n                            <div className=\"form-container\">\r\n                                <div className=\"select-box start\">\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Qayerdan</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.from_region === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.from_region}\r\n                                                name=\"from_region\"\r\n                                                label=\"Qayerdan\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {\r\n                                                    regions.map((item, index) => {\r\n                                                        return <MenuItem key={index}\r\n                                                                         value={item.id}>\r\n                                                            {item.translations[i18next.language].name}\r\n                                                        </MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Qayerga</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.to_region === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.to_region}\r\n                                                name=\"to_region\"\r\n                                                label=\"Qayerga\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {\r\n                                                    regions.map((item, index) => {\r\n                                                        return <MenuItem key={index}\r\n                                                                         value={item.id}>\r\n                                                            {item.translations[i18next.language].name}\r\n                                                        </MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div onClick={() => {\r\n                                formik.handleSubmit()\r\n                            }} className=\"add-btn\">\r\n                                <img src=\"./images/admin/add.png\" alt=\"\"/>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalShow.status === \"driver-photo\" && (\r\n                        <div className=\"driver-photo\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img\r\n                                    onClick={() => setModalShow({status: \"\", show: false})}\r\n                                    src=\"./images/admin/x.png\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"photo\">\r\n                                <img src={driverPhoto} alt=\"\"/>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalShow.status === \"car-information\" && (\r\n                        <div className=\"car-information\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img onClick={() => setModalShow({status: \"\", show: false})}\r\n                                     src=\"./images/admin/x.png\"\r\n                                     alt=\"\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"title\">\r\n                                Avtomobil ma'lumotlari\r\n                            </div>\r\n                            {carInformation &&\r\n                                <div className=\"information\">\r\n                                    <div className=\"info\">\r\n                                        <div className=\"title\">Tugilgan sanasi:</div>\r\n                                        <div\r\n                                            className=\"text\">{carInformation.birth_date && carInformation.birth_date}</div>\r\n                                    </div>\r\n                                    <div className=\"info\">\r\n                                        <div className=\"title\">Jinsi:</div>\r\n                                        <div\r\n                                            className=\"text\">\r\n                                            {carInformation.user && carInformation.user.gender === \"male\" && \"Erkak\"}\r\n                                            {carInformation.user && carInformation.user.gender === \"female\" && \"Ayol\"}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"info\">\r\n                                        <div className=\"title\">Reyting:</div>\r\n                                        <div\r\n                                            className=\"text\">{carInformation.user && carInformation.user.rate}</div>\r\n                                    </div>\r\n                                    <div className=\"info\">\r\n                                        <div className=\"title\">O'rindiqlar soni:</div>\r\n                                        <div\r\n                                            className=\"text\">{carInformation.seat_count && carInformation.seat_count}</div>\r\n                                    </div>\r\n                                    <div className=\"info\">\r\n                                        <div className=\"title\">Yakunlagan buyurtmalar:</div>\r\n                                        <div\r\n                                            className=\"text\">{carInformation.user && carInformation.user.finished_orders_count}</div>\r\n                                    </div>\r\n                                    <div className=\"info\">\r\n                                        <div className=\"title\">Qo'shimcha xizmatlar:</div>\r\n                                        <div className=\"text\">\r\n                                            {carInformation.extra_services && carInformation.extra_services.map((item, index) => {\r\n                                                return <span key={index}>\r\n                                                    {item.translations[i18next.language].name},\r\n                                                </span>\r\n                                            })}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>}\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalShow.status === \"blocked\" && (\r\n                        <div className=\"blocked\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img onClick={() => {\r\n                                    setModalShow({status: \"\", show: false})\r\n                                    setReason(\"\")\r\n                                }}\r\n                                     src=\"./images/admin/x.png\"\r\n                                     alt=\"\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"title\">\r\n                                Haydovchini bloklash\r\n                            </div>\r\n\r\n                            <div className=\"reason-text\">\r\n                                <textarea value={reason} onChange={(e) => setReason(e.target.value)}\r\n                                          placeholder=\"Blok qilish sababini kiriting...\" name=\"reason\"\r\n                                          id=\"reason\"></textarea>\r\n\r\n                                <div className=\"buttons\">\r\n                                    <div onClick={() => {\r\n                                        blockDriver(\"unblock\")\r\n                                    }}\r\n                                         className=\"cancel\">Bekor qilish\r\n                                    </div>\r\n\r\n                                    <div onClick={() => {\r\n                                        blockDriver(\"block\")\r\n                                    }} className=\"success\">Bloklash\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalShow.status === \"edit-driver\" && (\r\n                        <div className=\"edit-driver\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img\r\n                                    onClick={() => {\r\n                                        setModalShow({status: \"\", show: false})\r\n                                        formik.resetForm();\r\n                                    }}\r\n                                    src=\"./images/admin/x.png\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"title\">Haydovchi malumotlarini tahrirlash</div>\r\n\r\n                            <div className=\"title-form\">Haydovchi ma'lumotlari:</div>\r\n\r\n                            <div className=\"form-container\">\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides-file\">\r\n                                        <input onChange={getInputPhoto} type=\"file\"/>\r\n                                        <div className={`sloy-image ${profileImage ? \"active\" : \"\"}`}>\r\n                                            Profil rasmi\r\n                                            <img src=\"./images/admin/image.png\" alt=\"\"/>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.first_name === \"Required\"}\r\n                                            value={formik.values.first_name}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"first_name\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Ism\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.last_name === \"Required\"}\r\n                                            value={formik.values.last_name}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"last_name\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Familiya\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.phone === \"Required\"}\r\n                                            value={formik.values.phone}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"phone\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Telefon raqam\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                    <div className=\"select-sides-time\">\r\n                                        <label htmlFor=\"\">Tug'ilgan sana:</label>\r\n                                        <input\r\n                                            className={`working_time ${formik.errors.birth_date === \"Required\" ? \"working_time_required\" : \"\"}`}\r\n                                            name=\"birth_date\" onChange={formik.handleChange}\r\n                                            value={formik.values.birth_date}\r\n                                            type=\"date\"/>\r\n                                    </div>\r\n                                    <div className=\"select-sides\">\r\n                                        <div className=\"title-on\">\r\n                                            Jinsi:\r\n                                        </div>\r\n                                        <div className=\"on-of\">\r\n                                            <div onClick={() => setLuggage(\"male\")}\r\n                                                 className={`of ${luggage === \"male\" ? \"on\" : \"\"}`}>\r\n                                                Erkak\r\n                                            </div>\r\n                                            <div onClick={() => setLuggage(\"female\")}\r\n                                                 className={`of ${luggage === \"female\" ? \"on\" : \"\"}`}>\r\n                                                Ayol\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"title-form\">Avtomobil ma'lumotlari:</div>\r\n\r\n                            <div className=\"form-container\">\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Avtomobil modeli</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.car_make === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.car_make}\r\n                                                name=\"car_make\"\r\n                                                label=\"Avtomobil modeli\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {\r\n                                                    car_make.map((item, index) => {\r\n                                                        return <MenuItem onClick={() => getCarNames(item.id)}\r\n                                                                         key={index}\r\n                                                                         value={item.id}>\r\n                                                            {item.translations[i18next.language].name}\r\n                                                        </MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Avtomobil nomi</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.car_model === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.car_model}\r\n                                                name=\"car_model\"\r\n                                                label=\"Avtomobil nomi\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {\r\n                                                    car_model.map((item, index) => {\r\n                                                        return <MenuItem key={index}\r\n                                                                         value={item.id}>\r\n                                                            {item.translations[i18next.language].name}\r\n                                                        </MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.car_number === \"Required\"}\r\n                                            value={formik.values.car_number}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"car_number\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Avtomobil raqami\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"select-box \">\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Avtomobil rangi</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.car_color === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                name=\"car_color\"\r\n                                                label=\"Avtomobil rangi\"\r\n                                                value={formik.values.car_color}\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {\r\n                                                    car_colors.map((item, index) => {\r\n                                                        return <MenuItem key={index}\r\n                                                                         value={item.id}>\r\n                                                            {item.translations[i18next.language].name}\r\n                                                        </MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <TextField\r\n                                                id=\"seat_count\"\r\n                                                name=\"seat_count\"\r\n                                                label=\"O‘rindiqlar soni\"\r\n                                                type=\"number\"\r\n                                                value={formik.values.seat_count}\r\n                                                onChange={formik.handleChange}\r\n                                                error={formik.touched.seat_count && Boolean(formik.errors.seat_count)}\r\n                                                helperText={formik.touched.seat_count && formik.errors.seat_count}\r\n                                                inputProps={{min: 1}}\r\n                                                fullWidth\r\n                                                size=\"small\"\r\n                                            />\r\n                                        </FormControl>\r\n                                    </div>\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, width: \"100%\"}} className=\"selectMui\" size=\"small\">\r\n                                            <InputLabel id=\"demo-multiple-checkbox-label\">Xizmatlar</InputLabel>\r\n\r\n                                            <Select\r\n                                                error={formik.errors.extra_services === \"Required\"}\r\n                                                name=\"extra_services\"\r\n                                                labelId=\"demo-multiple-checkbox-label\"\r\n                                                id=\"demo-multiple-checkbox\"\r\n                                                multiple\r\n                                                value={formik.values.extra_services}\r\n                                                onChange={(event) => {\r\n                                                    const {value} = event.target;\r\n                                                    formik.setFieldValue(\r\n                                                        \"extra_services\",\r\n                                                        typeof value === 'string' ? value.split(',') : value\r\n                                                    );\r\n                                                }}\r\n                                                input={<OutlinedInput label=\"Xizmatlar\"/>}\r\n                                                renderValue={(selected) =>\r\n                                                    selected\r\n                                                        .map((id) => {\r\n                                                            const item = extra_servicesList.find(i => i.id === id);\r\n                                                            return item ? item.translations[i18next.language].name : '';\r\n                                                        })\r\n                                                        .join(', ')\r\n                                                }\r\n                                                MenuProps={MenuProps}\r\n                                            >\r\n                                                {extra_servicesList.map((item) => (\r\n                                                    <MenuItem key={item.id} value={item.id}>\r\n                                                        <Checkbox\r\n                                                            checked={formik.values.extra_services.includes(item.id)}\r\n                                                        />\r\n                                                        <ListItemText\r\n                                                            primary={item.translations[i18next.language].name}\r\n                                                        />\r\n                                                    </MenuItem>\r\n                                                ))}\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"title-form\">Asosan qaysi yo'nalishda harakat qilasiz:</div>\r\n                            <div className=\"form-container\">\r\n                                <div className=\"select-box start\">\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Qayerdan</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.from_region === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.from_region}\r\n                                                name=\"from_region\"\r\n                                                label=\"Qayerdan\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {\r\n                                                    regions.map((item, index) => {\r\n                                                        return <MenuItem key={index}\r\n                                                                         value={item.id}>\r\n                                                            {item.translations[i18next.language].name}\r\n                                                        </MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Qayerga</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.to_region === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.to_region}\r\n                                                name=\"to_region\"\r\n                                                label=\"Qayerga\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {\r\n                                                    regions.map((item, index) => {\r\n                                                        return <MenuItem key={index}\r\n                                                                         value={item.id}>\r\n                                                            {item.translations[i18next.language].name}\r\n                                                        </MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div onClick={() => {\r\n                                formik.handleSubmit()\r\n                            }} className=\"add-btn\">\r\n                                <img src=\"./images/admin/checkmark.png\" alt=\"\"/>\r\n                            </div>\r\n\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalShow.status === \"driver-service\" && (\r\n                        <div className=\"driver-service\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img onClick={() => setModalShow({status: \"\", show: false})}\r\n                                     src=\"./images/admin/x.png\"\r\n                                     alt=\"\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"bottom-side\">\r\n                                <div className=\"left-side\">\r\n                                    <div className=\"title\">\r\n                                        Yo'nalish\r\n                                    </div>\r\n                                    <div className=\"form-wrapper\">\r\n                                        {\r\n                                            car_service.map((category, index) => (\r\n                                                <label key={index}>\r\n                                                    <input onChange={() => handleCheckboxChangeService(category.id)}\r\n                                                           checked={car_serviceId.includes(category.id)} type=\"checkbox\"\r\n                                                           name=\"agree\"/>\r\n                                                    {category.translations[i18next.language].name}\r\n                                                </label>\r\n                                            ))\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"right-side\">\r\n                                    <div className=\"title\">\r\n                                        Tariflar\r\n                                    </div>\r\n                                    <div className=\"form-wrapper\">\r\n                                        {\r\n                                            car_categories.map((category, index) => (\r\n                                                <label key={index}>\r\n                                                    <input onChange={() => handleCheckboxChangeCategory(category.id)}\r\n                                                           checked={car_categoriesId.includes(category.id)}\r\n                                                           type=\"checkbox\"\r\n                                                           name=\"agree\"/>\r\n                                                    {category.translations[i18next.language].name}\r\n                                                </label>\r\n                                            ))\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div onClick={verify} className=\"btn-success\">\r\n                                Tasdiqlash\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalShow.status === \"car-photos\" && (\r\n                        <div className=\"car-photos\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img onClick={() => setModalShow({status: \"\", show: false})}\r\n                                     src=\"./images/admin/x.png\"\r\n                                     alt=\"\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"title\">\r\n                                Avtomobil rasmlari\r\n                            </div>\r\n                            <div className=\"form-wrapper\">\r\n                                {base_car_images.map((image, index) => (\r\n                                    <div key={index} className=\"photo\">\r\n                                        <img onClick={() => {\r\n                                            setCurrentImage(image.image);\r\n                                            setTimeout(() => setIsOpen(true), 100);\r\n                                        }} src={image.image} alt={`car-${index}`}/>\r\n                                        <div className=\"del-icon\" onClick={() => handleDeleteImageBase(image.id)}>\r\n                                            <img src=\"./images/admin/delete.png\" alt=\"delete\"/>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                                {car_images.map((image, index) => (\r\n                                    <div key={index} className=\"photo\">\r\n                                        <img onClick={() => {\r\n                                            setCurrentImage(image.preview);\r\n                                            setTimeout(() => setIsOpen(true), 100);\r\n                                        }} src={image.preview} alt={`car-${index}`}/>\r\n                                        <div className=\"del-icon\" onClick={() => handleDeleteImage(index)}>\r\n                                            <img src=\"./images/admin/delete.png\" alt=\"delete\"/>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                                <div className=\"add-icon\">\r\n                                    <input onChange={handleAddImage} type=\"file\"/>\r\n                                    <img src=\"./images/admin/image.png\" alt=\"\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div onClick={addCar_Images} className=\"btn-success\">\r\n                                Tasdiqlash\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalShow.status === \"car-docs\" && (\r\n                        <div className=\"car-docs\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img onClick={() => setModalShow({status: \"\", show: false})}\r\n                                     src=\"./images/admin/x.png\"\r\n                                     alt=\"\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"title\">\r\n                                Xujjatlar rasmlari\r\n                            </div>\r\n                            <div className=\"form-wrapper\">\r\n                                {base_doc_images.map((image, index) => (\r\n                                    <div key={index} className=\"photo\">\r\n                                        <img onClick={() => {\r\n                                            setCurrentImage(image.image);\r\n                                            setTimeout(() => setIsOpen(true), 100);\r\n                                        }} src={image.image} alt={`car-${index}`}/>\r\n                                        <div className=\"del-icon\" onClick={() => handleDeleteImageDocsBase(image.id)}>\r\n                                            <img src=\"./images/admin/delete.png\" alt=\"delete\"/>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                                {doc_images.map((image, index) => (\r\n                                    <div key={index} className=\"photo\">\r\n                                        <img onClick={() => {\r\n                                            setCurrentImage(image.preview);\r\n                                            setTimeout(() => setIsOpen(true), 100);\r\n                                        }} src={image.preview} alt={`car-${index}`}/>\r\n                                        <div className=\"del-icon\" onClick={() => handleDeleteImageDocs(index)}>\r\n                                            <img src=\"./images/admin/delete.png\" alt=\"delete\"/>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n\r\n                                <div className=\"add-icon\">\r\n                                    <input onChange={handleAddImageDoc} type=\"file\"/>\r\n                                    <img src=\"./images/admin/image.png\" alt=\"\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div onClick={addCar_Images_Docs} className=\"btn-success\">\r\n                                Tasdiqlash\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </CSSTransition>\r\n\r\n        {isOpen && (\r\n            <Lightbox\r\n                mainSrc={currentImage}\r\n                onCloseRequest={() => setIsOpen(false)}\r\n            />\r\n        )}\r\n\r\n        <div className=\"header\">\r\n            <div className=\"left-side\">\r\n                <div className=\"search-box\">\r\n                    <img src=\"./images/admin/search.png\" alt=\"\"/>\r\n                    <input value={getSearchText} onChange={(e) => setGetSearchText(e.target.value)}\r\n                           placeholder=\"Telefon raqam kiriting\"\r\n                           type=\"text\"/>\r\n                    {getSearchText &&\r\n                        <img style={{cursor: \"pointer\"}} onClick={() => setGetSearchText(\"\")} src=\"./images/close.png\"\r\n                             alt=\"close\"/>}\r\n                </div>\r\n\r\n                <div className=\"select-sides\">\r\n                    <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                        <InputLabel id=\"confirm-filter-label\">Holat</InputLabel>\r\n                        <Select\r\n                            labelId=\"confirm-filter-label\"\r\n                            id=\"confirm-filter\"\r\n                            value={confirmFilter}\r\n                            label=\"Holat\"\r\n                            onChange={(e) => setConfirmFilter(e.target.value)}\r\n                        >\r\n                            <MenuItem value=\"\">Barchasi</MenuItem>\r\n                            <MenuItem value=\"1\">Tasdiqlangan</MenuItem>\r\n                            <MenuItem value=\"0\">Tasdiqlanmagan</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"filter-wrapper\">\r\n                <div className=\"select-sides\">\r\n                    <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                        <InputLabel id=\"demo-select-large-label\">Qayerdan</InputLabel>\r\n                        <Select\r\n                            labelid=\"demo-select-small-label\"\r\n                            id=\"demo-select-small\"\r\n                            value={from}\r\n                            label=\"Qayerdan\"\r\n                            name=\"from\"\r\n                            onChange={(e) => setFrom(e.target.value)}\r\n                        >\r\n                            <MenuItem value=\"\">\r\n                                -- Barchasi --\r\n                            </MenuItem>\r\n\r\n                            {\r\n                                regions.map((item, index) => {\r\n                                    return <MenuItem key={index}\r\n                                                     value={item.code}>\r\n                                        {item.translations[i18next.language].name}\r\n                                    </MenuItem>\r\n                                })\r\n                            }\r\n                        </Select>\r\n                    </FormControl>\r\n                </div>\r\n\r\n                <div className=\"select-sides\">\r\n                    <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                        <InputLabel id=\"demo-select-large-label\">Qayerga</InputLabel>\r\n                        <Select\r\n                            labelid=\"demo-select-small-label\"\r\n                            id=\"demo-select-small\"\r\n                            value={to}\r\n                            label=\"Qayerga\"\r\n                            name=\"to\"\r\n                            onChange={(e) => setTo(e.target.value)}\r\n                        >\r\n                            <MenuItem value=\"\">\r\n                                -- Barchasi --\r\n                            </MenuItem>\r\n                            {\r\n                                regions.map((item, index) => {\r\n                                    return <MenuItem key={index}\r\n                                                     value={item.code}>\r\n                                        {item.translations[i18next.language].name}\r\n                                    </MenuItem>\r\n                                })\r\n                            }\r\n                        </Select>\r\n                    </FormControl>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"rigt-side\">\r\n                <div className=\"update-driver\">\r\n                    <img onClick={filterData} src=\"./images/admin/panel.png\" alt=\"changes\"/>\r\n                </div>\r\n\r\n                <div onClick={() => {\r\n                    setModalShow({show: true, status: \"add-driver\"});\r\n                }} className=\"add-driver-btn\">\r\n                    Haydovchi qo'shish\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        {loader ? <LoaderAdmin/> : <div className=\"table-wrapper\">\r\n            <table>\r\n                <thead>\r\n                <tr>\r\n                    <th>№</th>\r\n                    <th>Haydovchi haqida</th>\r\n                    <th>Ro'yxatdan o'tgan sanasi</th>\r\n                    <th>Yo'nalish</th>\r\n                    <th>Mashina</th>\r\n                    <th>Mashina raqami</th>\r\n                    <th>Moshina ma'lumotlari</th>\r\n                    <th>Moshina rasmlari</th>\r\n                    <th>Dokument rasmlari</th>\r\n                    <th>Tasdiqlash</th>\r\n                    <th>Bloklash</th>\r\n                    <th>O'chirish</th>\r\n                    <th></th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {driversList.map((item, index) => {\r\n                    return <tr key={index}>\r\n                        <td>{index + 1}</td>\r\n                        <td className=\"driver-wrapper\">\r\n                            <div className=\"icon-driver\">\r\n                                <img onClick={() => {\r\n                                    setModalShow({show: true, status: \"driver-photo\"});\r\n                                    setDriverPhoto(item.profile_image)\r\n                                }} src={item.profile_image} alt=\"\"/>\r\n                            </div>\r\n                            <div className=\"text-driver\">\r\n                                <div className=\"name\">\r\n                                    {item.user_name && item.user_name}\r\n                                </div>\r\n                                <div className=\"phone\">\r\n                                    {item.phone && item.phone}\r\n                                </div>\r\n                            </div>\r\n                        </td>\r\n                        <td>\r\n                            {item.created_at}\r\n                        </td>\r\n                        <td>\r\n                            {item.from_region && item.from_region.translations[i18next.language].name}\r\n                            --\r\n                            {item.to_region && item.to_region.translations[i18next.language].name}\r\n                        </td>\r\n                        <td>\r\n                            {item.car_color && item.car_color.translations[i18next.language].name}&nbsp;\r\n                            {item.car_make && item.car_make.translations[i18next.language].name} &nbsp;\r\n                            {item.car_model && item.car_model.translations[i18next.language].name}\r\n                        </td>\r\n                        <td>\r\n                            {item.car_number && item.car_number}\r\n                        </td>\r\n                        <td>\r\n                            <div className=\"icon\">\r\n                                <img onClick={() => getInformation(item.id)} src=\"./images/admin/sport-car.png\" alt=\"\"/>\r\n                            </div>\r\n                        </td>\r\n                        <td>\r\n                            <div className=\"icon\">\r\n                                <img onClick={() => getCarImages(item.id)} src=\"./images/admin/car-photo.png\" alt=\"\"/>\r\n                            </div>\r\n                        </td>\r\n                        <td>\r\n                            <div className=\"icon\">\r\n                                <img onClick={() => getDocsImages(item.id)} src=\"./images/admin/document.png\" alt=\"\"/>\r\n                            </div>\r\n                        </td>\r\n                        <td>\r\n                            <div className={item.is_confirmed ? \"icon-check\" : \"icon-check disablet\"}>\r\n                                <img onClick={() => {\r\n                                    setModalShow({show: true, status: \"driver-service\"});\r\n                                    setDriverId(item.id)\r\n                                    setCarServiceId(item.available_services)\r\n                                    setCarCategoriesId(item.available_categories)\r\n                                }} src=\"./images/admin/varify.png\" alt=\"varify\"/>\r\n                            </div>\r\n                        </td>\r\n                        <td>\r\n                            <div className={item.is_block ? \"icon-check\" : \"icon-check disablet\"}>\r\n                                <img onClick={() => {\r\n                                    setModalShow({show: true, status: \"blocked\"});\r\n                                    if (item.is_block) {\r\n                                        setReason(item.reason)\r\n                                    }\r\n                                    setDriverId(item.id)\r\n                                }} src=\"./images/admin/block.png\" alt=\"block\"/>\r\n\r\n                                {item.reason && item.is_block && <div className=\"reason-block\">\r\n                                    <img src=\"./images/admin/warning.png\" alt=\"\"/>\r\n                                    <div className=\"text\">\r\n                                        {item.reason}\r\n                                    </div>\r\n                                </div>}\r\n\r\n                            </div>\r\n                        </td>\r\n                        <td>\r\n                            <div className=\"icon\">\r\n                                <img onClick={() => delDriver(item.id)} src=\"./images/admin/delete.png\" alt=\"\"/>\r\n                            </div>\r\n                        </td>\r\n                        <td>\r\n                        </td>\r\n                        <div className=\"edit-icon\">\r\n                            <img onClick={() => {\r\n                                setModalShow({show: true, status: \"edit-driver\"});\r\n                                editInfo(item.id)\r\n                            }} src=\"./images/admin/edit-tools.png\" alt=\"\"/>\r\n                        </div>\r\n                    </tr>\r\n                })}\r\n                </tbody>\r\n            </table>\r\n        </div>}\r\n\r\n        <div className=\"pagination\">\r\n            <div onClick={() => {\r\n                if (activeItem > 1) {\r\n                    getList(links.previous, activeItem - 1);\r\n                }\r\n            }} className=\"prev\">\r\n                <img src=\"./images/admin/prev.png\" alt=\"Prev\"/>\r\n            </div>\r\n\r\n            {visiblePages.map((item, index) => (\r\n                <div key={index}\r\n                     onClick={() => {\r\n                         if (item !== \"...\") {\r\n                             const pageNumber = item;\r\n                             const pageObj = Pages.find(item_page => item_page[pageNumber]);\r\n                             const pageUrl = pageObj ? pageObj[pageNumber] : null;\r\n\r\n                             getList(pageUrl, item);\r\n                         }\r\n                     }}\r\n                     className={`items ${activeItem === item ? \"active\" : \"\"} `}\r\n                     style={{cursor: item === \"...\" ? \"default\" : \"pointer\"}}>\r\n                    {item}\r\n                </div>\r\n            ))}\r\n\r\n            <div className=\"next\" onClick={() => {\r\n                if (activeItem < totalPages) {\r\n                    getList(links.next, activeItem + 1);\r\n                }\r\n            }}>\r\n                <img src=\"./images/admin/next.png\" alt=\"Next\"/>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Drivers","import \"./style.scss\"\nimport {useContext, useEffect, useRef, useState} from \"react\";\nimport axios from \"axios\";\nimport {MyContext} from \"../../App/App\";\n\nconst ChatDriver = () => {\n    let value = useContext(MyContext);\n    const bodyRef = useRef(null);\n    const [chats, setChats] = useState([]);\n    const [message, setMessage] = useState();\n    const [activeCHat, setActiveChat] = useState(null);\n    const [messageText, setMessageText] = useState(\"\");\n    const [getSearchText, setGetSearchText] = useState(\"\");\n    useEffect(() => {\n        if (bodyRef.current) {\n            bodyRef.current.scrollTop = bodyRef.current.scrollHeight;\n        }\n        axios.get(`${value.url}/dashboard/admin-chat/`, {\n            headers: {\n                Authorization: `Token ${localStorage.getItem(\"token\")}`,\n            },\n        }).then((response) => {\n            setChats(response.data);\n        })\n    });\n\n    const getMessage = (chat) => {\n        setActiveChat(chat)\n        axios.get(`${value.url}/dashboard/admin-chat/${chat.id}/`, {\n            headers: {\n                Authorization: `Token ${localStorage.getItem(\"token\")}`,\n            },\n        }).then((response) => {\n            setMessage(response.data);\n        })\n    }\n\n    const sendMessage = () => {\n        let data = {room: activeCHat.id, message: messageText}\n        axios.post(`${value.url}/dashboard/admin-message/`, data, {\n            headers: {\n                Authorization: `Token ${localStorage.getItem(\"token\")}`,\n            },\n        }).then((response) => {\n            setMessageText(\"\")\n            axios.get(`${value.url}/dashboard/admin-chat/${activeCHat.id}/`, {\n                headers: {\n                    Authorization: `Token ${localStorage.getItem(\"token\")}`,\n                },\n            }).then((response) => {\n                setMessage(response.data);\n            })\n        })\n    }\n\n    const delChat = (id) => {\n        axios.delete(`${value.url}/dashboard/admin-chat/${id}/`, {\n            headers: {\n                Authorization: `Token ${localStorage.getItem(\"token\")}`,\n            },\n        }).then((response) => {\n            setActiveChat(null);\n            axios.get(`${value.url}/dashboard/admin-chat/`, {\n                headers: {\n                    Authorization: `Token ${localStorage.getItem(\"token\")}`,\n                },\n            }).then((response) => {\n                setChats(response.data);\n            })\n        })\n    }\n\n    const verify = (id) => {\n        axios.post(`${value.url}/dashboard/admin-chat/close/`,\n            {chat_id: id}, {\n                headers: {\n                    Authorization: `Token ${localStorage.getItem(\"token\")}`,\n                },\n            }).then((response) => {\n            axios.get(`${value.url}/dashboard/admin-chat/`, {\n                headers: {\n                    Authorization: `Token ${localStorage.getItem(\"token\")}`,\n                },\n            }).then((response) => {\n                setChats(response.data);\n            })\n        })\n    }\n\n    return <div className=\"chat-driver\">\n        <div className=\"left\">\n            <div className=\"header\">\n                <div className=\"search-box\">\n                    <img src=\"./images/admin/search.png\" alt=\"\"/>\n                    <input value={getSearchText} onChange={(e) => setGetSearchText(e.target.value)}\n                           placeholder=\"Telefon raqam kiriting\" type=\"text\"/>\n                </div>\n            </div>\n            <div className=\"drivers-box\">\n                {chats\n                    .filter((item) => {\n                        const searchText = getSearchText.toString().toLowerCase().replace(/\\s+/g, '').replace(/\\+/g, '');\n                        const phoneNumber = item.user_phone.toString().toLowerCase().replace(/\\s+/g, '').replace(/\\+/g, '');\n                        return searchText === \"\" || phoneNumber.includes(searchText);\n                    }).map((chat, index) => {\n                        return <div key={index}\n                                    className={`driver ${activeCHat && activeCHat.id === chat.id ? \"active\" : \"\"}`}>\n                            <div className=\"photo\">\n                                <img src=\"./images/admin/user2.png\" alt=\"\"/>\n                            </div>\n                            <div onClick={() => getMessage(chat)} className=\"left-content\">\n                                <div className=\"name\">{chat.title}</div>\n                                <div className=\"number\">{chat.user_phone}</div>\n                            </div>\n                            <div className=\"buttons\">\n\n                                <img onClick={() => verify(chat.id)} className={chat.closed ? \"closed\" : \"disabled\"}\n                                     src=\"./images/admin/check.png\"\n                                     alt=\"check\"/>\n\n                                <img onClick={() => delChat(chat.id)} src=\"./images/admin/delete.png\" alt=\"delete\"/>\n                            </div>\n                        </div>\n                    })}\n            </div>\n        </div>\n\n        {activeCHat && <div className=\"right\">\n            <div className=\"top\">\n                <div className=\"photo\">\n                    <img src=\"./images/admin/user2.png\" alt=\"\"/>\n                </div>\n                <div className=\"left-content\">\n                    <div className=\"name\">{activeCHat && activeCHat.title}</div>\n                    <div className=\"number\">{activeCHat && activeCHat.user_phone}</div>\n                </div>\n            </div>\n            <div ref={bodyRef} className=\"body\">\n                <div className=\"scroll\">\n                    {message && message.map((message, index) => (\n                        <div key={index}\n                             className={message.author && message.author.is_admin ? \"message-my\" : \"message-driver\"}>\n                            <div className=\"message\">\n                                {message.author && <div className=\"name\">\n                                    {message.author.first_name} &ensp;\n                                    {message.author.last_name}\n                                </div>}\n                                {message.message}\n                                <div className=\"time\">\n                                    {message.time}\n                                </div>\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            </div>\n            <div className=\"bottom\">\n                <input value={messageText} onChange={(e) => setMessageText(e.target.value)} placeholder=\"Xabar...\"\n                       type=\"text\"/>\n                <div onClick={sendMessage} className=\"icon-send\">\n                    <img src=\"./images/admin/message.png\" alt=\"\"/>\n                </div>\n            </div>\n        </div>}\n\n    </div>\n}\n\nexport default ChatDriver;","import {useEffect, useRef, useState, useContext} from \"react\";\r\nimport {CSSTransition} from \"react-transition-group\";\r\nimport {useFormik} from \"formik\";\r\nimport axios from \"axios\";\r\nimport {TextField} from \"@mui/material\";\r\nimport \"./style.scss\"\r\nimport {MyContext} from \"../../App/App\";\r\nimport LoaderAdmin from \"../loader-admin/LoaderAdmin\";\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nconst Clients = () => {\r\n    const {t} = useTranslation();\r\n    let value = useContext(MyContext);\r\n    const [modalShow, setModalShow] = useState({show: false, status: false});\r\n    const nodeRef = useRef(null);\r\n    const [luggage, setLuggage] = useState(\"male\");\r\n    const [getSearchText, setGetSearchText] = useState(\"\");\r\n    const [driverPhoto, setDriverPhoto] = useState(null);\r\n    const [driversList, setDriversList] = useState([]);\r\n    const [driverId, setDriverId] = useState(\"\");\r\n    const [reason, setReason] = useState(\"\");\r\n    const [profileImage, setProfileImage] = useState(null);\r\n    const [loader, setLoader] = useState(false);\r\n\r\n    const [links, setLinks] = useState({});\r\n    const [Pages, setPages] = useState([]);\r\n    const [activeItem, setActiveItem] = useState(1);\r\n    const visiblePages = [];\r\n    const totalPages = Pages.length;\r\n\r\n    if (totalPages <= 7) {\r\n        visiblePages.push(...Pages.map((_, index) => index + 1));\r\n    } else {\r\n        visiblePages.push(1);\r\n\r\n        if (activeItem > 3) {\r\n            visiblePages.push(\"...\");\r\n        }\r\n\r\n        for (let i = Math.max(2, activeItem - 1); i <= Math.min(totalPages - 1, activeItem + 1); i++) {\r\n            visiblePages.push(i);\r\n        }\r\n\r\n        if (activeItem < totalPages - 2) {\r\n            visiblePages.push(\"...\");\r\n        }\r\n\r\n        visiblePages.push(totalPages);\r\n    }\r\n\r\n    const validate = (values) => {\r\n        const errors = {};\r\n\r\n        if (!values.first_name) {\r\n            errors.first_name = \"Required\";\r\n        }\r\n\r\n        if (!values.last_name) {\r\n            errors.last_name = \"Required\";\r\n        }\r\n\r\n        if (!values.phone) {\r\n            errors.phone = \"Required\";\r\n        }\r\n        return errors;\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            first_name: \"\",\r\n            last_name: \"\",\r\n            phone: \"\",\r\n        },\r\n        validate,\r\n        onSubmit: (values) => {\r\n            sendAllInfo()\r\n        },\r\n    });\r\n\r\n    useEffect(() => {\r\n        getList()\r\n    }, []);\r\n\r\n    const getList = (url = null, page = 1) => {\r\n        setLoader(true);\r\n        const main = url ? url : `${value.url}/dashboard/client/?page=${page}`;\r\n        axios.get(main, {\r\n            headers: {\r\n                \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\r\n            }\r\n        }).then((response) => {\r\n            setDriversList(response.data.results);\r\n            setLinks(response.data.links);\r\n            setPages(response.data.links.pages);\r\n            setActiveItem(page);\r\n        }).finally(() => {\r\n            setLoader(false);\r\n        });\r\n\r\n    };\r\n\r\n    const getInputPhoto = (event) => {\r\n        const file = event.target.files[0];\r\n        setProfileImage(file);\r\n    };\r\n\r\n    const sendAllInfo = () => {\r\n        const formData = new FormData();\r\n        let user = {\r\n            role: \"client\",\r\n            first_name: formik.values.first_name,\r\n            last_name: formik.values.last_name,\r\n            phone: formik.values.phone,\r\n            gender: luggage,\r\n        }\r\n        for (let key in user) {\r\n            formData.append(key, user[key]);\r\n        }\r\n        if (profileImage) {\r\n            formData.append('profile_image', profileImage);\r\n        }\r\n\r\n        if (!driverId) {\r\n            axios.post(`${value.url}/dashboard/client/`, formData,\r\n                {\r\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n                }).then((response) => {\r\n                setModalShow({status: \"\", show: false})\r\n                getList(null, activeItem)\r\n                formik.resetForm();\r\n            })\r\n        }\r\n\r\n        if (driverId) {\r\n            axios.patch(`${value.url}/dashboard/client/${driverId}/`, formData,\r\n                {\r\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n                }).then((response) => {\r\n                setModalShow({status: \"\", show: false})\r\n                getList(null, activeItem)\r\n                formik.resetForm();\r\n            })\r\n        }\r\n    }\r\n\r\n    const editInfo = (driver) => {\r\n        formik.setValues({\r\n            first_name: driver.first_name,\r\n            last_name: driver.last_name,\r\n            phone: driver.phone,\r\n        });\r\n        setLuggage(driver.gender)\r\n        setDriverId(driver.id)\r\n    }\r\n\r\n    const blockDriver = (status) => {\r\n        if (status === \"block\" && reason.trim().length > 0) {\r\n            axios.post(`${value.url}/dashboard/client/block-client/`,\r\n                {client_id: driverId, reason}, {\r\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n                }).then((response) => {\r\n                setModalShow({status: \"\", show: false})\r\n                getList(null, activeItem)\r\n                setReason(\"\")\r\n            })\r\n        } else alert(\"Bloklash sababini kiriting!\")\r\n\r\n        if (status === \"unblock\") {\r\n            axios.post(`${value.url}/dashboard/client/unblock-client/`,\r\n                {client_id: driverId}, {\r\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n                }).then((response) => {\r\n                setModalShow({status: \"\", show: false})\r\n                getList(null, activeItem)\r\n            })\r\n        }\r\n    }\r\n\r\n    const delDriver = (id) => {\r\n        setLoader(true)\r\n        const isConfirmed = window.confirm(\"Rostdan ham ushbu mijozni o‘chirmoqchimisiz?\");\r\n        if (isConfirmed) {\r\n            axios.delete(`${value.url}/dashboard/client/${id}/`, {\r\n                headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n            }).then((response) => {\r\n                getList(null, activeItem)\r\n            }).catch((error) => {\r\n                console.log(error);\r\n            }).finally(() => {\r\n                setLoader(false);\r\n            });\r\n        } else {\r\n            setLoader(false);\r\n        }\r\n    };\r\n\r\n    const filterData = () => {\r\n        setLoader(true);\r\n        let page = 1\r\n        axios.get(`${value.url}/dashboard/client/?phone=${getSearchText}`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setDriversList(response.data.results);\r\n            setLinks(response.data.links);\r\n            setPages(response.data.links.pages);\r\n            setActiveItem(page);\r\n        }).finally(() => {\r\n            setLoader(false);\r\n        });\r\n    }\r\n\r\n    return <div className=\"clients-container\">\r\n        <CSSTransition\r\n            in={modalShow.show}\r\n            nodeRef={nodeRef}\r\n            timeout={300}\r\n            classNames=\"alert\"\r\n            unmountOnExit\r\n        >\r\n            <div className=\"modal-sloy\">\r\n                <div ref={nodeRef} className=\"modal-card\">\r\n\r\n                    {modalShow.status === \"add-driver\" && (\r\n                        <div className=\"add-driver\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img\r\n                                    onClick={() => {\r\n                                        setModalShow({status: \"\", show: false})\r\n                                        formik.resetForm();\r\n                                    }}\r\n                                    src=\"./images/admin/x.png\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"title\">Mijoz qo'shish</div>\r\n                            <div className=\"title-form\">Mijoz ma'lumotlari:</div>\r\n                            <div className=\"form-container\">\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides-file\">\r\n                                        <input onChange={getInputPhoto} type=\"file\"/>\r\n                                        <div className={`sloy-image ${profileImage ? \"active\" : \"\"}`}>\r\n                                            Profil rasmi\r\n                                            <img src=\"./images/admin/image.png\" alt=\"\"/>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.phone === \"Required\"}\r\n                                            value={formik.values.phone}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"phone\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Telefon raqam\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.first_name === \"Required\"}\r\n                                            value={formik.values.first_name}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"first_name\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Ism\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.last_name === \"Required\"}\r\n                                            value={formik.values.last_name}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"last_name\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Familiya\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <div className=\"title-on\">\r\n                                            Jinsi:\r\n                                        </div>\r\n                                        <div className=\"on-of\">\r\n                                            <div onClick={() => setLuggage(\"male\")}\r\n                                                 className={`of ${luggage === \"male\" ? \"on\" : \"\"}`}>\r\n                                                Erkak\r\n                                            </div>\r\n                                            <div onClick={() => setLuggage(\"female\")}\r\n                                                 className={`of ${luggage === \"female\" ? \"on\" : \"\"}`}>\r\n                                                Ayol\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div onClick={() => {\r\n                                formik.handleSubmit()\r\n                            }} className=\"add-btn\">\r\n                                Qo'shish\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalShow.status === \"driver-photo\" && (\r\n                        <div className=\"driver-photo\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img\r\n                                    onClick={() => setModalShow({status: \"\", show: false})}\r\n                                    src=\"./images/admin/x.png\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"photo\">\r\n                                <img src={driverPhoto} alt=\"\"/>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalShow.status === \"blocked\" && (\r\n                        <div className=\"blocked\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img onClick={() => {\r\n                                    setModalShow({status: \"\", show: false})\r\n                                    setReason(\"\")\r\n                                }}\r\n                                     src=\"./images/admin/x.png\"\r\n                                     alt=\"\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"title\">\r\n                                Haydovchini bloklash\r\n                            </div>\r\n\r\n                            <div className=\"reason-text\">\r\n                                <textarea value={reason} onChange={(e) => setReason(e.target.value)}\r\n                                          placeholder=\"Blok qilish sababini kiriting...\" name=\"reason\"\r\n                                          id=\"reason\"></textarea>\r\n\r\n                                <div className=\"buttons\">\r\n                                    <div onClick={() => {\r\n                                        blockDriver(\"unblock\")\r\n                                    }}\r\n                                         className=\"cancel\">Bekor qilish\r\n                                    </div>\r\n\r\n                                    <div onClick={() => {\r\n                                        blockDriver(\"block\")\r\n                                    }} className=\"success\">Bloklash\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalShow.status === \"edit-driver\" && (\r\n                        <div className=\"edit-driver\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img\r\n                                    onClick={() => {\r\n                                        setModalShow({status: \"\", show: false})\r\n                                        formik.resetForm();\r\n                                    }}\r\n                                    src=\"./images/admin/x.png\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"title\">Mijoz ma'lumotlarini tahrirlash</div>\r\n\r\n                            <div className=\"title-form\">Mijoz ma'lumotlari:</div>\r\n\r\n                            <div className=\"form-container\">\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides-file\">\r\n                                        <input onChange={getInputPhoto} type=\"file\"/>\r\n                                        <div className={`sloy-image ${profileImage ? \"active\" : \"\"}`}>\r\n                                            Profil rasmi\r\n                                            <img src=\"./images/admin/image.png\" alt=\"\"/>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.phone === \"Required\"}\r\n                                            value={formik.values.phone}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"phone\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Telefon raqam\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.first_name === \"Required\"}\r\n                                            value={formik.values.first_name}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"first_name\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Ism\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.last_name === \"Required\"}\r\n                                            value={formik.values.last_name}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"last_name\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Familiya\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <div className=\"title-on\">\r\n                                            Jinsi:\r\n                                        </div>\r\n                                        <div className=\"on-of\">\r\n                                            <div onClick={() => setLuggage(\"male\")}\r\n                                                 className={`of ${luggage === \"male\" ? \"on\" : \"\"}`}>\r\n                                                Erkak\r\n                                            </div>\r\n                                            <div onClick={() => setLuggage(\"female\")}\r\n                                                 className={`of ${luggage === \"female\" ? \"on\" : \"\"}`}>\r\n                                                Ayol\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div onClick={() => {\r\n                                formik.handleSubmit()\r\n                            }} className=\"add-btn\">\r\n                                Saqlash\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </CSSTransition>\r\n\r\n        <div className=\"header\">\r\n            <div className=\"left-side\">\r\n                <div className=\"search-box\">\r\n                    <img src=\"./images/admin/find-person.png\" alt=\"\"/>\r\n                    <input value={getSearchText} onChange={(e) => setGetSearchText(e.target.value)} placeholder=\"Telefon raqam kiriting\"\r\n                           type=\"text\"/>\r\n                    {getSearchText &&\r\n                        <img style={{cursor: \"pointer\"}} onClick={() => setGetSearchText(\"\")} src=\"./images/close.png\"\r\n                             alt=\"close\"/>}\r\n                </div>\r\n\r\n                <div className=\"update-driver\">\r\n                    <img onClick={filterData} src=\"./images/admin/panel.png\" alt=\"changes\"/>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div onClick={() => {\r\n                setModalShow({show: true, status: \"add-driver\"});\r\n            }} className=\"add-driver-btn\">\r\n                Mijoz qo'shish\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <div className=\"table-wrapper\">\r\n            {loader ? <LoaderAdmin/> : <table>\r\n                <thead>\r\n                <tr>\r\n                    <th>№</th>\r\n                    <th>Mijoz haqida</th>\r\n                    <th>Telefon raqam</th>\r\n                    <th>Jinsi</th>\r\n                    <th>Bloklash</th>\r\n                    <th>O'chirish</th>\r\n                    <th></th>\r\n                </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                {driversList.map((item, index) => {\r\n                    return <tr key={index}>\r\n                        <td>{index + 1}</td>\r\n                        <td className=\"driver-wrapper\">\r\n                            <div className=\"icon-driver\">\r\n                                <img onClick={() => {\r\n                                    setModalShow({show: true, status: \"driver-photo\"});\r\n                                    setDriverPhoto(item.profile_image)\r\n                                }} src={item.profile_image} alt=\"\"/>\r\n                            </div>\r\n                            <div className=\"text-driver\">\r\n                                <div className=\"name\">\r\n                                    {item.first_name} &nbsp;\r\n                                    {item.last_name}\r\n                                </div>\r\n                            </div>\r\n                        </td>\r\n                        <td>\r\n                            {item.phone}\r\n                        </td>\r\n                        <td>\r\n                            {item.gender}\r\n                        </td>\r\n                        <td>\r\n                            <div className={item.is_block ? \"icon-check\" : \"icon-check disablet\"}>\r\n                                <img onClick={() => {\r\n                                    setModalShow({show: true, status: \"blocked\"});\r\n                                    if (item.is_block) {\r\n                                        setReason(item.reason)\r\n                                    }\r\n                                    setDriverId(item.id)\r\n                                }} src=\"./images/admin/block.png\" alt=\"block\"/>\r\n\r\n                                {item.reason && item.is_block && <div className=\"reason-block\">\r\n                                    <img src=\"./images/admin/warning.png\" alt=\"\"/>\r\n                                    <div className=\"text\">\r\n                                        {item.reason}\r\n                                    </div>\r\n                                </div>}\r\n\r\n                            </div>\r\n                        </td>\r\n                        <td>\r\n                            <div className=\"icon\">\r\n                                <img onClick={() => delDriver(item.id)} src=\"./images/admin/delete.png\" alt=\"\"/>\r\n                            </div>\r\n                        </td>\r\n                        <td>\r\n                        </td>\r\n                        <div className=\"edit-icon\">\r\n                            <img onClick={() => {\r\n                                setModalShow({show: true, status: \"edit-driver\"});\r\n                                editInfo(item)\r\n                            }} src=\"./images/admin/edit-tools.png\" alt=\"\"/>\r\n                        </div>\r\n                    </tr>\r\n                })}\r\n                </tbody>\r\n            </table>}\r\n        </div>\r\n\r\n        <div className=\"pagination\">\r\n            <div onClick={() => {\r\n                if (activeItem > 1) {\r\n                    getList(links.previous, activeItem - 1);\r\n                }\r\n            }} className=\"prev\">\r\n                <img src=\"./images/admin/prev.png\" alt=\"Prev\"/>\r\n            </div>\r\n\r\n            {visiblePages.map((item, index) => (\r\n                <div key={index}\r\n                     onClick={() => {\r\n                         if (item !== \"...\") {\r\n                             const pageNumber = item;\r\n                             const pageObj = Pages.find(item_page => item_page[pageNumber]);\r\n                             const pageUrl = pageObj ? pageObj[pageNumber] : null;\r\n                             getList(pageUrl, item);\r\n                         }\r\n                     }}\r\n                     className={`items ${activeItem === item ? \"active\" : \"\"} `}\r\n                     style={{cursor: item === \"...\" ? \"default\" : \"pointer\"}}>\r\n                    {item}\r\n                </div>\r\n            ))}\r\n\r\n            <div className=\"next\" onClick={() => {\r\n                if (activeItem < totalPages) {\r\n                    getList(links.next, activeItem + 1);\r\n                }\r\n            }}>\r\n                <img src=\"./images/admin/next.png\" alt=\"Next\"/>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Clients","import \"./style.scss\"\nimport {useContext, useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {MyContext} from \"../../App/App\";\nimport i18next from \"i18next\";\nimport {useTranslation} from \"react-i18next\";\n\nconst Colors = () => {\n    const {t} = useTranslation();\n    let value = useContext(MyContext);\n    const [translations, setTranslations] = useState(\n        {\n            name_uz: \"\",\n            name_ru: \"\",\n            name_en: \"\"\n        })\n    const [colorsList, setColorsList] = useState([])\n    const [edit, setEdit] = useState(false)\n    const [editId, setEditId] = useState('')\n\n    const getData = () => {\n        axios.get(`${value.url}/dashboard/carcolor/`,{\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n        }).then((response) => {\n            setColorsList(response.data);\n        })\n    }\n\n    useEffect(() => {\n        getData()\n    }, []);\n\n    const addColor = (status) => {\n        const {name_uz, name_ru, name_en} = translations;\n\n        const isAnyNameFilled = name_uz.trim() && name_ru.trim() && name_en.trim();\n\n        if (!isAnyNameFilled) {\n            alert(\"Iltimos, rang nomini kiriting\");\n            return;\n        }\n\n        const translation_list = {\n            uz: {\n                name: name_uz.trim()\n            },\n            ru: {\n                name: name_ru.trim()\n            },\n            en: {\n                name: name_en.trim()\n            }\n        };\n\n        if (status === \"add\") {\n            axios.post(`${value.url}/dashboard/carcolor/`, {translations: translation_list},\n                {\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n                })\n                .then((response) => {\n                    setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n                    getData();\n                })\n                .catch((error) => {\n                    console.error(\"Rang qo'shishda xatolik:\", error);\n                });\n        }\n\n        if (status === \"edit\") {\n            axios.put(`${value.url}/dashboard/carcolor/${editId}/`, {translations: translation_list},\n                {\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n                })\n                .then((response) => {\n                    setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n                    getData();\n                    setEdit(false);\n                })\n                .catch((error) => {\n                    console.error(\"Rangni tahrirlashda xatolik:\", error);\n                });\n        }\n    };\n\n    const delColor = (id) => {\n        axios.delete(`${value.url}/dashboard/carcolor/${id}/`,{\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n        }).then((response) => {\n            setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n            getData()\n            setEdit(false)\n        })\n    }\n\n    const handleEdit = (color) => {\n        setEdit(true);\n        setEditId(color.id);\n        setTranslations({\n            name_uz: color.translations[\"uz\"].name || \"\",\n            name_ru: color.translations[\"ru\"].name || \"\",\n            name_en: color.translations[\"en\"].name || \"\"\n        });\n    };\n\n    return <div className=\"colors-wrapper\">\n        <div className=\"header\">\n            <div className=\"form-wrapper\">\n                <input\n                    value={translations.name_uz}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_uz: e.target.value})\n                    }\n                    placeholder=\"Rangi nomi (uz)...\"\n                    type=\"text\"\n                />\n                <input\n                    value={translations.name_en}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_en: e.target.value})\n                    }\n                    placeholder=\"Color name (en)...\"\n                    type=\"text\"\n                />\n\n                <input\n                    value={translations.name_ru}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_ru: e.target.value})\n                    }\n                    placeholder=\"Название цвета (ru)...\"\n                    type=\"text\"\n                />\n\n\n                {edit ? <div onClick={() => addColor(\"edit\")} className=\"add-color\">\n                    <img src=\"./images/admin/checkmark.png\" alt=\"\"/>\n                </div> : <div onClick={() => addColor(\"add\")} className=\"add-color\">\n                    <img src=\"./images/admin/add.png\" alt=\"\"/>\n                </div>}\n\n            </div>\n        </div>\n        <div className=\"colors-cards\">\n            <div className=\"wrapper-box\">\n                {\n                    colorsList.map((color, index) => (\n                        <div key={index} className=\"color-card\">\n                            <div className=\"name\">{color.translations[i18next.language].name}</div>\n                            <div className=\"bttons\">\n                                <div onClick={() => handleEdit(color)} className=\"btn\">\n                                    <img src=\"./images/admin/edit-tools.png\" alt=\"\"/>\n                                </div>\n\n                                <div onClick={() => delColor(color.id)} className=\"btn\">\n                                    <img src=\"./images/admin/delete.png\" alt=\"\"/>\n                                </div>\n                            </div>\n                        </div>\n                    ))\n                }\n            </div>\n        </div>\n    </div>\n}\n\nexport default Colors;","import \"./style.scss\"\nimport {useContext, useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {MyContext} from \"../../App/App\";\nimport i18next from \"i18next\";\nimport {useTranslation} from \"react-i18next\";\n\nconst CarBrand = () => {\n    const {t} = useTranslation();\n    let value = useContext(MyContext);\n    const [colorsList, setColorsList] = useState([])\n    const [edit, setEdit] = useState(false)\n    const [editId, setEditId] = useState('')\n    const [translations, setTranslations] = useState(\n        {\n            name_uz: \"\",\n            name_ru: \"\",\n            name_en: \"\"\n        })\n\n    const getData = () => {\n        axios.get(`${value.url}/dashboard/carmake/`, {\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n        }).then((response) => {\n            setColorsList(response.data);\n        })\n    }\n\n    useEffect(() => {\n        getData()\n    }, []);\n\n    const addColor = (status) => {\n        const {name_uz, name_ru, name_en} = translations;\n\n        const isAnyNameFilled = name_uz.trim() && name_ru.trim() && name_en.trim();\n\n        if (!isAnyNameFilled) {\n            alert(\"Iltimos, brend nomini kiriting\");\n            return;\n        }\n\n        const translation_list = {\n            uz: {\n                name: name_uz.trim()\n            },\n            ru: {\n                name: name_ru.trim()\n            },\n            en: {\n                name: name_en.trim()\n            }\n        };\n\n        if (status === \"add\") {\n            axios.post(`${value.url}/dashboard/carmake/`, {translations: translation_list},\n                {\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n                })\n                .then((response) => {\n                    setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n                    getData();\n                })\n                .catch((error) => {\n                    console.error(\"Brend qo'shishda xatolik:\", error);\n                });\n        }\n\n        if (status === \"edit\") {\n            axios.put(`${value.url}dashboard/carmake/${editId}/`, {translations: translation_list},\n                {\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n                })\n                .then((response) => {\n                    setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n                    getData();\n                    setEdit(false);\n                })\n                .catch((error) => {\n                    console.error(\"Brendni tahrirlashda xatolik:\", error);\n                });\n        }\n    };\n\n    const delColor = (id) => {\n        axios.delete(`${value.url}/dashboard/carmake/${id}/`, {\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n        }).then((response) => {\n            setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n            getData()\n            setEdit(false)\n        })\n    }\n\n    const handleEdit = (color) => {\n        setEdit(true);\n        setEditId(color.id);\n        setTranslations({\n            name_uz: color.translations[\"uz\"].name || \"\",\n            name_ru: color.translations[\"ru\"].name || \"\",\n            name_en: color.translations[\"en\"].name || \"\"\n        });\n    };\n\n    return <div className=\"car-brand-wrapper\">\n        <div className=\"header\">\n            <div className=\"form-wrapper\">\n                <input\n                    value={translations.name_uz}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_uz: e.target.value})\n                    }\n                    placeholder=\"Brend nomi (uz)...\"\n                    type=\"text\"\n                />\n                <input\n                    value={translations.name_en}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_en: e.target.value})\n                    }\n                    placeholder=\"Brand name (en)...\"\n                    type=\"text\"\n                />\n\n                <input\n                    value={translations.name_ru}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_ru: e.target.value})\n                    }\n                    placeholder=\"Название бренда (ru)...\"\n                    type=\"text\"\n                />\n\n\n                {edit ? <div onClick={() => addColor(\"edit\")} className=\"add-color\">\n                    <img src=\"./images/admin/checkmark.png\" alt=\"\"/>\n                </div> : <div onClick={() => addColor(\"add\")} className=\"add-color\">\n                    <img src=\"./images/admin/add.png\" alt=\"\"/>\n                </div>}\n\n            </div>\n        </div>\n        <div className=\"colors-cards\">\n            <div className=\"wrapper-box\">\n                {\n                    colorsList.map((color, index) => (\n                        <div key={index} className=\"color-card\">\n                            <div className=\"name\">{color.translations[i18next.language].name}</div>\n                            <div className=\"bttons\">\n                                <div onClick={() => handleEdit(color)} className=\"btn\">\n                                    <img src=\"./images/admin/edit-tools.png\" alt=\"\"/>\n                                </div>\n\n                                <div onClick={() => delColor(color.id)} className=\"btn\">\n                                    <img src=\"./images/admin/delete.png\" alt=\"\"/>\n                                </div>\n                            </div>\n                        </div>\n                    ))\n                }\n            </div>\n        </div>\n    </div>\n}\n\nexport default CarBrand;","import {useCallback, useEffect, useRef, useState, useMemo, useContext} from \"react\";\r\nimport {CSSTransition} from \"react-transition-group\";\r\nimport {useFormik} from \"formik\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport {\r\n    TextField,\r\n    MenuItem,\r\n    InputLabel,\r\n    FormControl,\r\n    Select\r\n} from \"@mui/material\";\r\nimport \"./style.scss\"\r\nimport axios from \"axios\";\r\nimport {MyContext} from \"../../App/App\";\r\n\r\nconst Service = () => {\r\n    let value = useContext(MyContext);\r\n    const [modalShow, setModalShow] = useState({show: false, status: false});\r\n    const nodeRef = useRef(null);\r\n    const [serviceList, setServiceList] = useState([]);\r\n    const [editId, setEditId] = useState(\"\");\r\n    const ref = useRef(null);\r\n    const [driversList, setDriversList] = useState([{}]);\r\n    const worksPage = 100;\r\n    const [pageNumber, setPageNumber] = useState(0);\r\n    const pagesVisited = pageNumber * worksPage;\r\n\r\n    const pageCount = Math.ceil(driversList.length / worksPage);\r\n\r\n    const changePage = ({selected}) => {\r\n        setPageNumber(selected)\r\n\r\n        setTimeout(() => {\r\n            ref.current?.scrollIntoView({behavior: \"smooth\"});\r\n        }, 500);\r\n    };\r\n\r\n    const validate = (values) => {\r\n        const errors = {};\r\n\r\n        if (!values.service) {\r\n            errors.service = \"Required\";\r\n        }\r\n\r\n        if (!values.includedCars) {\r\n            errors.includedCars = \"Required\";\r\n        }\r\n\r\n        if (!values.start_price) {\r\n            errors.start_price = \"Required\";\r\n        }\r\n\r\n        if (!values.price_per_km) {\r\n            errors.price_per_km = \"Required\";\r\n        }\r\n\r\n        if (!values.price_per_min) {\r\n            errors.price_per_min = \"Required\";\r\n        }\r\n\r\n        if (!values.wait_price_per_min) {\r\n            errors.wait_price_per_min = \"Required\";\r\n        }\r\n\r\n        if (!values.free_wait_time) {\r\n            errors.free_wait_time = \"Required\";\r\n        }\r\n\r\n        return errors;\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            service: \"\",\r\n            start_price: \"\",\r\n            price_per_km: \"\",\r\n            price_per_min: \"\",\r\n            wait_price_per_min: \"\",\r\n            free_wait_time: \"\",\r\n            includedCars: \"\"\r\n        },\r\n        validate,\r\n        onSubmit: (values) => {\r\n            sendAllInfo()\r\n        },\r\n    });\r\n\r\n    const sendAllInfo = () => {\r\n        let allInfo = {\r\n            service: formik.values.service,\r\n            includedCars: formik.values.includedCars,\r\n            start_price: formik.values.start_price,\r\n            price_per_km: formik.values.price_per_km,\r\n            price_per_min: formik.values.price_per_min,\r\n            wait_price_per_min: formik.values.wait_price_per_min,\r\n            free_wait_time: formik.values.free_wait_time\r\n        }\r\n\r\n        if (!editId) {\r\n            axios.post(`${value.url}/dashboard/service/`, allInfo, {\r\n                headers: {\r\n                    Authorization: `Token ${localStorage.getItem(\"token\")}`,\r\n                },\r\n            }).then((response) => {\r\n                getDrivers()\r\n                setModalShow({status: \"\", show: false})\r\n                formik.resetForm();\r\n            })\r\n        }\r\n\r\n        if (editId) {\r\n            axios.put(`${value.url}/dashboard/service/${editId}/`, allInfo,\r\n                {\r\n                    headers: {\r\n                        Authorization: `Token ${localStorage.getItem(\"token\")}`,\r\n                    },\r\n                }).then((response) => {\r\n                getDrivers()\r\n                formik.resetForm();\r\n                setModalShow({status: \"\", show: false})\r\n            })\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getDrivers()\r\n    }, []);\r\n\r\n    const delColor = (id) => {\r\n        axios.delete(`${value.url}/dashboard/service/${id}/`, {\r\n            headers: {\r\n                Authorization: `Token ${localStorage.getItem(\"token\")}`,\r\n            },\r\n        }).then((response) => {\r\n            getDrivers()\r\n        })\r\n    }\r\n\r\n    const getDrivers = () => {\r\n        axios.get(`${value.url}/dashboard/service/`, {\r\n            headers: {\r\n                Authorization: `Token ${localStorage.getItem(\"token\")}`,\r\n            },\r\n        }).then((response) => {\r\n            setServiceList(response.data);\r\n        })\r\n    }\r\n\r\n    const editValues = (service) => {\r\n        setEditId(service.id)\r\n        setModalShow({show: true, status: \"edit-driver\"});\r\n        formik.setValues({\r\n            service: service.service,\r\n            start_price: service.start_price,\r\n            price_per_km: service.price_per_km,\r\n            price_per_min: service.price_per_min,\r\n            wait_price_per_min: service.wait_price_per_min,\r\n            free_wait_time: service.free_wait_time,\r\n            includedCars: service.includedCars,\r\n        });\r\n    }\r\n\r\n    const productList = serviceList.slice(pagesVisited, pagesVisited + worksPage).map((item, index) => {\r\n        return <tr key={index}>\r\n            <td>{index + 1}</td>\r\n            <td>\r\n                {item.service}\r\n            </td>\r\n            <td>\r\n                {item.includedCars}\r\n            </td>\r\n            <td>{item.start_price}</td>\r\n            <td>{item.price_per_km}</td>\r\n            <td>{item.price_per_min}</td>\r\n            <td>{item.wait_price_per_min}</td>\r\n            <td>{item.free_wait_time}</td>\r\n            <td>\r\n                <div className=\"icon\">\r\n                    <img onClick={() => delColor(item.id)} src=\"./images/admin/delete.png\" alt=\"\"/>\r\n                </div>\r\n            </td>\r\n            <td>\r\n            </td>\r\n            <div className=\"edit-icon\">\r\n                <img onClick={() => editValues(item)} src=\"./images/admin/edit-tools.png\" alt=\"\"/>\r\n            </div>\r\n        </tr>\r\n    });\r\n\r\n    return <div className=\"service-container\">\r\n        <CSSTransition\r\n            in={modalShow.show}\r\n            nodeRef={nodeRef}\r\n            timeout={300}\r\n            classNames=\"alert\"\r\n            unmountOnExit\r\n        >\r\n            <div className=\"modal-sloy\">\r\n                <div ref={nodeRef} className=\"modal-card\">\r\n\r\n                    {modalShow.status === \"add-driver\" && (\r\n                        <div className=\"add-driver\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img\r\n                                    onClick={() => setModalShow({status: \"\", show: false})}\r\n                                    src=\"./images/admin/x.png\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"title\">Tarif qo'shish</div>\r\n\r\n                            <div className=\"title-form\">Tarif ma'lumotlari:</div>\r\n\r\n                            <div className=\"form-container\">\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Tarif nomi</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.service === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.service}\r\n                                                label=\"Tarif nomi\"\r\n                                                name=\"service\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                <MenuItem value=\"standart\">Standart</MenuItem>\r\n                                                <MenuItem value=\"bussiness\">Bussiness</MenuItem>\r\n                                                <MenuItem value=\"comfort\">Comfort</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.includedCars === \"Required\"}\r\n                                            value={formik.values.includedCars}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"includedCars\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Tarifga kiruvchi mashinalar\" variant=\"outlined\"\r\n                                            className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.start_price === \"Required\"}\r\n                                            value={formik.values.start_price}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"start_price\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Boshlash narxi\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.price_per_km === \"Required\"}\r\n                                            value={formik.values.price_per_km}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"price_per_km\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Narx (km)\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.price_per_min === \"Required\"}\r\n                                            value={formik.values.price_per_min}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"price_per_min\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Narx (min)\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.wait_price_per_min === \"Required\"}\r\n                                            value={formik.values.wait_price_per_min}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"wait_price_per_min\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Kutish uchun narx (min)\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.free_wait_time === \"Required\"}\r\n                                            value={formik.values.free_wait_time}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"free_wait_time\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Tekin kutish vaqti\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div onClick={sendAllInfo} className=\"add-btn\">\r\n                                    Tarif qo'shish\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalShow.status === \"edit-driver\" && (\r\n                        <div className=\"edit-driver\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img\r\n                                    onClick={() => setModalShow({status: \"\", show: false})}\r\n                                    src=\"./images/admin/x.png\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"title\">Tarifni tahrirlash</div>\r\n\r\n                            <div className=\"title-form\">Tarif ma'lumotlari:</div>\r\n\r\n                            <div className=\"form-container\">\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Tarif nomi</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.service === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.service}\r\n                                                label=\"Tarif nomi\"\r\n                                                name=\"service\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                <MenuItem value=\"standart\">Standart</MenuItem>\r\n                                                <MenuItem value=\"bussiness\">Bussiness</MenuItem>\r\n                                                <MenuItem value=\"comfort\">Comfort</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.includedCars === \"Required\"}\r\n                                            value={formik.values.includedCars}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"includedCars\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Tarifga kiruvchi mashinalar\" variant=\"outlined\"\r\n                                            className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.start_price === \"Required\"}\r\n                                            value={formik.values.start_price}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"start_price\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Boshlash narxi\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.price_per_km === \"Required\"}\r\n                                            value={formik.values.price_per_km}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"price_per_km\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Narx (km)\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.price_per_min === \"Required\"}\r\n                                            value={formik.values.price_per_min}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"price_per_min\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Narx (min)\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.wait_price_per_min === \"Required\"}\r\n                                            value={formik.values.wait_price_per_min}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"wait_price_per_min\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Kutish uchun narx (min)\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.free_wait_time === \"Required\"}\r\n                                            value={formik.values.free_wait_time}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"free_wait_time\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Tekin kutish vaqti\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div onClick={sendAllInfo} className=\"add-btn\">\r\n                                    Tasdiqlash\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </CSSTransition>\r\n\r\n        <div className=\"header\">\r\n            <div onClick={() => {\r\n                setModalShow({show: true, status: \"add-driver\"});\r\n            }} className=\"add-driver-btn\">\r\n                Tarif qo'shish\r\n            </div>\r\n        </div>\r\n\r\n        <table>\r\n            <thead>\r\n            <tr>\r\n                <th>№</th>\r\n                <th>Nomi</th>\r\n                <th>Moshinalar</th>\r\n                <th>Boshlash narxi</th>\r\n                <th>Narx km</th>\r\n                <th>Narx min</th>\r\n                <th>Kutish narxi min</th>\r\n                <th>Tekin kutish vaqti</th>\r\n                <th>O'chirish</th>\r\n                <th></th>\r\n            </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n            {productList}\r\n            </tbody>\r\n        </table>\r\n\r\n        <div className=\"pagination\">\r\n            {driversList.length > 100 ? <ReactPaginate\r\n                breakLabel=\"...\"\r\n                previousLabel={<img src=\"./images/admin/prev.png\" alt=\"\"/>}\r\n                nextLabel={<img src=\"./images/admin/next.png\" alt=\"\"/>}\r\n                pageCount={pageCount}\r\n                onPageChange={changePage}\r\n                containerClassName={\"paginationBttns\"}\r\n                previousLinkClassName={\"previousBttn\"}\r\n                nextLinkClassName={\"nextBttn\"}\r\n                disabledCalassName={\"paginationDisabled\"}\r\n                activeClassName={\"paginationActive\"}\r\n            /> : \"\"}\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default Service","import {useCallback, useEffect, useRef, useState, useMemo, useContext} from \"react\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport \"./style.scss\"\r\nimport axios from \"axios\";\r\nimport {MyContext} from \"../../App/App\";\r\n\r\nconst Balance = () => {\r\n    const [getSearchText, setGetSearchText] = useState(\"\");\r\n    let value = useContext(MyContext);\r\n    const ref = useRef(null);\r\n    const [driversList, setDriversList] = useState([]);\r\n    const worksPage = 100;\r\n    const [pageNumber, setPageNumber] = useState(0);\r\n    const pagesVisited = pageNumber * worksPage;\r\n\r\n    useEffect(() => {\r\n        axios.get(`${value.url}/dashboard/balance/`, {\r\n            headers: {\r\n                Authorization: `Token ${localStorage.getItem(\"token\")}`,\r\n            },\r\n        }).then((response) => {\r\n            setDriversList(response.data);\r\n            console.log(response.data);\r\n        })\r\n    }, []);\r\n\r\n    const productList = driversList.slice(pagesVisited, pagesVisited + worksPage)\r\n        .filter((item) => {\r\n            const searchText = getSearchText.toString().toLowerCase().replace(/\\s+/g, '').replace(/\\+/g, '');\r\n            const phoneNumber = item.driver_phone?.toString().toLowerCase().replace(/\\s+/g, '').replace(/\\+/g, '');\r\n            return searchText === \"\" || phoneNumber.includes(searchText);\r\n        }).map((item, index) => {\r\n            return <tr key={index}>\r\n                <td>{index + 1}</td>\r\n                <td className=\"driver-wrapper\">\r\n                    <div className=\"text-driver\">\r\n                        <div\r\n                            className=\"name\">{item.driver_name}</div>\r\n                        <div className=\"phone\">\r\n                            {item.driver_phone}\r\n                        </div>\r\n                    </div>\r\n                </td>\r\n                <td>\r\n                    {item.id_number}\r\n                </td>\r\n                <td>\r\n                    {item.fund}\r\n                </td>\r\n            </tr>\r\n        });\r\n\r\n    const pageCount = Math.ceil(driversList.length / worksPage);\r\n\r\n    const changePage = ({selected}) => {\r\n        setPageNumber(selected)\r\n\r\n        setTimeout(() => {\r\n            ref.current?.scrollIntoView({behavior: \"smooth\"});\r\n        }, 500);\r\n    };\r\n\r\n    return <div className=\"balance-container\">\r\n        <div className=\"header\">\r\n            <div className=\"search-box\">\r\n                <img src=\"./images/admin/search.png\" alt=\"\"/>\r\n                <input onChange={(e) => setGetSearchText(e.target.value)} placeholder=\"Telefon raqam kiriting\"\r\n                       type=\"text\"/>\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"table-wrapper\">\r\n            <table>\r\n                <thead>\r\n                <tr>\r\n                    <th>№</th>\r\n                    <th>Haydovchi</th>\r\n                    <th>Id raqam</th>\r\n                    <th>Narx</th>\r\n                </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                {productList}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n\r\n\r\n        <div className=\"pagination\">\r\n            {driversList.length > 100 ? <ReactPaginate\r\n                breakLabel=\"...\"\r\n                previousLabel={<img src=\"./images/admin/prev.png\" alt=\"\"/>}\r\n                nextLabel={<img src=\"./images/admin/next.png\" alt=\"\"/>}\r\n                pageCount={pageCount}\r\n                onPageChange={changePage}\r\n                containerClassName={\"paginationBttns\"}\r\n                previousLinkClassName={\"previousBttn\"}\r\n                nextLinkClassName={\"nextBttn\"}\r\n                disabledCalassName={\"paginationDisabled\"}\r\n                activeClassName={\"paginationActive\"}\r\n            /> : \"\"}\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default Balance","import {useEffect, useRef, useState, useContext} from \"react\";\r\nimport \"./style.scss\"\r\nimport {CSSTransition} from \"react-transition-group\";\r\nimport axios from \"axios\";\r\nimport {MyContext} from \"../../App/App\";\r\nimport i18next from \"i18next\";\r\nimport LoaderAdmin from \"../loader-admin/LoaderAdmin\";\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nconst Orders = () => {\r\n    const {t} = useTranslation();\r\n    let value = useContext(MyContext);\r\n    const [modalShow, setModalShow] = useState({show: false, status: false});\r\n    const nodeRef = useRef(null);\r\n    const [loader, setLoader] = useState(false);\r\n    const [orderStatus, setOrderStatus] = useState();\r\n    const [orderId, setOrderId] = useState(\"\");\r\n    const [reasonList, setReasonList] = useState([]);\r\n    const [reason, setReason] = useState(\"\");\r\n    const [driversList, setDriversList] = useState([]);\r\n    const [statistics, setStatistics] = useState([]);\r\n    const [information, setInformation] = useState([]);\r\n    const [client, setClient] = useState(\"\");\r\n    const [driver, setDriver] = useState(\"\");\r\n    const [status, setStatus] = useState(\"\");\r\n    const [direction, setDirection] = useState(\"\");\r\n    const [tarif, setTarif] = useState(\"\");\r\n    const [date, setDate] = useState(\"\");\r\n\r\n    const [links, setLinks] = useState({});\r\n    const [Pages, setPages] = useState([]);\r\n    const [activeItem, setActiveItem] = useState(1);\r\n    const visiblePages = [];\r\n    const totalPages = Pages.length;\r\n\r\n    if (totalPages <= 7) {\r\n        visiblePages.push(...Pages.map((_, index) => index + 1));\r\n    } else {\r\n        visiblePages.push(1);\r\n\r\n        if (activeItem > 3) {\r\n            visiblePages.push(\"...\");\r\n        }\r\n\r\n        for (let i = Math.max(2, activeItem - 1); i <= Math.min(totalPages - 1, activeItem + 1); i++) {\r\n            visiblePages.push(i);\r\n        }\r\n\r\n        if (activeItem < totalPages - 2) {\r\n            visiblePages.push(\"...\");\r\n        }\r\n\r\n        visiblePages.push(totalPages);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getList();\r\n\r\n        axios.get(`${value.url}/dashboard/rejectreson/?admin=true`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setReasonList(response.data);\r\n        })\r\n\r\n        axios.get(`${value.url}/dashboard/order-stats/`, {\r\n            headers: {\r\n                \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\r\n            }\r\n        }).then((response) => {\r\n            setStatistics(response.data);\r\n        })\r\n    }, []);\r\n\r\n    const getList = (url = null, page = 1) => {\r\n        setLoader(true);\r\n        const main = url ? url : `${value.url}/dashboard/order/?page=${page}`;\r\n        axios.get(main, {\r\n            headers: {\r\n                \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\r\n            }\r\n        }).then((response) => {\r\n            setDriversList(response.data.results);\r\n            setLinks(response.data.links);\r\n            setPages(response.data.links.pages);\r\n            setActiveItem(page);\r\n        }).finally(() => {\r\n            setLoader(false);\r\n        });\r\n\r\n    };\r\n\r\n    const changeStatus = () => {\r\n        axios.post(`${value.url}/dashboard/order/reject-order/`, {\r\n                order_id: orderId,\r\n                reason_id: reason,\r\n                status: orderStatus\r\n            },\r\n            {\r\n                headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n            })\r\n            .then((response) => {\r\n                getList()\r\n                setModalShow({status: \"\", show: false})\r\n            })\r\n    }\r\n\r\n    const filterData = () => {\r\n        setLoader(true);\r\n        let page = 1\r\n        axios.get(`${value.url}/dashboard/order/?client_phone=${client}&driver_phone=${driver}&service_type=${direction}&category_type=${tarif}&created_date=${date}&status=${status}`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setDriversList(response.data.results);\r\n            setLinks(response.data.links);\r\n            setPages(response.data.links.pages);\r\n            setActiveItem(page);\r\n        }).finally(() => {\r\n            setLoader(false);\r\n        });\r\n    }\r\n\r\n    return <div className=\"orders-container\">\r\n        <CSSTransition\r\n            in={modalShow.show}\r\n            nodeRef={nodeRef}\r\n            timeout={300}\r\n            classNames=\"alert\"\r\n            unmountOnExit\r\n        >\r\n            <div className=\"modal-sloy\">\r\n                <div ref={nodeRef} className=\"modal-card\">\r\n\r\n                    {modalShow.status === \"car-information\" && (\r\n                        <div className=\"car-information\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img\r\n                                    onClick={() => setModalShow({status: \"\", show: false})}\r\n                                    src=\"./images/admin/x.png\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"title\">\r\n                                Qo'shimcha malumotlar\r\n                            </div>\r\n                            <div className=\"information\">\r\n                                <div className=\"info\">\r\n                                    <div className=\"title\">Buyurtma raqami:</div>\r\n                                    <div\r\n                                        className=\"text\">{information.id}</div>\r\n                                </div>\r\n                                <div className=\"info\">\r\n                                    <div className=\"title\">Yo'nalish:</div>\r\n                                    <div\r\n                                        className=\"text\">{information.car_service.translations[i18next.language].name}</div>\r\n                                </div>\r\n                                <div className=\"info\">\r\n                                    <div className=\"title\">Masofa:</div>\r\n                                    <div\r\n                                        className=\"text\">{information.distance} km</div>\r\n                                </div>\r\n                                <div className=\"info\">\r\n                                    <div className=\"title\">Narx:</div>\r\n                                    <div\r\n                                        className=\"text\">{information.price} so'm</div>\r\n                                </div>\r\n                                {\r\n                                    information.end_date && <div className=\"info\">\r\n                                        <div className=\"title\">Tugatilgan sana:</div>\r\n                                        <div className=\"text\">{information.end_date}</div>\r\n                                    </div>\r\n                                }\r\n\r\n                                <div className=\"info\">\r\n                                    <div className=\"title\">Olib ketish manzili:</div>\r\n                                    <div\r\n                                        className=\"text\">{information.pick_up_locations && information.pick_up_locations.map((item, index) => {\r\n                                        return <div key={index}>{index + 1}- manzil : {item.address} <br/></div>\r\n\r\n                                    })}</div>\r\n                                </div>\r\n\r\n                                <div className=\"info\">\r\n                                    <div className=\"title\">Yekazish manzili:</div>\r\n                                    <div\r\n                                        className=\"text\">{information.drop_off_locations && information.drop_off_locations.map((item, index) => {\r\n                                        return <div key={index}> {index + 1}- manzil : {item.address} <br/></div>\r\n\r\n                                    })}</div>\r\n                                </div>\r\n                                {\r\n                                    information.extra_services.length > 0 &&\r\n                                    <div className=\"info\">\r\n                                        <div className=\"title\">Qo'shimcha xizmatlar:</div>\r\n\r\n                                        <div\r\n                                            className=\"text\">{information.extra_services && information.extra_services.map((item, index) => {\r\n                                            return <div key={index}>{item.translations[i18next.language].name}</div>\r\n\r\n                                        })}</div>\r\n                                    </div>\r\n                                }\r\n\r\n                                {information.car_service.service_type !== \"postal\" &&  <div className=\"info\">\r\n                                    <div className=\"title\">Yo'lovchilar soni:</div>\r\n                                    <div className=\"text\">{information.passanger_count}</div>\r\n                                </div>}\r\n\r\n                                <div className=\"info\">\r\n                                    <div className=\"title\">To'lov turi:</div>\r\n                                    <div className=\"text\">\r\n                                        {information.payment_type === \"cash\" && \"Naqt\"}\r\n                                        {information.payment_type === \"card\" && \"Karta\"}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"info\">\r\n                                    <div className=\"title\">Olib ketish sanasi:</div>\r\n                                    <div className=\"text\">\r\n                                        {information.pick_up_date}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"info\">\r\n                                    <div className=\"title\">Barcha o'rindiqlar band qilish:</div>\r\n                                    <div className=\"text\">\r\n                                        {information.book_all_seats === true && \"Ha\"}\r\n                                        {information.book_all_seats === false && \"Yo'q\"}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {information.car_service.service_type === \"postal\" && <div className=\"info\">\r\n                                    <div className=\"title\">To'lovni kim qiladi:</div>\r\n                                    <div\r\n                                        className=\"text\">\r\n                                        {information.payer === \"sender\" && \"Yuboruvchi\"}\r\n                                        {information.payer === \"receiver\" && \"Qabul qilovchi\"}\r\n                                    </div>\r\n                                </div>}\r\n\r\n                                {information.car_service.service_type === \"postal\" && <div className=\"info\">\r\n                                    <div className=\"title\">Qabul qlivchi telefon raqami:</div>\r\n                                    <div\r\n                                        className=\"text\">\r\n                                        {information.receiver_phone}\r\n                                    </div>\r\n                                </div>}\r\n\r\n                                {information.car_service.service_type === \"postal\" && <div className=\"info\">\r\n                                    <div className=\"title\">Yuboruvchi telefon raqami:</div>\r\n                                    <div\r\n                                        className=\"text\">\r\n                                        {information.sender_phone}\r\n                                    </div>\r\n                                </div>}\r\n\r\n                                {information.status === \"rejected\"\r\n                                    && <div className=\"info\">\r\n                                        <div className=\"title\">Bekor qilish sababi:</div>\r\n                                        <div\r\n                                            className=\"text\">\r\n                                            {information.rejected_reason.translations[i18next.language].name}\r\n                                        </div>\r\n                                    </div>}\r\n\r\n                                {information.comment_to_driver\r\n                                    && <div className=\"info\">\r\n                                        <div className=\"title\">Haydovchi uchun izoh:</div>\r\n                                        <div\r\n                                            className=\"text\">\r\n                                            {information.comment_to_driver}\r\n                                        </div>\r\n                                    </div>}\r\n\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalShow.status === \"change-status\" && (\r\n                        <div className=\"change-status\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img\r\n                                    onClick={() => setModalShow({status: \"\", show: false})}\r\n                                    src=\"./images/admin/x.png\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"title\">\r\n                                Buyurtma bosqichini tanlang\r\n                            </div>\r\n                            <div className=\"form-box\">\r\n                                <select onChange={(e) => setOrderStatus(e.target.value)} name=\"status\">\r\n                                    <option value=\"\"></option>\r\n                                    <option value=\"arrived\">Mijozga kelish</option>\r\n                                    <option value=\"picked\">Mijozni olish</option>\r\n                                    <option value=\"started\">Boshlash</option>\r\n                                    <option value=\"finished\">Yakunlash</option>\r\n                                    <option value=\"rejected\">Bekor qilish</option>\r\n                                </select>\r\n\r\n                                {orderStatus === \"rejected\" &&\r\n                                    <>\r\n                                        <label htmlFor=\"reason\">Bekor qilish sababini tanlang:</label>\r\n                                        <select onChange={(e) => setReason(e.target.value)} name=\"status\" id=\"reason\">\r\n                                            <option value=\"\"></option>\r\n                                            {reasonList.map((item, index) => (\r\n                                                <option key={index} value={item.id}>\r\n                                                    {item.translations[i18next.language].name}\r\n                                                </option>\r\n                                            ))}\r\n                                        </select>\r\n                                    </>\r\n                                }\r\n                            </div>\r\n                            <div onClick={changeStatus} className=\"success-btn\">\r\n                                Tasdiqlash\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalShow.status === \"statistic\" && (\r\n                        <div className=\"statistic\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img\r\n                                    onClick={() => setModalShow({status: \"\", show: false})}\r\n                                    src=\"./images/admin/x.png\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"title\">\r\n                                Buyurtmalar statistikasi\r\n                            </div>\r\n                            <div className=\"form-box\">\r\n                                <div className=\"statistic-box\">\r\n                                    <div className=\"name\">\r\n                                        Umumiy:\r\n                                    </div>\r\n\r\n                                    <div className=\"num\">\r\n                                        {statistics.total_orders}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"statistic-box\">\r\n                                    <div className=\"name\">\r\n                                        Yakunlangan:\r\n                                    </div>\r\n\r\n                                    <div className=\"num\">\r\n                                        {statistics.finished_orders}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"statistic-box\">\r\n                                    <div className=\"name\">\r\n                                        Faol:\r\n                                    </div>\r\n\r\n                                    <div className=\"num\">\r\n                                        {statistics.active_orders}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"statistic-box\">\r\n                                    <div className=\"name\">\r\n                                        Bekor qilingan:\r\n                                    </div>\r\n\r\n                                    <div className=\"num\">\r\n                                        {statistics.rejected_orders}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"statistic-box\">\r\n                                    <div className=\"name\">\r\n                                        Bugungi buyurtmalar soni:\r\n                                    </div>\r\n\r\n                                    <div className=\"num\">\r\n                                        {statistics.orders_today}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"statistic-box\">\r\n                                    <div className=\"name\">\r\n                                        Joriy oydagi buyurtmalar soni:\r\n                                    </div>\r\n\r\n                                    <div className=\"num\">\r\n                                        {statistics.orders_this_month}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </CSSTransition>\r\n\r\n        <div className=\"header\">\r\n            <div className=\"left-side\">\r\n                <div className=\"search-box\">\r\n                    <input value={client} onChange={(e) => setClient(e.target.value)} placeholder=\"Mijoz tel raqami\"\r\n                           type=\"text\"/>\r\n                </div>\r\n                <div className=\"search-box\">\r\n                    <input value={driver} onChange={(e) => setDriver(e.target.value)} placeholder=\"Haydovchi tel raqami\"\r\n                           type=\"text\"/>\r\n                </div>\r\n                <div className=\"search-box\">\r\n                    <label htmlFor=\"direction\">Yo'nalish:</label>\r\n                    <select value={direction} onChange={(e) => setDirection(e.target.value)} name=\"direction\"\r\n                            id=\"direction\">\r\n                        <option value=\"\"></option>\r\n                        <option value=\"regional\">\r\n                            Taxi\r\n                        </option>\r\n                        <option value=\"postal\">\r\n                            Jo'natma\r\n                        </option>\r\n                        <option value=\"minivan\">\r\n                            Miniven\r\n                        </option>\r\n                        <option value=\"travel\">\r\n                            Sayohat\r\n                        </option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"search-box\">\r\n                    <label htmlFor=\"tarif\">Tarif:</label>\r\n                    <select value={tarif} onChange={(e) => setTarif(e.target.value)} name=\"tarif\" id=\"tarif\">\r\n                        <option value=\"\"></option>\r\n                        <option value=\"standart\">\r\n                            Standart\r\n                        </option>\r\n                        <option value=\"comfort\">\r\n                            Komfort\r\n                        </option>\r\n                        <option value=\"business\">\r\n                            Biznes\r\n                        </option>\r\n                        <option value=\"delivery\">\r\n                            Jo'natma\r\n                        </option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"search-box\">\r\n                    <label htmlFor=\"status\">Status:</label>\r\n                    <select value={status} onChange={(e) => setStatus(e.target.value)} name=\"status\" id=\"status\">\r\n                        <option value=\"\"></option>\r\n                        <option value=\"rejected\">\r\n                            Bekor qilingan\r\n                        </option>\r\n                        <option value=\"started\">\r\n                            Boshlangan\r\n                        </option>\r\n                        <option value=\"arrived\">\r\n                            Mijozga keldi\r\n                        </option>\r\n                        <option value=\"picked\">\r\n                            Mijozni oldi\r\n                        </option>\r\n                        <option value=\"finished\">\r\n                            Yakunlangan\r\n                        </option>\r\n                        <option value=\"active\">\r\n                            Faol\r\n                        </option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"search-box\">\r\n                    <label htmlFor=\"date\">Sana:</label>\r\n                    <input value={date} onChange={(e) => setDate(e.target.value)} type=\"date\"/>\r\n                </div>\r\n                <div onClick={filterData} className=\"filter-btn\">\r\n                    <img src=\"./images/admin/panel.png\" alt=\"\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"header\">\r\n            <div className=\"left-side\">\r\n\r\n            </div>\r\n            <div onClick={() => setModalShow({show: true, status: \"statistic\"})} className=\"statisitcs\">\r\n                Statistika\r\n                <img src=\"./images/data-management.png\" alt=\"a\"/>\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"wrapper-table\">\r\n            {\r\n                loader ? <LoaderAdmin/> :\r\n                    <table>\r\n                        <thead>\r\n                        <tr>\r\n                            <th>№</th>\r\n                            <th>Mijoz</th>\r\n                            <th>Haydovchi</th>\r\n                            <th>Buyurtma berilgan sana</th>\r\n                            <th>Tarif</th>\r\n                            <th>Buyurtma narxi</th>\r\n                            <th>Batafsil ma'lumotlar</th>\r\n                            <th>Statusni ozgartirish</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {driversList.map((item, index) => {\r\n                            return <tr key={index}>\r\n                                <td>{index + 1}</td>\r\n                                <td>\r\n                                    <div className=\"text-driver\">\r\n                                        <div className=\"name\">\r\n                                            {item.client?.first_name} &nbsp;\r\n                                            {item.client?.last_name}\r\n                                        </div>\r\n                                        <div className=\"phone\">\r\n                                            {item.client?.phone}\r\n                                        </div>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div className=\"text-driver\">\r\n                                        {item.driver && <>\r\n                                            <div className=\"name\">\r\n                                                {item.driver.first_name} &nbsp;\r\n                                                {item.driver.last_name}\r\n                                            </div>\r\n                                            <div className=\"phone\">\r\n                                                {item.driver.phone}\r\n                                            </div>\r\n                                        </>}\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    {item.created_at}\r\n                                </td>\r\n                                <td>\r\n                                    {item.car_category.translations[i18next.language].name}\r\n                                </td>\r\n                                <td>\r\n                                    {item.price} so'm\r\n                                </td>\r\n                                <td>\r\n                                    <div className=\"icon\">\r\n                                        <img onClick={() => {\r\n                                            setInformation(item)\r\n                                            setModalShow({show: true, status: \"car-information\"});\r\n                                        }} src=\"./images/admin/document.png\" alt=\"\"/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n\r\n                                    {item.status === \"rejected\" ? <div className=\"status-red\">\r\n                                        Bekor qilingan\r\n                                    </div> : item.status === \"finished\" ? <div className=\"status-green\">\r\n                                            Yakunlangan\r\n                                        </div> :\r\n                                        <div className=\"icon\">\r\n                                            <div className=\"status-blue\">\r\n                                                {item.status === \"active\" && \"Faol\"}\r\n                                                {item.status === \"started\" && \"Boshlandi\"}\r\n                                                {item.status === \"arrived\" && \"Mijozga keldi\"}\r\n                                                {item.status === \"accepted\" && \"Haydovchi qabul qildi\"}\r\n                                                {item.status === \"picked\" && \"Mijozni oldi\"}\r\n                                            </div>\r\n                                            <img onClick={() => {\r\n                                                setOrderId(item.id)\r\n                                                setModalShow({show: true, status: \"change-status\"});\r\n                                            }} className=\"status-icon\" src=\"./images/admin/status.png\" alt=\"\"/>\r\n                                        </div>}\r\n\r\n                                </td>\r\n                            </tr>\r\n                        })}\r\n                        </tbody>\r\n                    </table>\r\n            }\r\n\r\n        </div>\r\n\r\n        <div className=\"pagination\">\r\n            <div onClick={() => {\r\n                if (activeItem > 1) {\r\n                    getList(links.previous, activeItem - 1);\r\n                }\r\n            }} className=\"prev\">\r\n                <img src=\"./images/admin/prev.png\" alt=\"Prev\"/>\r\n            </div>\r\n\r\n            {visiblePages.map((item, index) => (\r\n                <div key={index}\r\n                     onClick={() => {\r\n                         if (item !== \"...\") {\r\n                             const pageNumber = item;\r\n                             const pageObj = Pages.find(item_page => item_page[pageNumber]);\r\n                             const pageUrl = pageObj ? pageObj[pageNumber] : null;\r\n                             getList(pageUrl, item);\r\n                         }\r\n                     }}\r\n                     className={`items ${activeItem === item ? \"active\" : \"\"} `}\r\n                     style={{cursor: item === \"...\" ? \"default\" : \"pointer\"}}>\r\n                    {item}\r\n                </div>\r\n            ))}\r\n\r\n            <div className=\"next\" onClick={() => {\r\n                if (activeItem < totalPages) {\r\n                    getList(links.next, activeItem + 1);\r\n                }\r\n            }}>\r\n                <img src=\"./images/admin/next.png\" alt=\"Next\"/>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default Orders","import \"./style.scss\"\nimport {useContext, useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {MyContext} from \"../../App/App\";\nimport i18next from \"i18next\";\nimport {useTranslation} from \"react-i18next\";\n\nconst CarModel = () => {\n    const {t} = useTranslation();\n    let value = useContext(MyContext);\n    const [car_make, setCar_make] = useState([]);\n    const [car_model, setCar_model] = useState([]);\n    const [carBrandId, setCarBrandId] = useState(\"\")\n\n    const [edit, setEdit] = useState(false)\n    const [editId, setEditId] = useState('')\n    const [translations, setTranslations] = useState(\n        {\n            name_uz: \"\",\n            name_ru: \"\",\n            name_en: \"\"\n        })\n\n    const getData = () => {\n        axios.get(`${value.url}/dashboard/carmake/`, {\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n        }).then((response) => {\n            setCar_make(response.data);\n        })\n    }\n\n    useEffect(() => {\n        getData()\n    }, []);\n\n    const addColor = (status) => {\n        const {name_uz, name_ru, name_en} = translations;\n\n        const isAnyNameFilled = name_uz.trim() && name_ru.trim() && name_en.trim();\n\n        if (!isAnyNameFilled) {\n            alert(\"Iltimos, rang nomini kiriting\");\n            return;\n        }\n\n        const translation_list = {\n            uz: {\n                name: name_uz.trim()\n            },\n            ru: {\n                name: name_ru.trim()\n            },\n            en: {\n                name: name_en.trim()\n            }\n        };\n\n        if (status === \"add\") {\n            axios.post(`${value.url}/dashboard/carmodel/`, {make: carBrandId, translations: translation_list},\n                {\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n                })\n                .then((response) => {\n                    setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n                    axios.get(`${value.url}/dashboard/carmake/${carBrandId}/`, {\n                        headers: {\n                            \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\n                        }\n                    }).then((response) => {\n                        setCar_model(response.data);\n                    })\n\n                })\n                .catch((error) => {\n                    console.error(\"Rang qo'shishda xatolik:\", error);\n                });\n        }\n\n        if (status === \"edit\") {\n            axios.put(`${value.url}/dashboard/carmodel/${editId}/`, {translations: translation_list},\n                {\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n                })\n                .then((response) => {\n                    setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n                    setEdit(false);\n                    axios.get(`${value.url}/dashboard/carmake/${carBrandId}/`, {\n                        headers: {\n                            \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\n                        }\n                    }).then((response) => {\n                        setCar_model(response.data);\n                    })\n\n                })\n                .catch((error) => {\n                    console.error(\"Rangni tahrirlashda xatolik:\", error);\n                });\n        }\n    };\n\n    const delColor = (id) => {\n        axios.delete(`${value.url}/dashboard/carmodel/${id}/`, {\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n        }).then((response) => {\n            setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n            axios.get(`${value.url}/dashboard/carmake/${carBrandId}/`, {\n                headers: {\n                    \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\n                }\n            }).then((response) => {\n                setCar_model(response.data);\n            })\n            setEdit(false)\n        })\n    }\n\n    const handleEdit = (color) => {\n        setEdit(true);\n        setEditId(color.id);\n        setTranslations({\n            name_uz: color.translations[\"uz\"].name || \"\",\n            name_ru: color.translations[\"ru\"].name || \"\",\n            name_en: color.translations[\"en\"].name || \"\"\n        });\n    };\n\n    const getCarNames = (e) => {\n        setCarBrandId(e.target.value)\n        axios.get(`${value.url}/dashboard/carmake/${e.target.value}/`, {\n            headers: {\n                \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\n            }\n        }).then((response) => {\n            setCar_model(response.data);\n        })\n    }\n\n    return <div className=\"car-model-wrapper\">\n        <div className=\"header\">\n            <div className=\"form-wrapper\">\n                <label htmlFor=\"\">Moshina brendini tanlang: </label>\n                <select onChange={getCarNames} name=\"car-brand\"\n                        id=\"car-brand\">\n                    <option value=\"\"></option>\n                    {car_make.map((brand) => (\n                        <option key={brand.id} value={brand.id}>\n                            {brand.translations[i18next.language].name}\n                        </option>\n                    ))}\n                </select>\n\n                <input\n                    value={translations.name_uz}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_uz: e.target.value})\n                    }\n                    placeholder=\"Avtomobil nomi (uz)...\"\n                    type=\"text\"\n                />\n\n                <input\n                    value={translations.name_en}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_en: e.target.value})\n                    }\n                    placeholder=\"Car name (en)...\"\n                    type=\"text\"\n                />\n\n                <input\n                    value={translations.name_ru}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_ru: e.target.value})\n                    }\n                    placeholder=\"Название автомобиля (ru)...\"\n                    type=\"text\"\n                />\n\n                {edit ? <div onClick={() => addColor(\"edit\")} className=\"add-color\">\n                    <img src=\"./images/admin/checkmark.png\" alt=\"\"/>\n                </div> : <div onClick={() => addColor(\"add\")} className=\"add-color\">\n                    <img src=\"./images/admin/add.png\" alt=\"\"/>\n                </div>}\n\n            </div>\n        </div>\n        <div className=\"colors-cards\">\n            <div className=\"wrapper-box\">\n                {\n                    car_model.map((color, index) => (\n                        <div key={index} className=\"color-card\">\n                            <div className=\"name\">{color.translations[i18next.language].name}</div>\n                            <div className=\"bttons\">\n                                <div onClick={() => handleEdit(color)} className=\"btn\">\n                                    <img src=\"./images/admin/edit-tools.png\" alt=\"\"/>\n                                </div>\n\n                                <div onClick={() => delColor(color.id)} className=\"btn\">\n                                    <img src=\"./images/admin/delete.png\" alt=\"\"/>\n                                </div>\n                            </div>\n                        </div>\n                    ))\n                }\n            </div>\n        </div>\n    </div>\n}\n\nexport default CarModel;","import {useEffect, useRef, useState, useMemo, useContext} from \"react\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport \"./style.scss\"\r\nimport {MyContext} from \"../../App/App\";\r\nimport axios from \"axios\";\r\n\r\nconst Payment = () => {\r\n    let value = useContext(MyContext);\r\n    const ref = useRef(null);\r\n    const [driversList, setDriversList] = useState([]);\r\n    const [getSearchText, setGetSearchText] = useState(\"\");\r\n    const worksPage = 100;\r\n    const [pageNumber, setPageNumber] = useState(0);\r\n    const pagesVisited = pageNumber * worksPage;\r\n    const [statistics, setStatistics] = useState([]);\r\n\r\n    const pageCount = Math.ceil(driversList.length / worksPage);\r\n\r\n    const changePage = ({selected}) => {\r\n        setPageNumber(selected)\r\n\r\n        setTimeout(() => {\r\n            ref.current?.scrollIntoView({behavior: \"smooth\"});\r\n        }, 500);\r\n    };\r\n\r\n    useEffect(() => {\r\n        axios.get(`${value.url}/dashboard/payment/`, {\r\n            headers: {\r\n                \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\r\n            }\r\n        }).then((response) => {\r\n            console.log(response.data);\r\n            setDriversList(response.data);\r\n        })\r\n    }, []);\r\n\r\n    const productList = driversList.slice(pagesVisited, pagesVisited + worksPage)\r\n        .filter((item) => {\r\n            const searchText = getSearchText.toString().toLowerCase().replace(/\\s+/g, '').replace(/\\+/g, '');\r\n            const phoneNumber = item.balance_id.toString().toLowerCase().replace(/\\s+/g, '').replace(/\\+/g, '');\r\n            return searchText === \"\" || phoneNumber.includes(searchText);\r\n        }).map((item, index) => {\r\n            return <tr key={index}>\r\n                <td>{index + 1}</td>\r\n\r\n                <td>\r\n                    {item.balance_id}\r\n                </td>\r\n\r\n                <td>\r\n                    {item.amount}\r\n                </td>\r\n\r\n                <td>\r\n                    {item.status}\r\n                </td>\r\n                <td>\r\n                    {item.payment_operator}\r\n                </td>\r\n\r\n                <td>\r\n                    {item.updated_at}\r\n                </td>\r\n                <td>\r\n                    {item.reason}\r\n                </td>\r\n            </tr>\r\n        });\r\n\r\n    return <div className=\"payment-container\">\r\n        <div className=\"header\">\r\n            <div className=\"search-box\">\r\n                <img src=\"./images/admin/search.png\" alt=\"\"/>\r\n                <input onChange={(e) => setGetSearchText(e.target.value)} placeholder=\"ID kiritng\" type=\"text\"/>\r\n            </div>\r\n            <div className=\"statisitcs\">\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"wrapper-table\">\r\n            <table>\r\n                <thead>\r\n                <tr>\r\n                    <th>№</th>\r\n                    <th>Balans id</th>\r\n                    <th>Miqdor</th>\r\n                    <th>Status</th>\r\n                    <th>To'lov turi</th>\r\n                    <th>To'lov sanasi</th>\r\n                    <th>Sabab</th>\r\n                </tr>\r\n\r\n                </thead>\r\n\r\n                <tbody>\r\n                {productList}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n\r\n        <div className=\"pagination\">\r\n            {driversList.length > 100 ? <ReactPaginate\r\n                breakLabel=\"...\"\r\n                previousLabel={<img src=\"./images/admin/prev.png\" alt=\"\"/>}\r\n                nextLabel={<img src=\"./images/admin/next.png\" alt=\"\"/>}\r\n                pageCount={pageCount}\r\n                onPageChange={changePage}\r\n                containerClassName={\"paginationBttns\"}\r\n                previousLinkClassName={\"previousBttn\"}\r\n                nextLinkClassName={\"nextBttn\"}\r\n                disabledCalassName={\"paginationDisabled\"}\r\n                activeClassName={\"paginationActive\"}\r\n            /> : \"\"}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Payment","import \"./style.scss\"\nimport {useContext, useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {MyContext} from \"../../App/App\";\nimport i18next from \"i18next\";\n\nconst RejectReason = () => {\n    let value = useContext(MyContext);\n    const [colorsList, setColorsList] = useState([])\n    const [edit, setEdit] = useState(false)\n    const [rejectStatus, setRejectStatus] = useState(\"\")\n    const [editId, setEditId] = useState('')\n    const [translations, setTranslations] = useState(\n        {\n            name_uz: \"\",\n            name_ru: \"\",\n            name_en: \"\"\n        })\n\n    const getData = (status) => {\n        setRejectStatus(status)\n        axios.get(`${value.url}/dashboard/rejectreson/?type=${status}`, {\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n        }).then((response) => {\n            setColorsList(response.data);\n        })\n    }\n\n    const addColor = (status) => {\n        const {name_uz, name_ru, name_en} = translations;\n\n        const isAnyNameFilled = name_uz.trim() && name_ru.trim() && name_en.trim();\n\n        if (!isAnyNameFilled) {\n            alert(\"Iltimos, rang nomini kiriting\");\n            return;\n        }\n\n        const translation_list = {\n            uz: {\n                name: name_uz.trim()\n            },\n            ru: {\n                name: name_ru.trim()\n            },\n            en: {\n                name: name_en.trim()\n            }\n        };\n\n        if (status === \"add\") {\n            axios.post(`${value.url}/dashboard/rejectreson/`, {type: rejectStatus, translations: translation_list},\n                {\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n                })\n                .then((response) => {\n                    setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n                    getData();\n                })\n                .catch((error) => {\n                    console.error(\"Rang qo'shishda xatolik:\", error);\n                });\n        }\n\n        if (status === \"edit\") {\n            axios.put(`${value.url}/dashboard/rejectreson/${editId}/`, {\n                    type: rejectStatus,\n                    translations: translation_list\n                },\n                {\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n                })\n                .then((response) => {\n                    setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n                    getData();\n                    setEdit(false);\n                })\n                .catch((error) => {\n                    console.error(\"Rangni tahrirlashda xatolik:\", error);\n                });\n        }\n    };\n\n    const delColor = (id) => {\n        axios.delete(`${value.url}/dashboard/rejectreson/${id}/`, {\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n        }).then((response) => {\n            setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n            getData()\n            setEdit(false)\n        })\n    }\n\n    const handleEdit = (color) => {\n        setEdit(true);\n        setEditId(color.id);\n        setTranslations({\n            name_uz: color.translations[\"uz\"].name || \"\",\n            name_ru: color.translations[\"ru\"].name || \"\",\n            name_en: color.translations[\"en\"].name || \"\"\n        });\n    };\n\n    return <div className=\"reject-reason-wrapper\">\n        <div className=\"header\">\n            <div className=\"form-wrapper\">\n                <label htmlFor=\"status\">Moshina brendini tanlang: </label>\n                <select onChange={(e) => getData(e.target.value)} name=\"status\"\n                        id=\"status\">\n                    <option value=\"\"></option>\n                    <option value=\"driver\">Haydovchi</option>\n                    <option value=\"client\">Mijoz</option>\n                    <option value=\"admin\">Admin</option>\n                </select>\n\n                <input\n                    value={translations.name_uz}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_uz: e.target.value})\n                    }\n                    placeholder=\"Sabab nomi (uz)...\"\n                    type=\"text\"\n                />\n                <input\n                    value={translations.name_en}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_en: e.target.value})\n                    }\n                    placeholder=\"Reason name (en)...\"\n                    type=\"text\"\n                />\n\n                <input\n                    value={translations.name_ru}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_ru: e.target.value})\n                    }\n                    placeholder=\"Название причины (ru)...\"\n                    type=\"text\"\n                />\n\n\n                {edit ? <div onClick={() => addColor(\"edit\")} className=\"add-color\">\n                    <img src=\"./images/admin/checkmark.png\" alt=\"\"/>\n                </div> : <div onClick={() => addColor(\"add\")} className=\"add-color\">\n                    <img src=\"./images/admin/add.png\" alt=\"\"/>\n                </div>}\n\n            </div>\n        </div>\n        <div className=\"colors-cards\">\n            <div className=\"wrapper-box\">\n                {\n                    colorsList.map((color, index) => (\n                        <div key={index} className=\"color-card\">\n                            <div className=\"name\">{color.translations[i18next.language].name}</div>\n                            <div className=\"bttons\">\n                                <div onClick={() => handleEdit(color)} className=\"btn\">\n                                    <img src=\"./images/admin/edit-tools.png\" alt=\"\"/>\n                                </div>\n\n                                <div onClick={() => delColor(color.id)} className=\"btn\">\n                                    <img src=\"./images/admin/delete.png\" alt=\"\"/>\n                                </div>\n                            </div>\n                        </div>\n                    ))\n                }\n            </div>\n        </div>\n    </div>\n}\n\nexport default RejectReason;","import \"./style.scss\"\nimport {useContext, useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {MyContext} from \"../../App/App\";\nimport i18next from \"i18next\";\nimport {useTranslation} from \"react-i18next\";\n\nconst ExtraServices = () => {\n    const {t} = useTranslation();\n    let value = useContext(MyContext);\n    const [colorsList, setColorsList] = useState([])\n    const [edit, setEdit] = useState(false)\n    const [editId, setEditId] = useState('')\n    const [isMain, setIsMain] = useState(false);\n    const [price, setPrice] = useState(\"\");\n    const [translations, setTranslations] = useState(\n        {\n            name_uz: \"\",\n            name_ru: \"\",\n            name_en: \"\"\n        })\n\n    const getData = () => {\n        axios.get(`${value.url}/dashboard/extraservices/`, {\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n        }).then((response) => {\n            setColorsList(response.data);\n        })\n    }\n\n    useEffect(() => {\n        getData()\n    }, []);\n\n    const addColor = (status) => {\n        const {name_uz, name_ru, name_en} = translations;\n\n        const isAnyNameFilled = name_uz.trim() && name_ru.trim() && name_en.trim();\n\n        if (!isAnyNameFilled) {\n            alert(\"Iltimos, formani toldiring\");\n            return;\n        }\n\n        const translation_list = {\n            uz: {\n                name: name_uz.trim()\n            },\n            ru: {\n                name: name_ru.trim()\n            },\n            en: {\n                name: name_en.trim()\n            }\n        };\n\n        if (status === \"add\") {\n            axios.post(`${value.url}/dashboard/extraservices/`, {\n                    is_main: isMain,\n                    price,\n                    translations: translation_list\n                },\n                {\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n                })\n                .then((response) => {\n                    setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n                    setIsMain(false);\n                    setPrice(\"\")\n                    getData();\n                })\n                .catch((error) => {\n                    console.error(\"Xizmat qo'shishda xatolik:\", error);\n                });\n        }\n\n        if (status === \"edit\") {\n            axios.put(`${value.url}/dashboard/extraservices/${editId}/`, {\n                    is_main: isMain,\n                    price,\n                    translations: translation_list\n                },\n                {\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n                })\n                .then((response) => {\n                    setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n                    getData();\n                    setEdit(false);\n                    setIsMain(false);\n                    setPrice(\"\")\n                })\n                .catch((error) => {\n                    console.error(\"Rangni tahrirlashda xatolik:\", error);\n                });\n        }\n    };\n\n    const delColor = (id) => {\n        axios.delete(`${value.url}/dashboard/extraservices/${id}/`, {\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n        }).then((response) => {\n            setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n            getData()\n            setEdit(false)\n        })\n    }\n\n    const handleEdit = (color) => {\n        setEdit(true);\n        setEditId(color.id);\n        setTranslations({\n            name_uz: color.translations[\"uz\"].name || \"\",\n            name_ru: color.translations[\"ru\"].name || \"\",\n            name_en: color.translations[\"en\"].name || \"\"\n        });\n        setIsMain(color.is_main)\n        setPrice(color.price)\n    };\n\n    const handleCheckboxChange = () => {\n        setIsMain(!isMain);\n    };\n\n    return <div className=\"extra-services-wrapper\">\n        <div className=\"header\">\n            <div className=\"form-wrapper\">\n\n                <label htmlFor=\"ismain\" className=\"ismain\">\n                    <div className=\"name\">\n                        Asosiymi?\n                    </div>\n\n                    <input\n                        type=\"checkbox\"\n                        checked={isMain}\n                        id=\"ismain\"\n                        onChange={handleCheckboxChange}\n                    />\n                </label>\n\n                <input\n                    value={price}\n                    onChange={(e) => setPrice(e.target.value)}\n                    placeholder=\"Narx\"\n                    type=\"number\"\n                />\n\n\n                <input\n                    value={translations.name_uz}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_uz: e.target.value})\n                    }\n                    placeholder=\"Xizmat nomi (uz)...\"\n                    type=\"text\"\n                />\n                <input\n                    value={translations.name_en}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_en: e.target.value})\n                    }\n                    placeholder=\"Price name (en)...\"\n                    type=\"text\"\n                />\n\n                <input\n                    value={translations.name_ru}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_ru: e.target.value})\n                    }\n                    placeholder=\"Название услуги (ru)...\"\n                    type=\"text\"\n                />\n\n\n                {edit ? <div onClick={() => addColor(\"edit\")} className=\"add-color\">\n                    <img src=\"./images/admin/checkmark.png\" alt=\"\"/>\n                </div> : <div onClick={() => addColor(\"add\")} className=\"add-color\">\n                    <img src=\"./images/admin/add.png\" alt=\"\"/>\n                </div>}\n\n            </div>\n        </div>\n        <div className=\"colors-cards\">\n            <div className=\"wrapper-box\">\n                {\n                    colorsList.map((service, index) => (\n                        <div key={index} className={`color-card ${service.is_main && \"ismain\"}`}>\n                            <div className=\"name\">{service.translations[i18next.language].name}: {service.price} so'm\n                            </div>\n                            <div className=\"bttons\">\n                                <div onClick={() => handleEdit(service)} className=\"btn\">\n                                    <img src=\"./images/admin/edit-tools.png\" alt=\"\"/>\n                                </div>\n\n                                <div onClick={() => delColor(service.id)} className=\"btn\">\n                                    <img src=\"./images/admin/delete.png\" alt=\"\"/>\n                                </div>\n                            </div>\n                        </div>\n                    ))\n                }\n            </div>\n        </div>\n    </div>\n}\n\nexport default ExtraServices;","import {useEffect, useRef, useState, useContext} from \"react\";\r\nimport {CSSTransition} from \"react-transition-group\";\r\nimport {useFormik} from \"formik\";\r\nimport {\r\n    TextField,\r\n    MenuItem,\r\n    InputLabel,\r\n    FormControl,\r\n    Select\r\n} from \"@mui/material\";\r\nimport \"./style.scss\"\r\nimport axios from \"axios\";\r\nimport {MyContext} from \"../../App/App\";\r\nimport i18next from \"i18next\";\r\nimport LoaderAdmin from \"../loader-admin/LoaderAdmin\";\r\n\r\nconst Price = () => {\r\n    const [loader, setLoader] = useState(false);\r\n    let value = useContext(MyContext);\r\n    const [modalShow, setModalShow] = useState({show: false, status: false});\r\n    const nodeRef = useRef(null);\r\n    const [direction, setDirection] = useState([])\r\n    const [tarif, setTarif] = useState([]);\r\n    const [regions, setRegions] = useState([]);\r\n    const [serviceList, setServiceList] = useState([]);\r\n    const [editId, setEditId] = useState(\"\");\r\n    const [from, setFrom] = useState(\"\");\r\n    const [to, setTo] = useState(\"\");\r\n    const [category, setCategory] = useState(\"\");\r\n    const [service, setService] = useState(\"\");\r\n\r\n    const validate = (values) => {\r\n        const errors = {};\r\n\r\n        if (!values.car_service) {\r\n            errors.car_service = \"Required\";\r\n        }\r\n\r\n        if (!values.car_category) {\r\n            errors.car_category = \"Required\";\r\n        }\r\n        if (!values.from_region) {\r\n            errors.from_region = \"Required\";\r\n        }\r\n        if (!values.to_region) {\r\n            errors.to_region = \"Required\";\r\n        }\r\n        if (!values.price) {\r\n            errors.price = \"Required\";\r\n        }\r\n\r\n        return errors;\r\n    };\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            car_service: \"\",\r\n            car_category: \"\",\r\n            from_region: \"\",\r\n            to_region: \"\",\r\n            price: \"\",\r\n        },\r\n        validate,\r\n        onSubmit: (values) => {\r\n            sendAllInfo()\r\n        },\r\n    });\r\n\r\n    const [links, setLinks] = useState({});\r\n    const [Pages, setPages] = useState([]);\r\n    const [activeItem, setActiveItem] = useState(1);\r\n    const visiblePages = [];\r\n    const totalPages = Pages.length;\r\n\r\n    if (totalPages <= 7) {\r\n        visiblePages.push(...Pages.map((_, index) => index + 1));\r\n    } else {\r\n        visiblePages.push(1);\r\n\r\n        if (activeItem > 3) {\r\n            visiblePages.push(\"...\");\r\n        }\r\n\r\n        for (let i = Math.max(2, activeItem - 1); i <= Math.min(totalPages - 1, activeItem + 1); i++) {\r\n            visiblePages.push(i);\r\n        }\r\n\r\n        if (activeItem < totalPages - 2) {\r\n            visiblePages.push(\"...\");\r\n        }\r\n\r\n        visiblePages.push(totalPages);\r\n    }\r\n\r\n    const getList = (url = null, page = 1) => {\r\n        setLoader(true);\r\n        const main = url ? url : `${value.url}/dashboard/price/?page=${page}`;\r\n        axios.get(main, {\r\n            headers: {\r\n                \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\r\n            }\r\n        }).then((response) => {\r\n            setServiceList(response.data.results);\r\n            setLinks(response.data.links);\r\n            setPages(response.data.links.pages);\r\n            setActiveItem(page);\r\n        }).finally(() => {\r\n            setLoader(false);\r\n        });\r\n\r\n    };\r\n\r\n    const sendAllInfo = () => {\r\n        let allInfo = {\r\n            service: formik.values.car_service,\r\n            category: formik.values.car_category,\r\n            from_region: formik.values.from_region,\r\n            to_region: formik.values.to_region,\r\n            cost: Number(formik.values.price),\r\n        }\r\n\r\n        if (!editId) {\r\n            axios.post(`${value.url}/dashboard/price/`, allInfo, {\r\n                headers: {\r\n                    Authorization: `Token ${localStorage.getItem(\"token\")}`,\r\n                },\r\n            }).then((response) => {\r\n                getList(null, activeItem)\r\n                setModalShow({status: \"\", show: false})\r\n                formik.resetForm();\r\n            })\r\n        }\r\n\r\n        if (editId) {\r\n            axios.put(`${value.url}/dashboard/price/${editId}/`, allInfo,\r\n                {\r\n                    headers: {\r\n                        Authorization: `Token ${localStorage.getItem(\"token\")}`,\r\n                    },\r\n                }).then((response) => {\r\n                getList(null, activeItem)\r\n                setModalShow({status: \"\", show: false})\r\n                formik.resetForm();\r\n                setEditId(\"\")\r\n            })\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getList()\r\n\r\n        axios.get(`${value.url}/dashboard/region/`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setRegions(response.data);\r\n        })\r\n\r\n        axios.get(`${value.url}/dashboard/carcategory/`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setTarif(response.data);\r\n        })\r\n\r\n        axios.get(`${value.url}/dashboard/carservice/`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setDirection(response.data);\r\n        })\r\n\r\n    }, []);\r\n\r\n    const delColor = (id) => {\r\n        axios.delete(`${value.url}/dashboard/price/${id}/`, {\r\n            headers: {\r\n                Authorization: `Token ${localStorage.getItem(\"token\")}`,\r\n            },\r\n        }).then((response) => {\r\n            getList(null, activeItem)\r\n        })\r\n    }\r\n\r\n    const editValues = (service) => {\r\n        setEditId(service.id)\r\n        setModalShow({show: true, status: \"edit-driver\"});\r\n        formik.setValues({\r\n            car_service: service.service.id,\r\n            car_category: service.category.id,\r\n            from_region: service.from_region.id,\r\n            to_region: service.to_region.id,\r\n            price: service.cost,\r\n        });\r\n    }\r\n\r\n    const filterData = () => {\r\n        setLoader(true);\r\n        let page = 1\r\n        axios.get(`${value.url}/dashboard/price/?service=${service}&category=${category}&from_region=${from}&to_region=${to}`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setServiceList(response.data.results);\r\n            setLinks(response.data.links);\r\n            setPages(response.data.links.pages);\r\n            setActiveItem(page);\r\n        }).finally(() => {\r\n            setLoader(false);\r\n        });\r\n    }\r\n\r\n    return <div className=\"price-container\">\r\n        <CSSTransition\r\n            in={modalShow.show}\r\n            nodeRef={nodeRef}\r\n            timeout={300}\r\n            classNames=\"alert\"\r\n            unmountOnExit\r\n        >\r\n            <div className=\"modal-sloy\">\r\n                <div ref={nodeRef} className=\"modal-card\">\r\n\r\n                    {modalShow.status === \"add-driver\" && (\r\n                        <div className=\"add-driver\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img\r\n                                    onClick={() => {\r\n                                        setModalShow({status: \"\", show: false})\r\n                                        formik.resetForm()\r\n                                    }}\r\n                                    src=\"./images/admin/x.png\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"title\">Narx qo'shish</div>\r\n\r\n                            <div className=\"form-container\">\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Yo'nalish</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.car_service === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.car_service}\r\n                                                label=\"Yo'nalish\"\r\n                                                name=\"car_service\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {direction.map((item, index) => (\r\n                                                    <MenuItem key={index} value={item.id}>\r\n                                                        {item.translations[i18next.language].name}\r\n                                                    </MenuItem>\r\n                                                ))}\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Tarif</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.car_category === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.car_category}\r\n                                                label=\"Tarif\"\r\n                                                name=\"car_category\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {tarif.map((item, index) => (\r\n                                                    <MenuItem key={index} value={item.id}>\r\n                                                        {item.translations[i18next.language].name}\r\n                                                    </MenuItem>\r\n                                                ))}\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Qayerdan</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.from_region === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.from_region}\r\n                                                label=\"Qayerdan\"\r\n                                                name=\"from_region\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {\r\n                                                    regions.map((item, index) => {\r\n                                                        return <MenuItem key={index}\r\n                                                                         value={item.id}>\r\n                                                            {item.translations[i18next.language].name}\r\n                                                        </MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Qayerga</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.to_region === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.to_region}\r\n                                                label=\"Qayerga\"\r\n                                                name=\"to_region\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {\r\n                                                    regions.map((item, index) => {\r\n                                                        return <MenuItem key={index}\r\n                                                                         value={item.id}>\r\n                                                            {item.translations[i18next.language].name}\r\n                                                        </MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.price === \"Required\"}\r\n                                            value={formik.values.price}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"price\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Narxi\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div onClick={sendAllInfo} className=\"add-btn\">\r\n                                    Narx qo'shish\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalShow.status === \"edit-driver\" && (\r\n                        <div className=\"add-driver\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img\r\n                                    onClick={() => {\r\n                                        setModalShow({status: \"\", show: false})\r\n                                        formik.resetForm();\r\n                                        setEditId(\"\")\r\n                                    }}\r\n                                    src=\"./images/admin/x.png\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"title\">Narxni tahrirlash</div>\r\n\r\n                            <div className=\"form-container\">\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Yo'nalish</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.car_service === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.car_service}\r\n                                                label=\"Yo'nalish\"\r\n                                                name=\"car_service\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {direction.map((item, index) => (\r\n                                                    <MenuItem key={index} value={item.id}>\r\n                                                        {item.translations[i18next.language].name}\r\n                                                    </MenuItem>\r\n                                                ))}\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Tarif</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.car_category === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.car_category}\r\n                                                label=\"Tarif\"\r\n                                                name=\"car_category\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {tarif.map((item, index) => (\r\n                                                    <MenuItem key={index} value={item.id}>\r\n                                                        {item.translations[i18next.language].name}\r\n                                                    </MenuItem>\r\n                                                ))}\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Qayerdan</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.from_region === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.from_region}\r\n                                                label=\"Qayerdan\"\r\n                                                name=\"from_region\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {\r\n                                                    regions.map((item, index) => {\r\n                                                        return <MenuItem key={index}\r\n                                                                         value={item.id}>\r\n                                                            {item.translations[i18next.language].name}\r\n                                                        </MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Qayerga</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.to_region === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.to_region}\r\n                                                label=\"Qayerga\"\r\n                                                name=\"to_region\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {\r\n                                                    regions.map((item, index) => {\r\n                                                        return <MenuItem key={index}\r\n                                                                         value={item.id}>\r\n                                                            {item.translations[i18next.language].name}\r\n                                                        </MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.price === \"Required\"}\r\n                                            value={formik.values.price}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"price\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Narxi\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div onClick={sendAllInfo} className=\"add-btn\">\r\n                                    Saqlash\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                </div>\r\n            </div>\r\n        </CSSTransition>\r\n\r\n        <div className=\"header\">\r\n            <div className=\"filter-form\">\r\n                <div className=\"select-sides\">\r\n                    <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                        <InputLabel id=\"demo-select-large-label\">Yo'nalish</InputLabel>\r\n                        <Select\r\n                            labelid=\"demo-select-small-label\"\r\n                            id=\"demo-select-small\"\r\n                            value={service}\r\n                            label=\"Qayerga\"\r\n                            name=\"service\"\r\n                            onChange={(e) => setService(e.target.value)}\r\n                        >\r\n                            <MenuItem value=\"\">\r\n                                -- Barchasi --\r\n                            </MenuItem>\r\n\r\n                            {direction.map((item, index) => (\r\n                                <MenuItem key={index} value={item.service_type}>\r\n                                    {item.translations[i18next.language].name}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                </div>\r\n\r\n                <div className=\"select-sides\">\r\n                    <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                        <InputLabel id=\"demo-select-large-label\">Tarif</InputLabel>\r\n                        <Select\r\n                            labelid=\"demo-select-small-label\"\r\n                            id=\"demo-select-small\"\r\n                            value={category}\r\n                            label=\"Tarif\"\r\n                            name=\"car_category\"\r\n                            onChange={(e) => setCategory(e.target.value)}\r\n                        >\r\n                            <MenuItem value=\"\">\r\n                                -- Barchasi --\r\n                            </MenuItem>\r\n                            {tarif.map((item, index) => (\r\n                                <MenuItem key={index} value={item.category_type}>\r\n                                    {item.translations[i18next.language].name}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                </div>\r\n\r\n                <div className=\"select-sides\">\r\n                    <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                        <InputLabel id=\"demo-select-large-label\">Qayerdan</InputLabel>\r\n                        <Select\r\n                            labelid=\"demo-select-small-label\"\r\n                            id=\"demo-select-small\"\r\n                            value={from}\r\n                            label=\"Qayerdan\"\r\n                            name=\"from\"\r\n                            onChange={(e) => setFrom(e.target.value)}\r\n                        >\r\n                            <MenuItem value=\"\">\r\n                                -- Barchasi --\r\n                            </MenuItem>\r\n                            {\r\n                                regions.map((item, index) => {\r\n\r\n                                    return <MenuItem key={index}\r\n                                                     value={item.code}>\r\n                                        {item.translations[i18next.language].name}\r\n                                    </MenuItem>\r\n                                })\r\n                            }\r\n                        </Select>\r\n                    </FormControl>\r\n                </div>\r\n\r\n                <div className=\"select-sides\">\r\n                    <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                        <InputLabel id=\"demo-select-large-label\">Qayerga</InputLabel>\r\n                        <Select\r\n                            labelid=\"demo-select-small-label\"\r\n                            id=\"demo-select-small\"\r\n                            value={to}\r\n                            label=\"Qayerga\"\r\n                            name=\"to\"\r\n                            onChange={(e) => setTo(e.target.value)}\r\n                        >\r\n                            <MenuItem value=\"\">\r\n                                -- Barchasi --\r\n                            </MenuItem>\r\n                            {\r\n                                regions.map((item, index) => {\r\n                                    return <MenuItem key={index}\r\n                                                     value={item.code}>\r\n                                        {item.translations[i18next.language].name}\r\n                                    </MenuItem>\r\n                                })\r\n                            }\r\n                        </Select>\r\n                    </FormControl>\r\n                </div>\r\n\r\n                <div className=\"update-driver\">\r\n                    <img onClick={filterData} src=\"./images/admin/panel.png\" alt=\"changes\"/>\r\n                </div>\r\n            </div>\r\n\r\n            {/*<div onClick={() => {*/}\r\n            {/*    setModalShow({show: true, status: \"add-driver\"});*/}\r\n            {/*}} className=\"add-driver-btn\">*/}\r\n            {/*    Narx qo'shish*/}\r\n            {/*</div>*/}\r\n        </div>\r\n\r\n        {loader ? <LoaderAdmin/> : <div className=\"table-wrapper\">\r\n            <table>\r\n                <thead>\r\n                <tr>\r\n                    <th>№</th>\r\n                    <th>Yo'nalish</th>\r\n                    <th>Tarif</th>\r\n                    <th>Qayerdan</th>\r\n                    <th>Qayerga</th>\r\n                    <th>Narx</th>\r\n                    {/*<th>O'chirish</th>*/}\r\n                    <th></th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {serviceList.map((item, index) => {\r\n                    return <tr key={index}>\r\n                        <td>{index + 1}</td>\r\n                        <td>{item.service.translations?.[i18next.language]?.name}</td>\r\n                        <td>{item.category.translations?.[i18next.language]?.name}</td>\r\n                        <td>{item.from_region.translations?.[i18next.language]?.name}</td>\r\n                        <td>{item.to_region.translations?.[i18next.language]?.name}</td>\r\n                        <td>{item.cost}</td>\r\n                        {/*<td>*/}\r\n                        {/*    <div className=\"icon\">*/}\r\n                        {/*        <img onClick={() => delColor(item.id)} src=\"./images/admin/delete.png\" alt=\"\"/>*/}\r\n                        {/*    </div>*/}\r\n                        {/*</td>*/}\r\n                        <td></td>\r\n                        <div className=\"edit-icon\">\r\n                            <img onClick={() => editValues(item)} src=\"./images/admin/edit-tools.png\" alt=\"\"/>\r\n                        </div>\r\n                    </tr>\r\n                })}\r\n                </tbody>\r\n            </table>\r\n        </div>}\r\n\r\n\r\n        <div className=\"pagination\">\r\n            <div onClick={() => {\r\n                if (activeItem > 1) {\r\n                    getList(links.previous, activeItem - 1);\r\n                }\r\n            }} className=\"prev\">\r\n                <img src=\"./images/admin/prev.png\" alt=\"Prev\"/>\r\n            </div>\r\n\r\n            {visiblePages.map((item, index) => (\r\n                <div key={index}\r\n                     onClick={() => {\r\n                         if (item !== \"...\") {\r\n                             const pageNumber = item;\r\n                             const pageObj = Pages.find(item_page => item_page[pageNumber]);\r\n                             const pageUrl = pageObj ? pageObj[pageNumber] : null;\r\n                             getList(pageUrl, item);\r\n                         }\r\n                     }}\r\n                     className={`items ${activeItem === item ? \"active\" : \"\"} `}\r\n                     style={{cursor: item === \"...\" ? \"default\" : \"pointer\"}}>\r\n                    {item}\r\n                </div>\r\n            ))}\r\n\r\n            <div className=\"next\" onClick={() => {\r\n                if (activeItem < totalPages) {\r\n                    getList(links.next, activeItem + 1);\r\n                }\r\n            }}>\r\n                <img src=\"./images/admin/next.png\" alt=\"Next\"/>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Price","\r\nimport MainHome from \"./components/admin/admin home/MainHome\";\r\nimport Admin from \"./components/admin/Admin/Admin\";\r\nimport LoginAdmin from \"./components/login/LoginAdmin\";\r\nimport Drivers from \"./components/admin/drivers/Drivers\";\r\nimport ChatDriver from \"./components/admin/chat/ChatDriver\";\r\nimport Clients from \"./components/admin/clients/Clients\";\r\nimport Colors from \"./components/admin/colors/Colors\";\r\nimport CarBrand from \"./components/admin/car-brend/CarBrand\";\r\nimport Service from \"./components/admin/service/Service\";\r\nimport Balance from \"./components/admin/balance/Balance\";\r\nimport Orders from \"./components/admin/orders/Orders\";\r\nimport CarModel from \"./components/admin/car-model/CarModel\";\r\nimport Payment from \"./components/admin/payment/Payment\";\r\nimport RejectReason from \"./components/admin/reject-reason/RejectReason\";\r\nimport ExtraServices from \"./components/admin/extra-services/ExtraServices\";\r\nimport Price from \"./components/admin/price/Price\";\r\n\r\nexport const adminRoutes = [\r\n    {\r\n        path: \"/*\",\r\n        element: <Admin/>\r\n    },\r\n    {\r\n        path: \"/\",\r\n        element: <LoginAdmin/>\r\n    }\r\n];\r\n\r\nexport const adminPageRoutes = [\r\n    {\r\n        path: \"/dashboard\",\r\n        element: <MainHome/>\r\n    },\r\n    {\r\n        path: \"/drivers\",\r\n        element: <Drivers/>\r\n    },\r\n    {\r\n        path: \"/clients\",\r\n        element: <Clients/>\r\n    },\r\n    {\r\n        path: \"/chat-drivers\",\r\n        element: <ChatDriver/>\r\n    },\r\n    {\r\n        path: \"/colors\",\r\n        element: <Colors/>\r\n    },\r\n    {\r\n        path: \"/car-brands\",\r\n        element: <CarBrand/>\r\n    },\r\n    {\r\n        path: \"/car-models\",\r\n        element: <CarModel/>\r\n    },\r\n    {\r\n        path: \"/service\",\r\n        element: <Service/>\r\n    },\r\n    {\r\n        path: \"/balance\",\r\n        element: <Balance/>\r\n    },\r\n    {\r\n        path: \"/orders\",\r\n        element: <Orders/>\r\n    },\r\n    {\r\n        path: \"/payment\",\r\n        element: <Payment/>\r\n    },\r\n    {\r\n        path: \"/reject-reason\",\r\n        element: <RejectReason/>\r\n    },\r\n    {\r\n        path: \"/extra-services\",\r\n        element: <ExtraServices/>\r\n    },\r\n\r\n    {\r\n        path: \"/price\",\r\n        element: <Price/>\r\n    },\r\n\r\n];","import \"./not-found.scss\"\r\n\r\nconst NotFound = () => {\r\n    return <div className=\"not-found-wrapper\">\r\n        <div className=\"sloy\">\r\n            <div className=\"text1\">\r\n                <div className=\"error\">\r\n                    error 404\r\n                </div>\r\n                <div className=\"text\">\r\n                    Page not found\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport default NotFound","import React, {useState, createContext} from \"react\";\r\nimport {Routes, Route} from \"react-router-dom\";\r\nimport {adminRoutes} from \"../../rootes\";\r\nimport NotFound from \"../notFound/NotFound\";\r\n\r\nexport const MyContext = createContext();\r\n\r\nfunction App() {\r\n    const [url, setUrl] = useState('https://api.adataxi.uz');\r\n\r\n    return (\r\n        <>\r\n            <MyContext.Provider value={{\r\n                url\r\n            }}>\r\n                <Routes>\r\n                    {\r\n                        adminRoutes.map((route, index) => (\r\n                            <Route key={index} {...route} />\r\n                        ))\r\n                    }\r\n                    <Route path={'*'} element={<NotFound/>}/>\r\n                </Routes>\r\n\r\n            </MyContext.Provider>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;"],"names":["Loader","_jsx","_Fragment","children","className","MainHome","statisitc","setStatisitc","useState","sockedContext","setSockedContext","locationsList","setLocationsList","center","setCenter","useEffect","localStorage","getItem","websocket","W3CWebSocket","concat","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","lat","lng","axios","get","then","response","data","onmessage","event","_data$message","JSON","parse","message","code","removeItem","window","location","pathname","action","isLoaded","useLoadScript","googleMapsApiKey","options","useMemo","disableDefaultUI","clickableIcons","selectedLocation","setSelectedLocation","icon","url","scaledSize","width","height","_jsxs","src","alt","drivers","clients","avilable_drivers","rides","GoogleMap","zoom","mapContainerClassName","map","item","index","MarkerF","onClick","InfoWindow","Number","onCloseClick","car_number","phone_number","Admin","t","useTranslation","useContext","MyContext","navigate","useNavigate","adminMenu","setAdminMenu","language","name","country_code","img","NavLink","to","_ref","isActive","Dropdown","Toggle","variant","id","loading","i18next","Menu","_ref2","Item","setItem","changeLanguage","confirm","Routes","adminPageRoutes","route","Route","_objectSpread","useOnKeyPress","callback","targetKey","keyPressHandler","key","addEventListener","removeEventListener","LoginAdmin","value","phone","setPhone","password","setPassword","HandleLogin","trim","length","user","username","post","token","catch","error","_error$response","status","alert","Clear","onChange","e","target","placeholder","type","onKeyUp","console","log","LoaderAdmin","Drivers","modalShow","setModalShow","show","nodeRef","useRef","getSearchText","setGetSearchText","driverPhoto","setDriverPhoto","carInformation","setCarInformation","driversList","setDriversList","driverId","setDriverId","reason","setReason","loader","setLoader","car_serviceId","setCarServiceId","car_categoriesId","setCarCategoriesId","regions","setRegions","luggage","setLuggage","profileImage","setProfileImage","car_images","setCar_images","base_car_images","setBase_Car_images","doc_images","setDocImages","base_doc_images","setBaseDocImages","car_make","setCar_make","car_model","setCar_model","car_colors","setCar_colors","extra_services","setExtra_services","extra_servicesList","setExtra_servicesList","car_categories","setCar_categories","car_service","setCar_service","from","setFrom","setTo","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","confirmFilter","setConfirmFilter","isOpen","setIsOpen","currentImage","setCurrentImage","formik","useFormik","initialValues","first_name","last_name","birth_date","car_color","seat_count","from_region","to_region","validate","values","errors","onSubmit","sendAllInfo","Pages","setPages","activeItem","setActiveItem","links","setLinks","visiblePages","totalPages","push","_","i","Math","max","min","getList","arguments","undefined","page","main","headers","results","pages","finally","getCarNames","getInputPhoto","file","files","formData","FormData","role","gender","is_verified","is_confirmed","driver","append","Array","isArray","forEach","resetForm","patch","blockDriver","driver_id","getCarImages","getDocsImages","filterData","CSSTransition","in","timeout","classNames","unmountOnExit","ref","TextField","handleChange","sx","m","minWidth","size","label","htmlFor","FormControl","InputLabel","Select","labelid","MenuItem","translations","touched","Boolean","helperText","inputProps","fullWidth","labelId","multiple","setFieldValue","split","input","OutlinedInput","renderValue","selected","find","join","Checkbox","checked","includes","ListItemText","primary","handleSubmit","rate","finished_orders_count","category","handleCheckboxChangeService","serviceId","prevSelected","filter","handleCheckboxChangeCategory","verify","available_services","available_categories","prevList","image","setTimeout","handleDeleteImageBase","driver_car_image","preview","prevImages","handleDeleteImage","reader","FileReader","onloadend","result","readAsDataURL","addCar_Images","handleDeleteImageDocsBase","driver_document_image","handleDeleteImageDocs","addCar_Images_Docs","Lightbox","mainSrc","onCloseRequest","cursor","profile_image","user_name","created_at","getInformation","is_block","delDriver","delete","setValues","service","previous","pageNumber","pageObj","item_page","pageUrl","next","ChatDriver","bodyRef","chats","setChats","setMessage","activeCHat","setActiveChat","messageText","setMessageText","current","scrollTop","scrollHeight","Authorization","searchText","toString","toLowerCase","replace","phoneNumber","user_phone","chat","getMessage","title","chat_id","closed","delChat","author","is_admin","time","sendMessage","room","Clients","client_id","Colors","setTranslations","name_uz","name_ru","name_en","colorsList","setColorsList","edit","setEdit","editId","setEditId","getData","addColor","translation_list","uz","ru","en","put","color","handleEdit","delColor","CarBrand","Service","serviceList","setServiceList","setPageNumber","pagesVisited","pageCount","ceil","start_price","price_per_km","price_per_min","wait_price_per_min","free_wait_time","includedCars","allInfo","getDrivers","productList","slice","editValues","ReactPaginate","breakLabel","previousLabel","nextLabel","onPageChange","_ref$current","scrollIntoView","behavior","containerClassName","previousLinkClassName","nextLinkClassName","disabledCalassName","activeClassName","Balance","_item$driver_phone","driver_phone","driver_name","id_number","fund","Orders","orderStatus","setOrderStatus","orderId","setOrderId","reasonList","setReasonList","statistics","setStatistics","information","setInformation","client","setClient","setDriver","setStatus","direction","setDirection","tarif","setTarif","date","setDate","distance","price","end_date","pick_up_locations","address","drop_off_locations","service_type","passanger_count","payment_type","pick_up_date","book_all_seats","payer","receiver_phone","sender_phone","rejected_reason","comment_to_driver","changeStatus","order_id","reason_id","total_orders","finished_orders","active_orders","rejected_orders","orders_today","orders_this_month","_item$client","_item$client2","_item$client3","car_category","CarModel","carBrandId","setCarBrandId","make","brand","Payment","balance_id","amount","payment_operator","updated_at","RejectReason","rejectStatus","setRejectStatus","ExtraServices","isMain","setIsMain","setPrice","is_main","handleCheckboxChange","Price","setCategory","setService","cost","category_type","_item$service$transla","_item$service$transla2","_item$category$transl","_item$category$transl2","_item$from_region$tra","_item$from_region$tra2","_item$to_region$trans","_item$to_region$trans2","adminRoutes","path","element","NotFound","createContext","setUrl","Provider"],"sourceRoot":""}
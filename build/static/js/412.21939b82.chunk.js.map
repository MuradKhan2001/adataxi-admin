{"version":3,"file":"static/js/412.21939b82.chunk.js","mappings":"6MAEA,MAWA,EAXeA,KACJC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACHF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,oBAAmBD,UAC9BF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,OAAMD,UACjBF,EAAAA,EAAAA,KAAA,QAAMG,UAAU,iB,cCAhC,MA4HA,EA1HiBC,KACb,MAAOC,EAAWC,IAAgBC,EAAAA,EAAAA,UAAS,KAGpCC,EAAeC,IAFJ,IAAIC,UAAU,8DAADC,OAA+DC,aAAaC,QAAQ,YAEzEN,EAAAA,EAAAA,UAAS,MAEnDO,EAAAA,EAAAA,YAAU,KACNC,EAAAA,EAAMC,IAAI,kDAAkDC,MAAMC,IAC9DZ,EAAaY,EAASC,KAAK,SAEhC,IAEH,MAAOC,EAAkBC,IAAuBd,EAAAA,EAAAA,UAAS,OAUnD,SAACe,IAAYC,EAAAA,EAAAA,IAAc,CAC7BC,iBAzBQ,4CA4BNC,GAASC,EAAAA,EAAAA,UAAQ,MAAQC,IAAK,GAAIC,IAAK,MAAM,IAE7CC,GAAUH,EAAAA,EAAAA,UAAQ,MAEhBI,kBAAkB,EAClBC,gBAAgB,KAChB,IAER,IAAKT,EAAU,OAAOtB,EAAAA,EAAAA,KAACD,EAAM,IAE7B,MAAMiC,EAAO,CAACC,IAAK,iCAAkCC,WAAY,CAACC,MAAO,GAAIC,OAAQ,KAErF,OAAOC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,uBAAsBD,SAAA,EAExCmC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,cAAaD,SAAA,EACxBmC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,iBAAgBD,SAAA,EAC3BF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,OAAMD,UACjBF,EAAAA,EAAAA,KAAA,OAAKsC,IAAI,4BAA4BC,IAAI,QAE7CvC,EAAAA,EAAAA,KAAA,OAAKG,UAAU,QAAOD,SAAC,wBACvBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,QAAOD,SAAEG,EAAUmC,cAEtCH,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,iBAAgBD,SAAA,EAC3BF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,OAAMD,UACjBF,EAAAA,EAAAA,KAAA,OAAKsC,IAAI,0BAA0BC,IAAI,QAE3CvC,EAAAA,EAAAA,KAAA,OAAKG,UAAU,QAAOD,SAAC,oBACvBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,QAAOD,SAAEG,EAAUoC,cAEtCJ,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,iBAAgBD,SAAA,EAC3BF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,OAAMD,UACjBF,EAAAA,EAAAA,KAAA,OAAKsC,IAAI,+BAA+BC,IAAI,QAEhDvC,EAAAA,EAAAA,KAAA,OAAKG,UAAU,QAAOD,SAAC,qBACvBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,QAAOD,SAAEG,EAAUqC,uBAEtCL,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,iBAAgBD,SAAA,EAC3BF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,OAAMD,UACjBF,EAAAA,EAAAA,KAAA,OAAKsC,IAAI,mCAAmCC,IAAI,QAEpDvC,EAAAA,EAAAA,KAAA,OAAKG,UAAU,QAAOD,SAAC,uBACvBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,QAAOD,SAAEG,EAAUsC,eAI1C3C,EAAAA,EAAAA,KAAA,OAAKG,UAAU,MAAKD,UAChBF,EAAAA,EAAAA,KAAC4C,EAAAA,GAAS,CACNC,KAAM,EACNpB,OAAQA,EACRI,QAASA,EACTiB,sBAAsB,gBAAe5C,SAEpCM,EAAcuC,QAAU,GAErBV,EAAAA,EAAAA,MAAApC,EAAAA,SAAA,CAAAC,SAAA,CACKM,EAAcwC,KAAKC,IACTjD,EAAAA,EAAAA,KAACkD,EAAAA,GAAM,CAEVC,SAAU,CAACxB,IAAKyB,OAAOH,EAAKI,UAAWzB,IAAKwB,OAAOH,EAAKK,YACxDtB,KAAMA,EACNuB,QAASA,KAvEjClC,EAuEqD4B,KAHxBG,OAAOH,EAAKI,aAOxBjC,IACGpB,EAAAA,EAAAA,KAACwD,EAAAA,GAAU,CACPL,SAAU,CACNxB,IAAKyB,OAAOhC,EAAiBiC,UAC7BzB,IAAKwB,OAAOhC,EAAiBkC,YAEjCG,aA9EPA,KACjBpC,EAAoB,OA6E+BnB,UAE3BF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,WAAUD,UACrBmC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,YAAWD,SAAA,EACtBF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,mBACLkB,EAAiBsC,WAAW,KAAC1D,EAAAA,EAAAA,KAAA,UAC9BA,EAAAA,EAAAA,KAAA,QAAAE,SAAM,eACLkB,EAAiBuC,uBAOpC,W,4CC5GtB,MA+LA,EA/LcC,KACV,MAAM,EAACC,IAAKC,EAAAA,EAAAA,OACAC,EAAAA,EAAAA,YAAWC,GACvB,MAAMC,GAAWC,EAAAA,EAAAA,OACVC,EAAWC,IAAgB7D,EAAAA,EAAAA,WAAS,IAwE3CO,EAAAA,EAAAA,YAAU,QAcP,IAEH,MAAMuD,EAAW,CACb,CACIC,KAAM,KACNC,KAAM,cACNC,aAAc,MAElB,CACIF,KAAM,KACNC,KAAM,mBACNC,aAAc,MAElB,CACIF,KAAM,KACNC,KAAM,iEACNC,aAAc,OAQtB,OAAOnC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,aAAYD,SAAA,EAE9BmC,EAAAA,EAAAA,MAAA,OAAKlC,UAAS,YAAAQ,OAAcwD,EAAY,GAAK,aAAcjE,SAAA,EAEvDF,EAAAA,EAAAA,KAAA,OAAKG,UAAS,QAAAQ,OAAUwD,EAAY,GAAK,aAAcjE,UACnDF,EAAAA,EAAAA,KAAA,OAAKuD,QAASA,IAAMU,EAAS,KAAM3B,IAAI,sBAAsBC,IAAI,QAGrEvC,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAcD,SApHtB,CACX,CACIqE,KAAM,YACNtC,IAAK,IACLwC,IAAK,iCAET,CACIF,KAAM,eACNtC,IAAK,WACLwC,IAAK,8BAET,CACIF,KAAM,WACNtC,IAAK,WACLwC,IAAK,4BAET,CACIF,KAAM,cACNtC,IAAK,UACLwC,IAAK,qCAET,CACIF,KAAM,iBACNtC,IAAK,cACLwC,IAAK,2BAET,CACIF,KAAM,iBACNtC,IAAK,cACLwC,IAAK,2BAET,CACIF,KAAM,UACNtC,IAAK,UACLwC,IAAK,+BAET,CACIF,KAAM,UACNtC,IAAK,SACLwC,IAAK,kCAET,CACIF,KAAM,uBACNtC,IAAK,kBACLwC,IAAK,yCAET,CACIF,KAAM,sBACNtC,IAAK,iBACLwC,IAAK,iCAqEUzB,KAAI,CAACC,EAAMyB,KACPrC,EAAAA,EAAAA,MAACsC,EAAAA,GAAO,CAACC,GAAI3B,EAAKhB,IACT9B,UAAS,YAAAQ,QAAckE,IAAA,IAAC,SAACC,GAASD,EAAA,OAAKC,EAAW,SAAW,MAAK5E,SAAA,EAC9EF,EAAAA,EAAAA,KAAA,OAAKsC,IAAKW,EAAKwB,IAAKlC,IAAI,KACvB4B,GAAanE,EAAAA,EAAAA,KAAA,QAAAE,SAAO+C,EAAKsB,OAAc,KAHTG,QAS/C1E,EAAAA,EAAAA,KAAA,OAAKuD,QAASA,IAAMa,GAAcD,GAAYhE,UAAS,UAAAQ,OAAYwD,EAAY,GAAK,iBAAkBjE,UAClGF,EAAAA,EAAAA,KAAA,OAAKsC,IAAI,+BAA+BC,IAAI,WAKpDF,EAAAA,EAAAA,MAAA,OAAKlC,UAAS,aAAAQ,OAAewD,EAAY,GAAI,cAAejE,SAAA,EACxDmC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,UAASD,SAAA,EACpBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,UAASD,UACpBmC,EAAAA,EAAAA,MAAC0C,EAAAA,EAAQ,CAAA7E,SAAA,EACLmC,EAAAA,EAAAA,MAAC0C,EAAAA,EAASC,OAAM,CAACC,QAAQ,UAAUC,GAAG,iBAAgBhF,SAAA,EAClDF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,QAAQmC,IAAI,0BAA0BC,IAAI,WAAW4C,QAAQ,UAC5EnF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,OAAMD,SAChBmE,EAASrB,KAAI,CAACC,EAAMyB,KAEb1E,EAAAA,EAAAA,KAAA,OAAAE,SACKkF,EAAAA,GAAQf,WAAapB,EAAKqB,KAAOrB,EAAKsB,KAAO,IADxCG,WAO1B1E,EAAAA,EAAAA,KAAC+E,EAAAA,EAASM,KAAI,CAAAnF,SAETmE,EAASrB,KAAIsC,IAAA,IAAC,KAAChB,EAAI,KAAEC,EAAI,aAAEC,GAAac,EAAA,OACrCtF,EAAAA,EAAAA,KAAC+E,EAAAA,EAASQ,KAAI,CACChC,QAASA,IAnD5Be,KACpB1D,aAAa4E,QAAQ,MAAOlB,GAC5Bc,EAAAA,GAAAA,eAAuBd,IAiD+BmB,CAAenB,GAAMpE,SAAEqE,GADjCC,cAOpCxE,EAAAA,EAAAA,KAAA,OAAKG,UAAU,QAAOD,UAClBF,EAAAA,EAAAA,KAAA,OAAKsC,IAAI,oBAAoBC,IAAI,QAErCvC,EAAAA,EAAAA,KAAA,OAAKG,UAAU,QAAOD,UAClBF,EAAAA,EAAAA,KAAA,OAAKuD,QAASA,KACVmC,OAAOC,SAASC,SAAW,IAC3BhF,aAAaiF,WAAW,SACxBjF,aAAaiF,WAAW,UACzB1F,UAAU,OAAMD,UAACF,EAAAA,EAAAA,KAAA,OAAKsC,IAAI,4BAA4BC,IAAI,aAIrEvC,EAAAA,EAAAA,KAAA,OAAKG,UAAU,aAAYD,UACvBF,EAAAA,EAAAA,KAAC8F,EAAAA,GAAM,CAAA5F,SAEC6F,EAAgB/C,KAAI,CAACgD,EAAOtB,KACxB1E,EAAAA,EAAAA,KAACiG,EAAAA,IAAKC,EAAAA,EAAAA,GAAA,GAAiBF,GAAXtB,gBC9L3ByB,EAAgBA,CAACC,EAASC,MACnCvF,EAAAA,EAAAA,YAAU,KACN,MAAMwF,EAAmBC,IACjBA,EAAMC,MAAQH,GACdD,KAKR,OADAV,OAAOe,iBAAiB,UAAUH,GAC3B,KACHZ,OAAOgB,oBAAoB,UAAWJ,MAE5C,CAACF,EAAUC,KC6CjB,EApDmBM,KACf,IAAIC,GAAQ7C,EAAAA,EAAAA,YAAWC,IACNE,EAAAA,EAAAA,MAAjB,MACO2C,EAAOC,IAAYvG,EAAAA,EAAAA,UAAS,KAC5BwG,EAAUC,IAAezG,EAAAA,EAAAA,UAAS,IAEnC0G,EAAcA,KAChB,GAAIJ,EAAMK,OAAOnE,OAAS,GAAKgE,EAASG,OAAOnE,OAAS,EAAG,CACvD,IAAIoE,EAAO,CACPC,SAAUP,EACVE,YAEJhG,EAAAA,EAAMsG,KAAK,GAAD1G,OAAIiG,EAAM3E,IAAG,qBAAqBkF,GAAMlG,MAAMC,IACpDN,aAAa4E,QAAQ,QAAStE,EAASC,KAAKgG,MAC5CvG,aAAa4E,QAAQ,QAAStE,EAASC,KAAKmG,OAC5C5B,OAAOC,SAASC,SAAW,IAC3BhF,aAAa4E,QAAQ,MAAO,SAC7B+B,OAAOC,IACwB,MAA1BA,EAAMtG,SAASuG,QAAgBC,MAAM,gCAGjD,MAAOA,MAAM,uBAYjB,OAHAvB,EAAcc,EAAa,SAC3Bd,GANcwB,KACVb,EAAS,IACTE,EAAY,MAIK,WAEdhH,EAAAA,EAAAA,KAAA,OAAKG,UAAU,kBAAiBD,UAEnCmC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,aAAYD,SAAA,EACvBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,OAAMD,UACjBF,EAAAA,EAAAA,KAAA,OAAKsC,IAAI,oBAAoBC,IAAI,QAErCF,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,YAAWD,SAAA,EACtBF,EAAAA,EAAAA,KAAA,SAAO4G,MAAOC,EAAOe,SAAWC,GAAMf,EAASe,EAAEC,OAAOlB,OAAQmB,YAAY,WAAWC,KAAK,UAC5FhI,EAAAA,EAAAA,KAAA,SAAO4G,MAAOG,EAAUa,SAAWC,GAAMb,EAAYa,EAAEC,OAAOlB,OAAQmB,YAAY,WAC3EC,KAAK,iBAGhBhI,EAAAA,EAAAA,KAAA,OAAKuD,QAAS0D,EAAagB,QAASA,IAAMC,QAAQC,IAAI,SAAUhI,UAAU,YAAWD,SAAC,iB,0HCjDlG,MAmBA,EAnBoBkI,KACTpI,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAcD,UAChCmC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,cAAaD,SAAA,EACxBF,EAAAA,EAAAA,KAAA,WACAA,EAAAA,EAAAA,KAAA,WACAA,EAAAA,EAAAA,KAAA,WACAA,EAAAA,EAAAA,KAAA,WACAA,EAAAA,EAAAA,KAAA,WACAA,EAAAA,EAAAA,KAAA,WACAA,EAAAA,EAAAA,KAAA,WACAA,EAAAA,EAAAA,KAAA,WACAA,EAAAA,EAAAA,KAAA,WACAA,EAAAA,EAAAA,KAAA,WACAA,EAAAA,EAAAA,KAAA,WACAA,EAAAA,EAAAA,KAAA,eCs8CZ,EAl8CgBqI,KACZ,MAAM,EAACxE,IAAKC,EAAAA,EAAAA,MACZ,IAAI8C,GAAQ7C,EAAAA,EAAAA,YAAWC,GACvB,MAAOsE,EAAWC,IAAgBhI,EAAAA,EAAAA,UAAS,CAACiI,MAAM,EAAOf,QAAQ,IAC3DgB,GAAUC,EAAAA,EAAAA,QAAO,MACjBC,GAAMD,EAAAA,EAAAA,QAAO,OACZE,EAAeC,IAAoBtI,EAAAA,EAAAA,UAAS,KAC5CuI,EAAaC,IAAkBxI,EAAAA,EAAAA,UAAS,OACxCyI,EAAgBC,IAAqB1I,EAAAA,EAAAA,UAAS,KAC9C2I,EAAaC,IAAkB5I,EAAAA,EAAAA,UAAS,KACxC6I,EAAUC,IAAe9I,EAAAA,EAAAA,UAAS,KAClC+I,EAAQC,IAAahJ,EAAAA,EAAAA,UAAS,KAC9BiJ,EAAQC,IAAalJ,EAAAA,EAAAA,WAAS,IAE9BmJ,EAAeC,IAAmBpJ,EAAAA,EAAAA,UAAS,KAC3CqJ,EAAkBC,IAAsBtJ,EAAAA,EAAAA,UAAS,KAEjDuJ,EAASC,IAAcxJ,EAAAA,EAAAA,UAAS,KAEhCyJ,EAASC,IAAc1J,EAAAA,EAAAA,UAAS,SAChC2J,EAAcC,IAAmB5J,EAAAA,EAAAA,UAAS,OAC1C6J,EAAYC,IAAiB9J,EAAAA,EAAAA,UAAS,KACtC+J,EAAiBC,IAAsBhK,EAAAA,EAAAA,UAAS,KAEhDiK,EAAYC,IAAgBlK,EAAAA,EAAAA,UAAS,KACrCmK,GAAiBC,KAAoBpK,EAAAA,EAAAA,UAAS,KAE9CqK,GAAUC,KAAetK,EAAAA,EAAAA,UAAS,KAClCuK,GAAWC,KAAgBxK,EAAAA,EAAAA,UAAS,KACpCyK,GAAYC,KAAiB1K,EAAAA,EAAAA,UAAS,KACtC2K,GAAgBC,KAAqB5K,EAAAA,EAAAA,UAAS,KAC9C6K,GAAoBC,KAAyB9K,EAAAA,EAAAA,UAAS,KAEtD+K,GAAgBC,KAAqBhL,EAAAA,EAAAA,UAAS,KAC9CiL,GAAaC,KAAkBlL,EAAAA,EAAAA,UAAS,IAIzCmL,GAAY,CACdC,WAAY,CACRC,MAAO,CACHC,UAAWC,IACX3J,MAAO,QAMZ4J,GAAYC,KAAiBzL,EAAAA,EAAAA,UAAS,GACvC0L,GAFY,IAEGF,GACfG,GAAYC,KAAKC,KAAKlD,EAAYnG,OAHtB,KAsDZsJ,IAASC,EAAAA,EAAAA,IAAU,CACrBC,cAAe,CACX1F,MAAO,GACP2F,WAAY,GACZC,UAAW,GACXC,WAAY,GACZhJ,WAAY,GACZiJ,UAAW,GACX/B,SAAU,GACVE,UAAW,GACXI,eAAgB,GAChB0B,WAAY,GACZC,YAAa,GACbC,UAAW,IAEfC,SAhEcC,IACd,MAAMC,EAAS,CAAC,EA8ChB,OA5CKD,EAAOR,aACRS,EAAOT,WAAa,YAGnBQ,EAAOP,YACRQ,EAAOR,UAAY,YAGlBO,EAAOnG,QACRoG,EAAOpG,MAAQ,YAGdmG,EAAOlC,YACRmC,EAAOnC,UAAY,YAGlBkC,EAAOL,YACRM,EAAON,UAAY,YAGlBK,EAAOpC,WACRqC,EAAOrC,SAAW,YAGjBoC,EAAOtJ,aACRuJ,EAAOvJ,WAAa,YAGnBsJ,EAAO9B,iBACR+B,EAAO/B,eAAiB,YAGvB8B,EAAOJ,aACRK,EAAOL,WAAa,YAGnBI,EAAOH,cACRI,EAAOJ,YAAc,YAGpBG,EAAOF,YACRG,EAAOH,UAAY,YAGhBG,GAkBPC,SAAWF,IACPG,SAIRrM,EAAAA,EAAAA,YAAU,KACNsM,KACArM,EAAAA,EAAMC,IAAI,GAADL,OAAIiG,EAAM3E,IAAG,2BAA2B,CAC7CoL,QAAS,CAAC,cAAgB,SAAD1M,OAAWC,aAAaC,QAAQ,aAC1DI,MAAMC,IACLqK,GAAkBrK,EAASC,SAG/BJ,EAAAA,EAAMC,IAAI,GAADL,OAAIiG,EAAM3E,IAAG,0BAA0B,CAC5CoL,QAAS,CAAC,cAAgB,SAAD1M,OAAWC,aAAaC,QAAQ,aAC1DI,MAAMC,IACLuK,GAAevK,EAASC,SAG5BJ,EAAAA,EAAMC,IAAI,GAADL,OAAIiG,EAAM3E,IAAG,uBAAuB,CACzCoL,QAAS,CAAC,cAAgB,SAAD1M,OAAWC,aAAaC,QAAQ,aAC1DI,MAAMC,IACL2J,GAAY3J,EAASC,SAGzBJ,EAAAA,EAAMC,IAAI,GAADL,OAAIiG,EAAM3E,IAAG,wBAAwB,CAC1CoL,QAAS,CAAC,cAAgB,SAAD1M,OAAWC,aAAaC,QAAQ,aAC1DI,MAAMC,IACL+J,GAAc/J,EAASC,SAG3BJ,EAAAA,EAAMC,IAAI,GAADL,OAAIiG,EAAM3E,IAAG,6BAA6B,CAC/CoL,QAAS,CAAC,cAAgB,SAAD1M,OAAWC,aAAaC,QAAQ,aAC1DI,MAAMC,IACLmK,GAAsBnK,EAASC,SAInCJ,EAAAA,EAAMC,IAAI,GAADL,OAAIiG,EAAM3E,IAAG,sBAAsB,CACxCoL,QAAS,CAAC,cAAgB,SAAD1M,OAAWC,aAAaC,QAAQ,aAC1DI,MAAMC,IACL6I,EAAW7I,EAASC,WAGzB,IAEH,MAAMiM,GAAaA,KACf3D,GAAU,GAEV1I,EAAAA,EAAMC,IAAI,GAADL,OAAIiG,EAAM3E,IAAG,sBAAsB,CACxCoL,QAAS,CAAC,cAAgB,SAAD1M,OAAWC,aAAaC,QAAQ,aAC1DI,MAAMC,IACLiI,EAAejI,EAASC,SACzBoG,OAAOC,IACNU,QAAQC,IAAIX,MACb8F,SAAQ,KACP7D,GAAU,OAIZ8D,GAAerI,IACjBnE,EAAAA,EAAMC,IAAI,GAADL,OAAIiG,EAAM3E,IAAG,uBAAAtB,OAAsBuE,EAAE,KAAK,CAC/CmI,QAAS,CACL,cAAgB,SAAD1M,OAAWC,aAAaC,QAAQ,aAEpDI,MAAMC,IACL6J,GAAa7J,EAASC,UAYxBqM,GAAiBjH,IACnB,MAAMkH,EAAOlH,EAAMuB,OAAO4F,MAAM,GAChCvD,EAAgBsD,IAGdN,GAAcA,KAChB,MAAMQ,EAAW,IAAIC,SACrB,IAAIzG,EAAO,CACP0G,KAAM,SACNrB,WAAYH,GAAOW,OAAOR,WAC1BC,UAAWJ,GAAOW,OAAOP,UACzB5F,MAAOwF,GAAOW,OAAOnG,MACrBiH,OAAQ9D,EACR+D,aAAa,EACbC,cAAc,GAEdC,EAAS,CACTrD,SAAUyB,GAAOW,OAAOpC,SACxBE,UAAWuB,GAAOW,OAAOlC,UACzB6B,UAAWN,GAAOW,OAAOL,UACzBjJ,WAAY2I,GAAOW,OAAOtJ,WAC1BkJ,WAAYP,GAAOW,OAAOJ,WAC1BF,WAAYL,GAAOW,OAAON,WAC1BxB,eAAgBmB,GAAOW,OAAO9B,eAC9B2B,YAAaR,GAAOW,OAAOH,YAC3BC,UAAWT,GAAOW,OAAOF,WAG7B,IAAK,IAAItG,KAAOW,EACZwG,EAASO,OAAO1H,EAAKW,EAAKX,IAG9B,IAAK,IAAIA,KAAOyH,EACRE,MAAMC,QAAQH,EAAOzH,IACrByH,EAAOzH,GAAK6H,SAAQzH,IAChB+G,EAASO,OAAO,UAADvN,OAAW6F,GAAOI,MAGrC+G,EAASO,OAAO,UAADvN,OAAW6F,GAAOyH,EAAOzH,IAI5C0D,GACAyD,EAASO,OAAO,gBAAiBhE,GAGhCd,GACDrI,EAAAA,EAAMsG,KAAK,GAAD1G,OAAIiG,EAAM3E,IAAG,sBAAsB0L,EACzC,CACIN,QAAS,CAAC,cAAgB,SAAD1M,OAAWC,aAAaC,QAAQ,aAC1DI,MAAMC,IACTqH,EAAa,CAACd,OAAQ,GAAIe,MAAM,IAChC4E,KACAf,GAAOiC,eAIXlF,GACArI,EAAAA,EAAMwN,MAAM,GAAD5N,OAAIiG,EAAM3E,IAAG,sBAAAtB,OAAqByI,EAAQ,KAAKuE,EACtD,CACIN,QAAS,CAAC,cAAgB,SAAD1M,OAAWC,aAAaC,QAAQ,aAC1DI,MAAMC,IACTqH,EAAa,CAACd,OAAQ,GAAIe,MAAM,IAChC4E,KACAf,GAAOiC,gBA8BbE,GAAe/G,IACF,UAAXA,GAAsB6B,EAAOpC,OAAOnE,OAAS,EAC7ChC,EAAAA,EAAMsG,KAAK,GAAD1G,OAAIiG,EAAM3E,IAAG,mCACnB,CAACwM,UAAWrF,EAAUE,UAAS,CAC3B+D,QAAS,CAAC,cAAgB,SAAD1M,OAAWC,aAAaC,QAAQ,aAC1DI,MAAMC,IACTqH,EAAa,CAACd,OAAQ,GAAIe,MAAM,IAChC4E,KACA7D,EAAU,OAEX7B,MAAM,+BAEE,YAAXD,GACA1G,EAAAA,EAAMsG,KAAK,GAAD1G,OAAIiG,EAAM3E,IAAG,qCACnB,CAACwM,UAAWrF,GAAW,CACnBiE,QAAS,CAAC,cAAgB,SAAD1M,OAAWC,aAAaC,QAAQ,aAC1DI,MAAMC,IACTqH,EAAa,CAACd,OAAQ,GAAIe,MAAM,IAChC4E,SAiENsB,GAAgBxJ,IAClBqD,EAAa,CAACC,MAAM,EAAMf,OAAQ,eAClC4B,EAAYnE,GACZnE,EAAAA,EAAMsG,KAAK,GAAD1G,OAAIiG,EAAM3E,IAAG,iCAAiC,CAACwM,UAAWvJ,GAAK,CACrEmI,QAAS,CAAC,cAAgB,SAAD1M,OAAWC,aAAaC,QAAQ,aAC1DI,MAAMC,IACLqJ,EAAmBrJ,EAASC,SAC7BoG,OAAOC,IACNU,QAAQC,IAAIX,OAkDdmH,GAAiBzJ,IACnBqD,EAAa,CAACC,MAAM,EAAMf,OAAQ,aAClC4B,EAAYnE,GACZnE,EAAAA,EAAMsG,KAAK,GAAD1G,OAAIiG,EAAM3E,IAAG,sCAAsC,CAACwM,UAAWvJ,GAAK,CAC1EmI,QAAS,CAAC,cAAgB,SAAD1M,OAAWC,aAAaC,QAAQ,aAC1DI,MAAMC,IACLyJ,GAAiBzJ,EAASC,SAC3BoG,OAAOC,IACNU,QAAQC,IAAIX,OAkCdoH,GAAc1F,EAAY2F,MAAM5C,GAAcA,GAzalC,KA0ab6C,QAAQ7L,IACL,MAAM8L,EAAanG,EAAcoG,WAAWC,cAAcC,QAAQ,OAAQ,IAAIA,QAAQ,MAAO,IACvFC,EAAclM,EAAK4D,MAAMmI,WAAWC,cAAcC,QAAQ,OAAQ,IAAIA,QAAQ,MAAO,IAC3F,MAAsB,KAAfH,GAAqBI,EAAYC,SAASL,MAClD/L,KAAI,CAACC,EAAMyB,KACHrC,EAAAA,EAAAA,MAAA,MAAAnC,SAAA,EACHF,EAAAA,EAAAA,KAAA,MAAAE,SAAKwE,EAAQ,KACbrC,EAAAA,EAAAA,MAAA,MAAIlC,UAAU,iBAAgBD,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,cAAaD,UACxBF,EAAAA,EAAAA,KAAA,OAAKuD,QAASA,KACVgF,EAAa,CAACC,MAAM,EAAMf,OAAQ,iBAClCsB,EAAe9F,EAAKoM,gBACrB/M,IAAKW,EAAKoM,cAAe9M,IAAI,QAEpCF,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,cAAaD,SAAA,EACxBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,OAAMD,SAChB+C,EAAKqM,WAAarM,EAAKqM,aAE5BtP,EAAAA,EAAAA,KAAA,OAAKG,UAAU,QAAOD,SACjB+C,EAAK4D,OAAS5D,EAAK4D,eAIhCxE,EAAAA,EAAAA,MAAA,MAAAnC,SAAA,CACK+C,EAAK4J,aAAe5J,EAAK4J,YAAY0C,aAAanK,EAAAA,GAAQf,UAAUE,KAAK,KAEzEtB,EAAK6J,WAAa7J,EAAK6J,UAAUyC,aAAanK,EAAAA,GAAQf,UAAUE,SAErElC,EAAAA,EAAAA,MAAA,MAAAnC,SAAA,CACK+C,EAAK0J,WAAa1J,EAAK0J,UAAU4C,aAAanK,EAAAA,GAAQf,UAAUE,KAAK,OACrEtB,EAAK2H,UAAY3H,EAAK2H,SAAS2E,aAAanK,EAAAA,GAAQf,UAAUE,KAAK,QACnEtB,EAAK6H,WAAa7H,EAAK6H,UAAUyE,aAAanK,EAAAA,GAAQf,UAAUE,SAErEvE,EAAAA,EAAAA,KAAA,MAAAE,SACK+C,EAAKS,YAAcT,EAAKS,cAG7B1D,EAAAA,EAAAA,KAAA,MAAAE,UACIF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,OAAMD,UACjBF,EAAAA,EAAAA,KAAA,OAAKuD,QAASA,KAAMiM,OAzKhBtK,EAyK+BjC,EAAKiC,GAxKxDqD,EAAa,CAACC,MAAM,EAAMf,OAAQ,yBAElC1G,EAAAA,EAAMC,IAAI,GAADL,OAAIiG,EAAM3E,IAAG,sBAAAtB,OAAqBuE,EAAE,KAAK,CAC9CmI,QAAS,CAAC,cAAgB,SAAD1M,OAAWC,aAAaC,QAAQ,aAC1DI,MAAMC,IACL+H,EAAkB/H,EAASC,MAC3B+G,QAAQC,IAAIjH,EAASC,SAPL+D,OAyKyC5C,IAAI,+BAA+BC,IAAI,UAI5FvC,EAAAA,EAAAA,KAAA,MAAAE,UACIF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,OAAMD,UACjBF,EAAAA,EAAAA,KAAA,OAAKuD,QAASA,IAAMmL,GAAazL,EAAKiC,IAAK5C,IAAI,+BAA+BC,IAAI,UAG1FvC,EAAAA,EAAAA,KAAA,MAAAE,UACIF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,OAAMD,UACjBF,EAAAA,EAAAA,KAAA,OAAKuD,QAASA,IAAMoL,GAAc1L,EAAKiC,IAAK5C,IAAI,8BAA8BC,IAAI,UAI1FvC,EAAAA,EAAAA,KAAA,MAAAE,UACIF,EAAAA,EAAAA,KAAA,OAAKG,UAAW8C,EAAK+K,aAAe,aAAe,sBAAsB9N,UACrEF,EAAAA,EAAAA,KAAA,OAAKuD,QAASA,KACVgF,EAAa,CAACC,MAAM,EAAMf,OAAQ,mBAClC4B,EAAYpG,EAAKiC,IACjByE,EAAgB1G,EAAKwM,oBACrB5F,EAAmB5G,EAAKyM,uBACzBpN,IAAI,2BAA2BC,IAAI,UAG9CvC,EAAAA,EAAAA,KAAA,MAAAE,UACImC,EAAAA,EAAAA,MAAA,OAAKlC,UAAW8C,EAAK0M,SAAW,aAAe,sBAAsBzP,SAAA,EACjEF,EAAAA,EAAAA,KAAA,OAAKuD,QAASA,KACVgF,EAAa,CAACC,MAAM,EAAMf,OAAQ,YAC9BxE,EAAK0M,UACLpG,EAAUtG,EAAKqG,QAEnBD,EAAYpG,EAAKiC,KAClB5C,IAAI,2BAA2BC,IAAI,UAErCU,EAAKqG,QAAUrG,EAAK0M,WAAYtN,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,eAAcD,SAAA,EAC1DF,EAAAA,EAAAA,KAAA,OAAKsC,IAAI,6BAA6BC,IAAI,MAC1CvC,EAAAA,EAAAA,KAAA,OAAKG,UAAU,OAAMD,SAChB+C,EAAKqG,kBAMtBtJ,EAAAA,EAAAA,KAAA,UAEAA,EAAAA,EAAAA,KAAA,OAAKG,UAAU,YAAWD,UACtBF,EAAAA,EAAAA,KAAA,OAAKuD,QAASA,KAvSZ2B,MAwSEqD,EAAa,CAACC,MAAM,EAAMf,OAAQ,gBAxSpCvC,EAySWjC,EAAKiC,GAvS9BnE,EAAAA,EAAMC,IAAI,GAADL,OAAIiG,EAAM3E,IAAG,sBAAAtB,OAAqBuE,EAAE,KAAK,CAC9CmI,QAAS,CAAC,cAAgB,SAAD1M,OAAWC,aAAaC,QAAQ,aAC1DI,MAAMC,IACLmL,GAAOuD,UAAU,CACb/I,MAAO3F,EAASC,KAAKgG,KAAKN,MAC1B2F,WAAYtL,EAASC,KAAKgG,KAAKqF,WAC/BC,UAAWvL,EAASC,KAAKgG,KAAKsF,UAC9BC,WAAYxL,EAASC,KAAKuL,WAC1BhJ,WAAYxC,EAASC,KAAKuC,WAC1BiJ,UAAWzL,EAASC,KAAKwL,UAAUzH,GACnC0F,SAAU1J,EAASC,KAAKyJ,SAAS1F,GACjC4F,UAAW5J,EAASC,KAAK2J,UAAU5F,GACnCgG,eAAgBhK,EAASC,KAAK+J,eAAelI,KAAI6M,GAAWA,EAAQ3K,KACpE0H,WAAY1L,EAASC,KAAKyL,WAC1BC,YAAa3L,EAASC,KAAK0L,YAAY3H,GACvC4H,UAAW5L,EAASC,KAAK2L,UAAU5H,KAEvC+E,EAAW/I,EAASC,KAAKgG,KAAK2G,QAC9BP,GAAYrM,EAASC,KAAKyJ,SAAS1F,OAEvCmE,EAAYnE,IAoRG5C,IAAI,gCAAgCC,IAAI,SApFnCmC,KAyFxB,OAAOrC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,oBAAmBD,SAAA,EACrCF,EAAAA,EAAAA,KAAC8P,EAAAA,EAAa,CACVC,GAAIzH,EAAUE,KACdC,QAASA,EACTuH,QAAS,IACTC,WAAW,QACXC,eAAa,EAAAhQ,UAEbF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,aAAYD,UACvBmC,EAAAA,EAAAA,MAAA,OAAKsG,IAAKF,EAAStI,UAAU,aAAYD,SAAA,CAEf,eAArBoI,EAAUb,SACPpF,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,aAAYD,SAAA,EACvBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,aAAYD,UACvBF,EAAAA,EAAAA,KAAA,OACIuD,QAASA,KACLgF,EAAa,CAACd,OAAQ,GAAIe,MAAM,IAChC6D,GAAOiC,aAEXhM,IAAI,uBACJC,IAAI,QAIZvC,EAAAA,EAAAA,KAAA,OAAKG,UAAU,QAAOD,SAAC,wBAEvBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,aAAYD,SAAC,6BAE5BmC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,iBAAgBD,SAAA,EAC3BmC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,aAAYD,SAAA,EACvBmC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,oBAAmBD,SAAA,EAC9BF,EAAAA,EAAAA,KAAA,SAAO4H,SAAU4F,GAAexF,KAAK,UACrC3F,EAAAA,EAAAA,MAAA,OAAKlC,UAAS,cAAAQ,OAAgBuJ,EAAe,SAAW,IAAKhK,SAAA,CAAC,gBAE1DF,EAAAA,EAAAA,KAAA,OAAKsC,IAAI,2BAA2BC,IAAI,YAIhDvC,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAcD,UACzBF,EAAAA,EAAAA,KAACmQ,EAAAA,EAAS,CACN3I,MAAoC,aAA7B6E,GAAOY,OAAOT,WACrB5F,MAAOyF,GAAOW,OAAOR,WACrB5E,SAAUyE,GAAO+D,aACjB7L,KAAK,aACLyD,KAAK,OACLqI,GAAI,CAACC,EAAG,EAAGC,SAAU,QAASC,KAAK,QAAQtL,GAAG,iBAC9CuL,MAAM,MAAMxL,QAAQ,WAAW9E,UAAU,iBAGjDH,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAcD,UACzBF,EAAAA,EAAAA,KAACmQ,EAAAA,EAAS,CACN3I,MAAmC,aAA5B6E,GAAOY,OAAOR,UACrB7F,MAAOyF,GAAOW,OAAOP,UACrB7E,SAAUyE,GAAO+D,aACjB7L,KAAK,YACLyD,KAAK,OACLqI,GAAI,CAACC,EAAG,EAAGC,SAAU,QAASC,KAAK,QAAQtL,GAAG,iBAC9CuL,MAAM,WAAWxL,QAAQ,WAAW9E,UAAU,oBAI1DkC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,aAAYD,SAAA,EACvBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAcD,UACzBF,EAAAA,EAAAA,KAACmQ,EAAAA,EAAS,CACN3I,MAA+B,aAAxB6E,GAAOY,OAAOpG,MACrBD,MAAOyF,GAAOW,OAAOnG,MACrBe,SAAUyE,GAAO+D,aACjB7L,KAAK,QACLyD,KAAK,OACLqI,GAAI,CAACC,EAAG,EAAGC,SAAU,QAASC,KAAK,QAAQtL,GAAG,iBAC9CuL,MAAM,gBAAgBxL,QAAQ,WAAW9E,UAAU,iBAE3DkC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,oBAAmBD,SAAA,EAC9BF,EAAAA,EAAAA,KAAA,SAAO0Q,QAAQ,GAAExQ,SAAC,qBAClBF,EAAAA,EAAAA,KAAA,SACIG,UAAS,gBAAAQ,OAA+C,aAA7B0L,GAAOY,OAAOP,WAA4B,wBAA0B,IAC/FnI,KAAK,aAAaqD,SAAUyE,GAAO+D,aACnCxJ,MAAOyF,GAAOW,OAAON,WACrB1E,KAAK,aAEb3F,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,eAAcD,SAAA,EACzBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,WAAUD,SAAC,YAG1BmC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,QAAOD,SAAA,EAClBF,EAAAA,EAAAA,KAAA,OAAKuD,QAASA,IAAM0G,EAAW,QAC1B9J,UAAS,MAAAQ,OAAoB,SAAZqJ,EAAqB,KAAO,IAAK9J,SAAC,WAGxDF,EAAAA,EAAAA,KAAA,OAAKuD,QAASA,IAAM0G,EAAW,UAC1B9J,UAAS,MAAAQ,OAAoB,WAAZqJ,EAAuB,KAAO,IAAK9J,SAAC,sBAQ1EF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,aAAYD,SAAC,6BAE5BmC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,iBAAgBD,SAAA,EAC3BmC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,aAAYD,SAAA,EACvBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAcD,UACzBmC,EAAAA,EAAAA,MAACsO,EAAAA,EAAW,CAACN,GAAI,CAACC,EAAG,EAAGC,SAAU,QAASC,KAAK,QAAQrQ,UAAU,YAAWD,SAAA,EACzEF,EAAAA,EAAAA,KAAC4Q,EAAAA,EAAU,CAAC1L,GAAG,0BAAyBhF,SAAC,sBACzCF,EAAAA,EAAAA,KAAC6Q,EAAAA,EAAM,CACHrJ,MAAkC,aAA3B6E,GAAOY,OAAOrC,SACrBkG,QAAQ,0BACR5L,GAAG,oBACH0B,MAAOyF,GAAOW,OAAOpC,SACrBrG,KAAK,WACLkM,MAAM,mBACN7I,SAAUyE,GAAO+D,aAAalQ,SAG1B0K,GAAS5H,KAAI,CAACC,EAAMyB,KACT1E,EAAAA,EAAAA,KAAC+Q,EAAAA,EAAQ,CAACxN,QAASA,IAAMgK,GAAYtK,EAAKiC,IAEhC0B,MAAO3D,EAAKiC,GAAGhF,SAC3B+C,EAAKsM,aAAanK,EAAAA,GAAQf,UAAUE,MAFnBG,aAU1C1E,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAcD,UACzBmC,EAAAA,EAAAA,MAACsO,EAAAA,EAAW,CAACN,GAAI,CAACC,EAAG,EAAGC,SAAU,QAASC,KAAK,QAAQrQ,UAAU,YAAWD,SAAA,EACzEF,EAAAA,EAAAA,KAAC4Q,EAAAA,EAAU,CAAC1L,GAAG,0BAAyBhF,SAAC,oBACzCF,EAAAA,EAAAA,KAAC6Q,EAAAA,EAAM,CACHrJ,MAAmC,aAA5B6E,GAAOY,OAAOnC,UACrBgG,QAAQ,0BACR5L,GAAG,oBACH0B,MAAOyF,GAAOW,OAAOlC,UACrBvG,KAAK,YACLkM,MAAM,iBACN7I,SAAUyE,GAAO+D,aAAalQ,SAG1B4K,GAAU9H,KAAI,CAACC,EAAMyB,KACV1E,EAAAA,EAAAA,KAAC+Q,EAAAA,EAAQ,CACCnK,MAAO3D,EAAKiC,GAAGhF,SAC3B+C,EAAKsM,aAAanK,EAAAA,GAAQf,UAAUE,MAFnBG,aAU1C1E,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAcD,UACzBF,EAAAA,EAAAA,KAACmQ,EAAAA,EAAS,CACN3I,MAAoC,aAA7B6E,GAAOY,OAAOvJ,WACrBkD,MAAOyF,GAAOW,OAAOtJ,WACrBkE,SAAUyE,GAAO+D,aACjB7L,KAAK,aACLyD,KAAK,OACLqI,GAAI,CAACC,EAAG,EAAGC,SAAU,QAASC,KAAK,QAAQtL,GAAG,iBAC9CuL,MAAM,mBAAmBxL,QAAQ,WAAW9E,UAAU,oBAGlEkC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,cAAaD,SAAA,EACxBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAcD,UACzBmC,EAAAA,EAAAA,MAACsO,EAAAA,EAAW,CAACN,GAAI,CAACC,EAAG,EAAGC,SAAU,QAASC,KAAK,QAAQrQ,UAAU,YAAWD,SAAA,EACzEF,EAAAA,EAAAA,KAAC4Q,EAAAA,EAAU,CAAC1L,GAAG,0BAAyBhF,SAAC,qBACzCF,EAAAA,EAAAA,KAAC6Q,EAAAA,EAAM,CACHrJ,MAAmC,aAA5B6E,GAAOY,OAAON,UACrBmE,QAAQ,0BACR5L,GAAG,oBACHX,KAAK,YACLkM,MAAM,kBACN7J,MAAOyF,GAAOW,OAAOL,UACrB/E,SAAUyE,GAAO+D,aAAalQ,SAG1B8K,GAAWhI,KAAI,CAACC,EAAMyB,KACX1E,EAAAA,EAAAA,KAAC+Q,EAAAA,EAAQ,CACCnK,MAAO3D,EAAKiC,GAAGhF,SAC3B+C,EAAKsM,aAAanK,EAAAA,GAAQf,UAAUE,MAFnBG,aAS1C1E,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAcD,UACzBF,EAAAA,EAAAA,KAAC2Q,EAAAA,EAAW,CAACN,GAAI,CAACC,EAAG,EAAGC,SAAU,QAASC,KAAK,QAAQrQ,UAAU,YAAWD,UACzEF,EAAAA,EAAAA,KAACmQ,EAAAA,EAAS,CACNjL,GAAG,aACHX,KAAK,aACLkM,MAAM,wBACNzI,KAAK,SACLpB,MAAOyF,GAAOW,OAAOJ,WACrBhF,SAAUyE,GAAO+D,aACjB5I,MAAO6E,GAAO2E,QAAQpE,YAAcqE,QAAQ5E,GAAOY,OAAOL,YAC1DsE,WAAY7E,GAAO2E,QAAQpE,YAAcP,GAAOY,OAAOL,WACvDuE,WAAY,CAACC,IAAK,GAClBC,WAAS,EACTb,KAAK,eAIjBxQ,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAcD,UACzBmC,EAAAA,EAAAA,MAACsO,EAAAA,EAAW,CAACN,GAAI,CAACC,EAAG,EAAGnO,MAAO,QAAShC,UAAU,YAAYqQ,KAAK,QAAOtQ,SAAA,EACtEF,EAAAA,EAAAA,KAAC4Q,EAAAA,EAAU,CAAC1L,GAAG,+BAA8BhF,SAAC,eAE9CF,EAAAA,EAAAA,KAAC6Q,EAAAA,EAAM,CACHrJ,MAAwC,aAAjC6E,GAAOY,OAAO/B,eACrB3G,KAAK,iBACL+M,QAAQ,+BACRpM,GAAG,yBACHqM,UAAQ,EACR3K,MAAOyF,GAAOW,OAAO9B,eACrBtD,SAAWrB,IACP,MAAM,MAACK,GAASL,EAAMuB,OACtBuE,GAAOmF,cACH,iBACiB,kBAAV5K,EAAqBA,EAAM6K,MAAM,KAAO7K,IAGvD8K,OAAO1R,EAAAA,EAAAA,KAAC2R,EAAAA,EAAa,CAAClB,MAAM,cAC5BmB,YAAcC,GACVA,EACK7O,KAAKkC,IACF,MAAMjC,EAAOmI,GAAmB0G,MAAKC,GAAKA,EAAE7M,KAAOA,IACnD,OAAOjC,EAAOA,EAAKsM,aAAanK,EAAAA,GAAQf,UAAUE,KAAO,MAE5DyN,KAAK,MAEdtG,UAAWA,GAAUxL,SAEpBkL,GAAmBpI,KAAKC,IACrBZ,EAAAA,EAAAA,MAAC0O,EAAAA,EAAQ,CAAenK,MAAO3D,EAAKiC,GAAGhF,SAAA,EACnCF,EAAAA,EAAAA,KAACiS,EAAAA,EAAQ,CACLC,QAAS7F,GAAOW,OAAO9B,eAAekE,SAASnM,EAAKiC,OAExDlF,EAAAA,EAAAA,KAACmS,EAAAA,EAAY,CACTC,QAASnP,EAAKsM,aAAanK,EAAAA,GAAQf,UAAUE,SALtCtB,EAAKiC,oBAe5ClF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,aAAYD,SAAC,+CAC5BF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,iBAAgBD,UAC3BmC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,mBAAkBD,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAcD,UACzBmC,EAAAA,EAAAA,MAACsO,EAAAA,EAAW,CAACN,GAAI,CAACC,EAAG,EAAGC,SAAU,QAASC,KAAK,QAAQrQ,UAAU,YAAWD,SAAA,EACzEF,EAAAA,EAAAA,KAAC4Q,EAAAA,EAAU,CAAC1L,GAAG,0BAAyBhF,SAAC,cACzCF,EAAAA,EAAAA,KAAC6Q,EAAAA,EAAM,CACHrJ,MAAqC,aAA9B6E,GAAOY,OAAOJ,YACrBiE,QAAQ,0BACR5L,GAAG,oBACH0B,MAAOyF,GAAOW,OAAOH,YACrBtI,KAAK,cACLkM,MAAM,WACN7I,SAAUyE,GAAO+D,aAAalQ,SAG1B4J,EAAQ9G,KAAI,CAACC,EAAMyB,KACR1E,EAAAA,EAAAA,KAAC+Q,EAAAA,EAAQ,CACCnK,MAAO3D,EAAKiC,GAAGhF,SAC3B+C,EAAKsM,aAAanK,EAAAA,GAAQf,UAAUE,MAFnBG,aAS1C1E,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAcD,UACzBmC,EAAAA,EAAAA,MAACsO,EAAAA,EAAW,CAACN,GAAI,CAACC,EAAG,EAAGC,SAAU,QAASC,KAAK,QAAQrQ,UAAU,YAAWD,SAAA,EACzEF,EAAAA,EAAAA,KAAC4Q,EAAAA,EAAU,CAAC1L,GAAG,0BAAyBhF,SAAC,aACzCF,EAAAA,EAAAA,KAAC6Q,EAAAA,EAAM,CACHrJ,MAAmC,aAA5B6E,GAAOY,OAAOH,UACrBgE,QAAQ,0BACR5L,GAAG,oBACH0B,MAAOyF,GAAOW,OAAOF,UACrBvI,KAAK,YACLkM,MAAM,UACN7I,SAAUyE,GAAO+D,aAAalQ,SAG1B4J,EAAQ9G,KAAI,CAACC,EAAMyB,KACR1E,EAAAA,EAAAA,KAAC+Q,EAAAA,EAAQ,CACCnK,MAAO3D,EAAKiC,GAAGhF,SAC3B+C,EAAKsM,aAAanK,EAAAA,GAAQf,UAAUE,MAFnBG,kBAYlD1E,EAAAA,EAAAA,KAAA,OAAKuD,QAASA,KACV8I,GAAOgG,gBACRlS,UAAU,UAASD,UAClBF,EAAAA,EAAAA,KAAA,OAAKsC,IAAI,yBAAyBC,IAAI,UAK5B,iBAArB+F,EAAUb,SACPpF,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,eAAcD,SAAA,EACzBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,aAAYD,UACvBF,EAAAA,EAAAA,KAAA,OACIuD,QAASA,IAAMgF,EAAa,CAACd,OAAQ,GAAIe,MAAM,IAC/ClG,IAAI,uBACJC,IAAI,QAIZvC,EAAAA,EAAAA,KAAA,OAAKG,UAAU,QAAOD,UAClBF,EAAAA,EAAAA,KAAA,OAAKsC,IAAKwG,EAAavG,IAAI,UAKjB,oBAArB+F,EAAUb,SACPpF,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,kBAAiBD,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,aAAYD,UACvBF,EAAAA,EAAAA,KAAA,OAAKuD,QAASA,IAAMgF,EAAa,CAACd,OAAQ,GAAIe,MAAM,IAC/ClG,IAAI,uBACJC,IAAI,QAGbvC,EAAAA,EAAAA,KAAA,OAAKG,UAAU,QAAOD,SAAC,2BAGtB8I,IACG3G,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,cAAaD,SAAA,EACxBmC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,OAAMD,SAAA,EACjBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,QAAOD,SAAC,sBACvBF,EAAAA,EAAAA,KAAA,OACIG,UAAU,OAAMD,SAAE8I,EAAe0D,YAAc1D,EAAe0D,iBAEtErK,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,OAAMD,SAAA,EACjBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,QAAOD,SAAC,YACvBF,EAAAA,EAAAA,KAAA,OACIG,UAAU,OAAMD,SAAE8I,EAAe7B,MAAuC,SAA/B6B,EAAe7B,KAAK2G,OAAoB,QAAU,aAEnGzL,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,OAAMD,SAAA,EACjBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,QAAOD,SAAC,cACvBF,EAAAA,EAAAA,KAAA,OACIG,UAAU,OAAMD,SAAE8I,EAAe7B,MAAQ6B,EAAe7B,KAAKmL,WAErEjQ,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,OAAMD,SAAA,EACjBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,QAAOD,SAAC,uBACvBF,EAAAA,EAAAA,KAAA,OACIG,UAAU,OAAMD,SAAE8I,EAAe4D,YAAc5D,EAAe4D,iBAEtEvK,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,OAAMD,SAAA,EACjBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,QAAOD,SAAC,6BACvBF,EAAAA,EAAAA,KAAA,OACIG,UAAU,OAAMD,SAAE8I,EAAe7B,MAAQ6B,EAAe7B,KAAKoL,4BAErElQ,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,OAAMD,SAAA,EACjBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,QAAOD,SAAC,2BACvBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,OAAMD,SAChB8I,EAAekC,gBAAkBlC,EAAekC,eAAelI,KAAI,CAACC,EAAMyB,KAChErC,EAAAA,EAAAA,MAAA,QAAAnC,SAAA,CACF+C,EAAKsM,aAAanK,EAAAA,GAAQf,UAAUE,KAAK,MAD5BG,gBAUxB,YAArB4D,EAAUb,SACPpF,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,UAASD,SAAA,EACpBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,aAAYD,UACvBF,EAAAA,EAAAA,KAAA,OAAKuD,QAASA,KACVgF,EAAa,CAACd,OAAQ,GAAIe,MAAM,IAChCe,EAAU,KAETjH,IAAI,uBACJC,IAAI,QAIbvC,EAAAA,EAAAA,KAAA,OAAKG,UAAU,QAAOD,SAAC,0BAIvBmC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,cAAaD,SAAA,EACxBF,EAAAA,EAAAA,KAAA,YAAU4G,MAAO0C,EAAQ1B,SAAWC,GAAM0B,EAAU1B,EAAEC,OAAOlB,OACnDmB,YAAY,mCAAmCxD,KAAK,SACpDW,GAAG,YAEb7C,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,UAASD,SAAA,EACpBF,EAAAA,EAAAA,KAAA,OAAKuD,QAASA,KACViL,GAAY,YAEXrO,UAAU,SAAQD,SAAC,kBAGxBF,EAAAA,EAAAA,KAAA,OAAKuD,QAASA,KACViL,GAAY,UACbrO,UAAU,UAASD,SAAC,sBAQjB,gBAArBoI,EAAUb,SACPpF,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,cAAaD,SAAA,EACxBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,aAAYD,UACvBF,EAAAA,EAAAA,KAAA,OACIuD,QAASA,KACLgF,EAAa,CAACd,OAAQ,GAAIe,MAAM,IAChC6D,GAAOiC,aAEXhM,IAAI,uBACJC,IAAI,QAIZvC,EAAAA,EAAAA,KAAA,OAAKG,UAAU,QAAOD,SAAC,wBAEvBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,aAAYD,SAAC,6BAE5BmC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,iBAAgBD,SAAA,EAC3BmC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,aAAYD,SAAA,EACvBmC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,oBAAmBD,SAAA,EAC9BF,EAAAA,EAAAA,KAAA,SAAO4H,SAAU4F,GAAexF,KAAK,UACrC3F,EAAAA,EAAAA,MAAA,OAAKlC,UAAS,cAAAQ,OAAgBuJ,EAAe,SAAW,IAAKhK,SAAA,CAAC,gBAE1DF,EAAAA,EAAAA,KAAA,OAAKsC,IAAI,2BAA2BC,IAAI,YAIhDvC,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAcD,UACzBF,EAAAA,EAAAA,KAACmQ,EAAAA,EAAS,CACN3I,MAAoC,aAA7B6E,GAAOY,OAAOT,WACrB5F,MAAOyF,GAAOW,OAAOR,WACrB5E,SAAUyE,GAAO+D,aACjB7L,KAAK,aACLyD,KAAK,OACLqI,GAAI,CAACC,EAAG,EAAGC,SAAU,QAASC,KAAK,QAAQtL,GAAG,iBAC9CuL,MAAM,MAAMxL,QAAQ,WAAW9E,UAAU,iBAGjDH,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAcD,UACzBF,EAAAA,EAAAA,KAACmQ,EAAAA,EAAS,CACN3I,MAAmC,aAA5B6E,GAAOY,OAAOR,UACrB7F,MAAOyF,GAAOW,OAAOP,UACrB7E,SAAUyE,GAAO+D,aACjB7L,KAAK,YACLyD,KAAK,OACLqI,GAAI,CAACC,EAAG,EAAGC,SAAU,QAASC,KAAK,QAAQtL,GAAG,iBAC9CuL,MAAM,WAAWxL,QAAQ,WAAW9E,UAAU,oBAI1DkC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,aAAYD,SAAA,EACvBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAcD,UACzBF,EAAAA,EAAAA,KAACmQ,EAAAA,EAAS,CACN3I,MAA+B,aAAxB6E,GAAOY,OAAOpG,MACrBD,MAAOyF,GAAOW,OAAOnG,MACrBe,SAAUyE,GAAO+D,aACjB7L,KAAK,QACLyD,KAAK,OACLqI,GAAI,CAACC,EAAG,EAAGC,SAAU,QAASC,KAAK,QAAQtL,GAAG,iBAC9CuL,MAAM,gBAAgBxL,QAAQ,WAAW9E,UAAU,iBAE3DkC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,oBAAmBD,SAAA,EAC9BF,EAAAA,EAAAA,KAAA,SAAO0Q,QAAQ,GAAExQ,SAAC,qBAClBF,EAAAA,EAAAA,KAAA,SACIG,UAAS,gBAAAQ,OAA+C,aAA7B0L,GAAOY,OAAOP,WAA4B,wBAA0B,IAC/FnI,KAAK,aAAaqD,SAAUyE,GAAO+D,aACnCxJ,MAAOyF,GAAOW,OAAON,WACrB1E,KAAK,aAEb3F,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,eAAcD,SAAA,EACzBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,WAAUD,SAAC,YAG1BmC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,QAAOD,SAAA,EAClBF,EAAAA,EAAAA,KAAA,OAAKuD,QAASA,IAAM0G,EAAW,QAC1B9J,UAAS,MAAAQ,OAAoB,SAAZqJ,EAAqB,KAAO,IAAK9J,SAAC,WAGxDF,EAAAA,EAAAA,KAAA,OAAKuD,QAASA,IAAM0G,EAAW,UAC1B9J,UAAS,MAAAQ,OAAoB,WAAZqJ,EAAuB,KAAO,IAAK9J,SAAC,sBAQ1EF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,aAAYD,SAAC,6BAE5BmC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,iBAAgBD,SAAA,EAC3BmC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,aAAYD,SAAA,EACvBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAcD,UACzBmC,EAAAA,EAAAA,MAACsO,EAAAA,EAAW,CAACN,GAAI,CAACC,EAAG,EAAGC,SAAU,QAASC,KAAK,QAAQrQ,UAAU,YAAWD,SAAA,EACzEF,EAAAA,EAAAA,KAAC4Q,EAAAA,EAAU,CAAC1L,GAAG,0BAAyBhF,SAAC,sBACzCF,EAAAA,EAAAA,KAAC6Q,EAAAA,EAAM,CACHrJ,MAAkC,aAA3B6E,GAAOY,OAAOrC,SACrBkG,QAAQ,0BACR5L,GAAG,oBACH0B,MAAOyF,GAAOW,OAAOpC,SACrBrG,KAAK,WACLkM,MAAM,mBACN7I,SAAUyE,GAAO+D,aAAalQ,SAG1B0K,GAAS5H,KAAI,CAACC,EAAMyB,KACT1E,EAAAA,EAAAA,KAAC+Q,EAAAA,EAAQ,CAACxN,QAASA,IAAMgK,GAAYtK,EAAKiC,IAEhC0B,MAAO3D,EAAKiC,GAAGhF,SAC3B+C,EAAKsM,aAAanK,EAAAA,GAAQf,UAAUE,MAFnBG,aAU1C1E,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAcD,UACzBmC,EAAAA,EAAAA,MAACsO,EAAAA,EAAW,CAACN,GAAI,CAACC,EAAG,EAAGC,SAAU,QAASC,KAAK,QAAQrQ,UAAU,YAAWD,SAAA,EACzEF,EAAAA,EAAAA,KAAC4Q,EAAAA,EAAU,CAAC1L,GAAG,0BAAyBhF,SAAC,oBACzCF,EAAAA,EAAAA,KAAC6Q,EAAAA,EAAM,CACHrJ,MAAmC,aAA5B6E,GAAOY,OAAOnC,UACrBgG,QAAQ,0BACR5L,GAAG,oBACH0B,MAAOyF,GAAOW,OAAOlC,UACrBvG,KAAK,YACLkM,MAAM,iBACN7I,SAAUyE,GAAO+D,aAAalQ,SAG1B4K,GAAU9H,KAAI,CAACC,EAAMyB,KACV1E,EAAAA,EAAAA,KAAC+Q,EAAAA,EAAQ,CACCnK,MAAO3D,EAAKiC,GAAGhF,SAC3B+C,EAAKsM,aAAanK,EAAAA,GAAQf,UAAUE,MAFnBG,aAW1C1E,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAcD,UACzBF,EAAAA,EAAAA,KAACmQ,EAAAA,EAAS,CACN3I,MAAoC,aAA7B6E,GAAOY,OAAOvJ,WACrBkD,MAAOyF,GAAOW,OAAOtJ,WACrBkE,SAAUyE,GAAO+D,aACjB7L,KAAK,aACLyD,KAAK,OACLqI,GAAI,CAACC,EAAG,EAAGC,SAAU,QAASC,KAAK,QAAQtL,GAAG,iBAC9CuL,MAAM,mBAAmBxL,QAAQ,WAAW9E,UAAU,oBAGlEkC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,cAAaD,SAAA,EACxBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAcD,UACzBmC,EAAAA,EAAAA,MAACsO,EAAAA,EAAW,CAACN,GAAI,CAACC,EAAG,EAAGC,SAAU,QAASC,KAAK,QAAQrQ,UAAU,YAAWD,SAAA,EACzEF,EAAAA,EAAAA,KAAC4Q,EAAAA,EAAU,CAAC1L,GAAG,0BAAyBhF,SAAC,qBACzCF,EAAAA,EAAAA,KAAC6Q,EAAAA,EAAM,CACHrJ,MAAmC,aAA5B6E,GAAOY,OAAON,UACrBmE,QAAQ,0BACR5L,GAAG,oBACHX,KAAK,YACLkM,MAAM,kBACN7J,MAAOyF,GAAOW,OAAOL,UACrB/E,SAAUyE,GAAO+D,aAAalQ,SAG1B8K,GAAWhI,KAAI,CAACC,EAAMyB,KACX1E,EAAAA,EAAAA,KAAC+Q,EAAAA,EAAQ,CACCnK,MAAO3D,EAAKiC,GAAGhF,SAC3B+C,EAAKsM,aAAanK,EAAAA,GAAQf,UAAUE,MAFnBG,aAS1C1E,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAcD,UACzBF,EAAAA,EAAAA,KAAC2Q,EAAAA,EAAW,CAACN,GAAI,CAACC,EAAG,EAAGC,SAAU,QAASC,KAAK,QAAQrQ,UAAU,YAAWD,UACzEF,EAAAA,EAAAA,KAACmQ,EAAAA,EAAS,CACNjL,GAAG,aACHX,KAAK,aACLkM,MAAM,wBACNzI,KAAK,SACLpB,MAAOyF,GAAOW,OAAOJ,WACrBhF,SAAUyE,GAAO+D,aACjB5I,MAAO6E,GAAO2E,QAAQpE,YAAcqE,QAAQ5E,GAAOY,OAAOL,YAC1DsE,WAAY7E,GAAO2E,QAAQpE,YAAcP,GAAOY,OAAOL,WACvDuE,WAAY,CAACC,IAAK,GAClBC,WAAS,EACTb,KAAK,eAIjBxQ,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAcD,UACzBmC,EAAAA,EAAAA,MAACsO,EAAAA,EAAW,CAACN,GAAI,CAACC,EAAG,EAAGnO,MAAO,QAAShC,UAAU,YAAYqQ,KAAK,QAAOtQ,SAAA,EACtEF,EAAAA,EAAAA,KAAC4Q,EAAAA,EAAU,CAAC1L,GAAG,+BAA8BhF,SAAC,eAE9CF,EAAAA,EAAAA,KAAC6Q,EAAAA,EAAM,CACHrJ,MAAwC,aAAjC6E,GAAOY,OAAO/B,eACrB3G,KAAK,iBACL+M,QAAQ,+BACRpM,GAAG,yBACHqM,UAAQ,EACR3K,MAAOyF,GAAOW,OAAO9B,eACrBtD,SAAWrB,IACP,MAAM,MAACK,GAASL,EAAMuB,OACtBuE,GAAOmF,cACH,iBACiB,kBAAV5K,EAAqBA,EAAM6K,MAAM,KAAO7K,IAGvD8K,OAAO1R,EAAAA,EAAAA,KAAC2R,EAAAA,EAAa,CAAClB,MAAM,cAC5BmB,YAAcC,GACVA,EACK7O,KAAKkC,IACF,MAAMjC,EAAOmI,GAAmB0G,MAAKC,GAAKA,EAAE7M,KAAOA,IACnD,OAAOjC,EAAOA,EAAKsM,aAAanK,EAAAA,GAAQf,UAAUE,KAAO,MAE5DyN,KAAK,MAEdtG,UAAWA,GAAUxL,SAEpBkL,GAAmBpI,KAAKC,IACrBZ,EAAAA,EAAAA,MAAC0O,EAAAA,EAAQ,CAAenK,MAAO3D,EAAKiC,GAAGhF,SAAA,EACnCF,EAAAA,EAAAA,KAACiS,EAAAA,EAAQ,CACLC,QAAS7F,GAAOW,OAAO9B,eAAekE,SAASnM,EAAKiC,OAExDlF,EAAAA,EAAAA,KAACmS,EAAAA,EAAY,CACTC,QAASnP,EAAKsM,aAAanK,EAAAA,GAAQf,UAAUE,SALtCtB,EAAKiC,oBAe5ClF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,aAAYD,SAAC,+CAC5BF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,iBAAgBD,UAC3BmC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,mBAAkBD,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAcD,UACzBmC,EAAAA,EAAAA,MAACsO,EAAAA,EAAW,CAACN,GAAI,CAACC,EAAG,EAAGC,SAAU,QAASC,KAAK,QAAQrQ,UAAU,YAAWD,SAAA,EACzEF,EAAAA,EAAAA,KAAC4Q,EAAAA,EAAU,CAAC1L,GAAG,0BAAyBhF,SAAC,cACzCF,EAAAA,EAAAA,KAAC6Q,EAAAA,EAAM,CACHrJ,MAAqC,aAA9B6E,GAAOY,OAAOJ,YACrBiE,QAAQ,0BACR5L,GAAG,oBACH0B,MAAOyF,GAAOW,OAAOH,YACrBtI,KAAK,cACLkM,MAAM,WACN7I,SAAUyE,GAAO+D,aAAalQ,SAG1B4J,EAAQ9G,KAAI,CAACC,EAAMyB,KACR1E,EAAAA,EAAAA,KAAC+Q,EAAAA,EAAQ,CACCnK,MAAO3D,EAAKiC,GAAGhF,SAC3B+C,EAAKsM,aAAanK,EAAAA,GAAQf,UAAUE,MAFnBG,aAS1C1E,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAcD,UACzBmC,EAAAA,EAAAA,MAACsO,EAAAA,EAAW,CAACN,GAAI,CAACC,EAAG,EAAGC,SAAU,QAASC,KAAK,QAAQrQ,UAAU,YAAWD,SAAA,EACzEF,EAAAA,EAAAA,KAAC4Q,EAAAA,EAAU,CAAC1L,GAAG,0BAAyBhF,SAAC,aACzCF,EAAAA,EAAAA,KAAC6Q,EAAAA,EAAM,CACHrJ,MAAmC,aAA5B6E,GAAOY,OAAOH,UACrBgE,QAAQ,0BACR5L,GAAG,oBACH0B,MAAOyF,GAAOW,OAAOF,UACrBvI,KAAK,YACLkM,MAAM,UACN7I,SAAUyE,GAAO+D,aAAalQ,SAG1B4J,EAAQ9G,KAAI,CAACC,EAAMyB,KACR1E,EAAAA,EAAAA,KAAC+Q,EAAAA,EAAQ,CACCnK,MAAO3D,EAAKiC,GAAGhF,SAC3B+C,EAAKsM,aAAanK,EAAAA,GAAQf,UAAUE,MAFnBG,kBAYlD1E,EAAAA,EAAAA,KAAA,OAAKuD,QAASA,KACV8I,GAAOgG,gBACRlS,UAAU,UAASD,UAClBF,EAAAA,EAAAA,KAAA,OAAKsC,IAAI,+BAA+BC,IAAI,UAMlC,mBAArB+F,EAAUb,SACPpF,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,iBAAgBD,SAAA,EAC3BF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,aAAYD,UACvBF,EAAAA,EAAAA,KAAA,OAAKuD,QAASA,IAAMgF,EAAa,CAACd,OAAQ,GAAIe,MAAM,IAC/ClG,IAAI,uBACJC,IAAI,QAIbF,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,cAAaD,SAAA,EACxBmC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,YAAWD,SAAA,EACtBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,QAAOD,SAAC,eAGvBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAcD,SAErBsL,GAAYxI,KAAI,CAACwP,EAAU9N,KACvBrC,EAAAA,EAAAA,MAAA,SAAAnC,SAAA,EACIF,EAAAA,EAAAA,KAAA,SAAO4H,SAAUA,KAAM6K,OA19BlCC,EA09B8DF,EAAStN,QAz9BxGyE,GAAiBgJ,GACbA,EAAavD,SAASsD,GAChBC,EAAa7D,QAAQ5J,GAAOA,IAAOwN,IACnC,IAAIC,EAAcD,KAJKA,OA29BkBR,QAASxI,EAAc0F,SAASoD,EAAStN,IAAK8C,KAAK,WACnDzD,KAAK,UACXiO,EAASjD,aAAanK,EAAAA,GAAQf,UAAUE,OAJjCG,WAU5BrC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,aAAYD,SAAA,EACvBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,QAAOD,SAAC,cAGvBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAcD,SAErBoL,GAAetI,KAAI,CAACwP,EAAU9N,KAC1BrC,EAAAA,EAAAA,MAAA,SAAAnC,SAAA,EACIF,EAAAA,EAAAA,KAAA,SAAO4H,SAAUA,KAAMgL,OAp+BjCF,EAo+B8DF,EAAStN,QAn+BzG2E,GAAoB8I,GAChBA,EAAavD,SAASsD,GAChBC,EAAa7D,QAAQ5J,GAAOA,IAAOwN,IACnC,IAAIC,EAAcD,KAJMA,OAq+BiBR,QAAStI,EAAiBwF,SAASoD,EAAStN,IAC5C8C,KAAK,WACLzD,KAAK,UACXiO,EAASjD,aAAanK,EAAAA,GAAQf,UAAUE,OALjCG,cAYhC1E,EAAAA,EAAAA,KAAA,OAAKuD,QAx+BdsP,KACX,IAAI5E,EAAS,CACTQ,UAAWrF,EACXqG,mBAAoB/F,EACpBgG,qBAAsB9F,GAG1B7I,EAAAA,EAAMsG,KAAK,GAAD1G,OAAIiG,EAAM3E,IAAG,qCACnBgM,EAAQ,CACJZ,QAAS,CAAC,cAAgB,SAAD1M,OAAWC,aAAaC,QAAQ,aAC1DI,MAAMC,IACTkM,KACA7E,EAAa,CAACd,OAAQ,GAAIe,MAAM,QA49BMrI,UAAU,cAAaD,SAAC,kBAMhC,eAArBoI,EAAUb,SACPpF,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,aAAYD,SAAA,EACvBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,aAAYD,UACvBF,EAAAA,EAAAA,KAAA,OAAKuD,QAASA,IAAMgF,EAAa,CAACd,OAAQ,GAAIe,MAAM,IAC/ClG,IAAI,uBACJC,IAAI,QAGbvC,EAAAA,EAAAA,KAAA,OAAKG,UAAU,QAAOD,SAAC,wBAGvBmC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,eAAcD,SAAA,CACxBoK,EAAgBtH,KAAI,CAAC8P,EAAOpO,KACzBrC,EAAAA,EAAAA,MAAA,OAAiBlC,UAAU,QAAOD,SAAA,EAC9BF,EAAAA,EAAAA,KAAA,OAAKsC,IAAKwQ,EAAMA,MAAOvQ,IAAG,OAAA5B,OAAS+D,MACnC1E,EAAAA,EAAAA,KAAA,OAAKG,UAAU,WAAWoD,QAASA,KAAMwP,OAn8B9C7N,EAm8BoE4N,EAAM5N,QAl8BrGnE,EAAAA,EAAMsG,KAAK,GAAD1G,OAAIiG,EAAM3E,IAAG,uCAAuC,CAAC+Q,iBAAkB9N,GAAK,CAClFmI,QAAS,CAAC,cAAgB,SAAD1M,OAAWC,aAAaC,QAAQ,aAC1DI,MAAMC,IACLwN,GAAatF,MAJUlE,OAm8B8EhF,UACrEF,EAAAA,EAAAA,KAAA,OAAKsC,IAAI,4BAA4BC,IAAI,eAHvCmC,KAOb0F,EAAWpH,KAAI,CAAC8P,EAAOpO,KACpBrC,EAAAA,EAAAA,MAAA,OAAiBlC,UAAU,QAAOD,SAAA,EAC9BF,EAAAA,EAAAA,KAAA,OAAKsC,IAAKwQ,EAAMG,QAAS1Q,IAAG,OAAA5B,OAAS+D,MACrC1E,EAAAA,EAAAA,KAAA,OAAKG,UAAU,WAAWoD,QAASA,IAn8B5CmB,KACvB2F,GAAe6I,GAAeA,EAAWpE,QAAO,CAACqE,EAAGpB,IAAMA,IAAMrN,OAk8BS0O,CAAkB1O,GAAOxE,UAC9DF,EAAAA,EAAAA,KAAA,OAAKsC,IAAI,4BAA4BC,IAAI,eAHvCmC,MAQdrC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,WAAUD,SAAA,EACrBF,EAAAA,EAAAA,KAAA,SAAO4H,SAh/BfC,IACpB,MAAM4F,EAAO5F,EAAEC,OAAO4F,MAAM,GAC5B,GAAID,EAAM,CACN,MAAM4F,EAAS,IAAIC,WACnBD,EAAOE,UAAY,KACflJ,GAAe6I,GAAe,IACvBA,EACH,CACID,QAASI,EAAOG,OAChB/F,KAAMA,OAIlB4F,EAAOI,cAAchG,EACzB,CACA5F,EAAEC,OAAOlB,MAAQ,MAi+B4CoB,KAAK,UACtChI,EAAAA,EAAAA,KAAA,OAAKsC,IAAI,2BAA2BC,IAAI,YAGhDvC,EAAAA,EAAAA,KAAA,OAAKuD,QA18BPmQ,KAClB,MAAM/F,EAAW,IAAIC,SACrBD,EAASO,OAAO,SAAU9E,GAE1BgB,EAAWiE,SAAQ,CAACyE,EAAOpO,KACvBiJ,EAASO,OAAO,aAAc4E,EAAMrF,SAGxC1M,EAAAA,EAAMsG,KAAK,GAAD1G,OAAIiG,EAAM3E,IAAG,mCAAmC0L,EAAU,CAChEN,QAAS,CAAC,cAAgB,SAAD1M,OAAWC,aAAaC,QAAQ,aAC1DI,MAAMC,IACLqH,EAAa,CAACd,OAAQ,GAAIe,MAAM,IAChC6B,EAAc,QA87B+BlK,UAAU,cAAaD,SAAC,kBAMvC,aAArBoI,EAAUb,SACPpF,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,WAAUD,SAAA,EACrBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,aAAYD,UACvBF,EAAAA,EAAAA,KAAA,OAAKuD,QAASA,IAAMgF,EAAa,CAACd,OAAQ,GAAIe,MAAM,IAC/ClG,IAAI,uBACJC,IAAI,QAGbvC,EAAAA,EAAAA,KAAA,OAAKG,UAAU,QAAOD,SAAC,wBAGvBmC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,eAAcD,SAAA,CACxBwK,GAAgB1H,KAAI,CAAC8P,EAAOpO,KACzBrC,EAAAA,EAAAA,MAAA,OAAiBlC,UAAU,QAAOD,SAAA,EAC9BF,EAAAA,EAAAA,KAAA,OAAKsC,IAAKwQ,EAAMA,MAAOvQ,IAAG,OAAA5B,OAAS+D,MACnC1E,EAAAA,EAAAA,KAAA,OAAKG,UAAU,WAAWoD,QAASA,KAAMoQ,OAj7B1CzO,EAi7BoE4N,EAAM5N,QAh7BzGnE,EAAAA,EAAMsG,KAAK,GAAD1G,OAAIiG,EAAM3E,IAAG,4CAA4C,CAAC2R,sBAAuB1O,GAAK,CAC5FmI,QAAS,CAAC,cAAgB,SAAD1M,OAAWC,aAAaC,QAAQ,aAC1DI,MAAMC,IACLyN,GAAcvF,MAJalE,OAi7B8EhF,UACzEF,EAAAA,EAAAA,KAAA,OAAKsC,IAAI,4BAA4BC,IAAI,eAHvCmC,KAOb8F,EAAWxH,KAAI,CAAC8P,EAAOpO,KACpBrC,EAAAA,EAAAA,MAAA,OAAiBlC,UAAU,QAAOD,SAAA,EAC9BF,EAAAA,EAAAA,KAAA,OAAKsC,IAAKwQ,EAAMG,QAAS1Q,IAAG,OAAA5B,OAAS+D,MACrC1E,EAAAA,EAAAA,KAAA,OAAKG,UAAU,WAAWoD,QAASA,IAj7BxCmB,KAC3B+F,GAAcyI,GAAeA,EAAWpE,QAAO,CAACqE,EAAGpB,IAAMA,IAAMrN,OAg7BUmP,CAAsBnP,GAAOxE,UAClEF,EAAAA,EAAAA,KAAA,OAAKsC,IAAI,4BAA4BC,IAAI,eAHvCmC,MAQdrC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,WAAUD,SAAA,EACrBF,EAAAA,EAAAA,KAAA,SAAO4H,SA99BZC,IACvB,MAAM4F,EAAO5F,EAAEC,OAAO4F,MAAM,GAC5B,GAAID,EAAM,CACN,MAAM4F,EAAS,IAAIC,WACnBD,EAAOE,UAAY,KACf9I,GAAcyI,GAAe,IACtBA,EACH,CACID,QAASI,EAAOG,OAChB/F,KAAMA,OAIlB4F,EAAOI,cAAchG,EACzB,CACA5F,EAAEC,OAAOlB,MAAQ,MA+8B+CoB,KAAK,UACzChI,EAAAA,EAAAA,KAAA,OAAKsC,IAAI,2BAA2BC,IAAI,YAGhDvC,EAAAA,EAAAA,KAAA,OAAKuD,QAx7BFuQ,KACvB,MAAMnG,EAAW,IAAIC,SACrBD,EAASO,OAAO,SAAU9E,GAE1BoB,EAAW6D,SAAQ,CAACyE,EAAOpO,KACvBiJ,EAASO,OAAO,kBAAmB4E,EAAMrF,SAG7C1M,EAAAA,EAAMsG,KAAK,GAAD1G,OAAIiG,EAAM3E,IAAG,mCAAmC0L,EAAU,CAChEN,QAAS,CAAC,cAAgB,SAAD1M,OAAWC,aAAaC,QAAQ,aAC1DI,MAAMC,IACLqH,EAAa,CAACd,OAAQ,GAAIe,MAAM,IAChC6B,EAAc,IACdI,EAAa,QA26BqCtK,UAAU,cAAaD,SAAC,0BAW9EmC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,SAAQD,SAAA,EAEnBmC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,aAAYD,SAAA,EACvBF,EAAAA,EAAAA,KAAA,OAAKsC,IAAI,4BAA4BC,IAAI,MACzCvC,EAAAA,EAAAA,KAAA,SAAO4H,SAAWC,GAAMgB,EAAiBhB,EAAEC,OAAOlB,OAAQmB,YAAY,yBAC/DC,KAAK,aAGhBhI,EAAAA,EAAAA,KAAA,OAAKuD,QAASA,KACVgF,EAAa,CAACC,MAAM,EAAMf,OAAQ,gBACnCtH,UAAU,iBAAgBD,SAAC,0BAMjCsJ,GAASxJ,EAAAA,EAAAA,KAACoI,EAAW,KAAKpI,EAAAA,EAAAA,KAAA,OAAKG,UAAU,gBAAeD,UACrDmC,EAAAA,EAAAA,MAAA,SAAAnC,SAAA,EACIF,EAAAA,EAAAA,KAAA,SAAAE,UACAmC,EAAAA,EAAAA,MAAA,MAAAnC,SAAA,EACIF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,YACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,sBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,eACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,aACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,oBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,0BACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,sBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,uBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,gBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,cACJF,EAAAA,EAAAA,KAAA,eAGJA,EAAAA,EAAAA,KAAA,SAAAE,SACC0O,WAMT5O,EAAAA,EAAAA,KAAA,OAAKG,UAAU,aAAYD,SACtBgJ,EAAYnG,OAAS,KAAM/C,EAAAA,EAAAA,KAAC+T,IAAa,CACtCC,WAAW,MACXC,eAAejU,EAAAA,EAAAA,KAAA,OAAKsC,IAAI,0BAA0BC,IAAI,KACtD2R,WAAWlU,EAAAA,EAAAA,KAAA,OAAKsC,IAAI,0BAA0BC,IAAI,KAClD2J,UAAWA,GACXiI,aA5vCOtP,IAAiB,IAAhB,SAACgN,GAAShN,EAC1BmH,GAAc6F,GAEduC,YAAW,KAAO,IAADC,EACF,QAAXA,EAAA1L,EAAI2L,eAAO,IAAAD,GAAXA,EAAaE,eAAe,CAACC,SAAU,aACxC,MAwvCKC,mBAAoB,kBACpBC,sBAAuB,eACvBC,kBAAmB,WACnBC,mBAAoB,qBACpBC,gBAAiB,qBAChB,SC1yCjB,EAnKmBC,KACf,IAAIlO,GAAQ7C,EAAAA,EAAAA,YAAWC,GACvB,MAAM+Q,GAAUrM,EAAAA,EAAAA,QAAO,OAChBsM,EAAOC,IAAY1U,EAAAA,EAAAA,UAAS,KAC5B2U,EAASC,IAAc5U,EAAAA,EAAAA,aACvB6U,EAAYC,IAAiB9U,EAAAA,EAAAA,UAAS,OACtC+U,EAAaC,IAAkBhV,EAAAA,EAAAA,UAAS,KACxCqI,EAAeC,IAAoBtI,EAAAA,EAAAA,UAAS,KACnDO,EAAAA,EAAAA,YAAU,KACFiU,EAAQT,UACRS,EAAQT,QAAQkB,UAAYT,EAAQT,QAAQmB,cAEhD1U,EAAAA,EAAMC,IAAI,GAADL,OAAIiG,EAAM3E,IAAG,0BAA0B,CAC5CoL,QAAS,CACLqI,cAAc,SAAD/U,OAAWC,aAAaC,QAAQ,aAElDI,MAAMC,IACL+T,EAAS/T,EAASC,YAmE1B,OAAOkB,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,cAAaD,SAAA,EAC/BmC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,OAAMD,SAAA,EACjBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,SAAQD,UACnBmC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,aAAYD,SAAA,EACvBF,EAAAA,EAAAA,KAAA,OAAKsC,IAAI,4BAA4BC,IAAI,MACzCvC,EAAAA,EAAAA,KAAA,SAAO4G,MAAOgC,EAAehB,SAAWC,GAAMgB,EAAiBhB,EAAEC,OAAOlB,OACjEmB,YAAY,yBAAyBC,KAAK,eAGzDhI,EAAAA,EAAAA,KAAA,OAAKG,UAAU,cAAaD,SACvB8U,EACIlG,QAAQ7L,IACL,MAAM8L,EAAanG,EAAcoG,WAAWC,cAAcC,QAAQ,OAAQ,IAAIA,QAAQ,MAAO,IACvFC,EAAclM,EAAK0S,WAAW3G,WAAWC,cAAcC,QAAQ,OAAQ,IAAIA,QAAQ,MAAO,IAChG,MAAsB,KAAfH,GAAqBI,EAAYC,SAASL,MAClD/L,KAAI,CAAC4S,EAAMlR,KACHrC,EAAAA,EAAAA,MAAA,OACKlC,UAAS,UAAAQ,OAAYyU,GAAcA,EAAWlQ,KAAO0Q,EAAK1Q,GAAK,SAAW,IAAKhF,SAAA,EACvFF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,QAAOD,UAClBF,EAAAA,EAAAA,KAAA,OAAKsC,IAAI,2BAA2BC,IAAI,QAE5CF,EAAAA,EAAAA,MAAA,OAAKkB,QAASA,IApFlBqS,KAChBP,EAAcO,GACd7U,EAAAA,EAAMC,IAAI,GAADL,OAAIiG,EAAM3E,IAAG,0BAAAtB,OAAyBiV,EAAK1Q,GAAE,KAAK,CACvDmI,QAAS,CACLqI,cAAc,SAAD/U,OAAWC,aAAaC,QAAQ,aAElDI,MAAMC,IACLiU,EAAWjU,EAASC,UA6EgB0U,CAAWD,GAAOzV,UAAU,eAAcD,SAAA,EAC1DF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,OAAMD,SAAE0V,EAAKE,SAC5B9V,EAAAA,EAAAA,KAAA,OAAKG,UAAU,SAAQD,SAAE0V,EAAKD,iBAElCtT,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,UAASD,SAAA,EAEpBF,EAAAA,EAAAA,KAAA,OAAKuD,QAASA,KAAMsP,OA5ChC3N,EA4CuC0Q,EAAK1Q,QA3CxDnE,EAAAA,EAAMsG,KAAK,GAAD1G,OAAIiG,EAAM3E,IAAG,gCACnB,CAAC8T,QAAS7Q,GAAK,CACXmI,QAAS,CACLqI,cAAc,SAAD/U,OAAWC,aAAaC,QAAQ,aAElDI,MAAMC,IACTH,EAAAA,EAAMC,IAAI,GAADL,OAAIiG,EAAM3E,IAAG,0BAA0B,CAC5CoL,QAAS,CACLqI,cAAc,SAAD/U,OAAWC,aAAaC,QAAQ,aAElDI,MAAMC,IACL+T,EAAS/T,EAASC,YAZd+D,OA4CiD/E,UAAWyV,EAAKI,OAAS,SAAW,WACpE1T,IAAI,2BACJC,IAAI,WAETvC,EAAAA,EAAAA,KAAA,OAAKuD,QAASA,KAAM0S,OAjE/B/Q,EAiEuC0Q,EAAK1Q,QAhEzDnE,EAAAA,EAAMmV,OAAO,GAADvV,OAAIiG,EAAM3E,IAAG,0BAAAtB,OAAyBuE,EAAE,KAAK,CACrDmI,QAAS,CACLqI,cAAc,SAAD/U,OAAWC,aAAaC,QAAQ,aAElDI,MAAMC,IACLmU,EAAc,MACdtU,EAAAA,EAAMC,IAAI,GAADL,OAAIiG,EAAM3E,IAAG,0BAA0B,CAC5CoL,QAAS,CACLqI,cAAc,SAAD/U,OAAWC,aAAaC,QAAQ,aAElDI,MAAMC,IACL+T,EAAS/T,EAASC,YAZb+D,OAiEiD5C,IAAI,4BAA4BC,IAAI,gBAfjEmC,UAsBhC0Q,IAAc/S,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,QAAOD,SAAA,EACjCmC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,MAAKD,SAAA,EAChBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,QAAOD,UAClBF,EAAAA,EAAAA,KAAA,OAAKsC,IAAI,2BAA2BC,IAAI,QAE5CF,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,eAAcD,SAAA,EACzBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,OAAMD,SAAEkV,GAAcA,EAAWU,SAChD9V,EAAAA,EAAAA,KAAA,OAAKG,UAAU,SAAQD,SAAEkV,GAAcA,EAAWO,oBAG1D3V,EAAAA,EAAAA,KAAA,OAAK2I,IAAKoM,EAAS5U,UAAU,OAAMD,UAC/BF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,SAAQD,SAClBgV,GAAWA,EAAQlS,KAAI,CAACkS,EAASxQ,KAC9B1E,EAAAA,EAAAA,KAAA,OACKG,UAAW+U,EAAQiB,QAAUjB,EAAQiB,OAAOC,SAAW,aAAe,iBAAiBlW,UACxFmC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,UAASD,SAAA,CACnBgV,EAAQiB,SAAU9T,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,OAAMD,SAAA,CACnCgV,EAAQiB,OAAO3J,WAAW,UAC1B0I,EAAQiB,OAAO1J,aAEnByI,EAAQA,SACTlV,EAAAA,EAAAA,KAAA,OAAKG,UAAU,OAAMD,SAChBgV,EAAQmB,WATX3R,UAgBtBrC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,SAAQD,SAAA,EACnBF,EAAAA,EAAAA,KAAA,SAAO4G,MAAO0O,EAAa1N,SAAWC,GAAM0N,EAAe1N,EAAEC,OAAOlB,OAAQmB,YAAY,WACjFC,KAAK,UACZhI,EAAAA,EAAAA,KAAA,OAAKuD,QA1HG+S,KAChB,IAAInV,EAAO,CAACoV,KAAMnB,EAAWlQ,GAAIgQ,QAASI,GAC1CvU,EAAAA,EAAMsG,KAAK,GAAD1G,OAAIiG,EAAM3E,IAAG,6BAA6Bd,EAAM,CACtDkM,QAAS,CACLqI,cAAc,SAAD/U,OAAWC,aAAaC,QAAQ,aAElDI,MAAMC,IACLqU,EAAe,IACfxU,EAAAA,EAAMC,IAAI,GAADL,OAAIiG,EAAM3E,IAAG,0BAAAtB,OAAyByU,EAAWlQ,GAAE,KAAK,CAC7DmI,QAAS,CACLqI,cAAc,SAAD/U,OAAWC,aAAaC,QAAQ,aAElDI,MAAMC,IACLiU,EAAWjU,EAASC,aA6GOhB,UAAU,YAAWD,UAC5CF,EAAAA,EAAAA,KAAA,OAAKsC,IAAI,6BAA6BC,IAAI,iBC0V9D,EAhfgBiU,KACZ,IAAI5P,GAAQ7C,EAAAA,EAAAA,YAAWC,GACvB,MAAOsE,EAAWC,IAAgBhI,EAAAA,EAAAA,UAAS,CAACiI,MAAM,EAAOf,QAAQ,IAC3DgB,GAAUC,EAAAA,EAAAA,QAAO,MACjBC,GAAMD,EAAAA,EAAAA,QAAO,OACZsB,EAASC,IAAc1J,EAAAA,EAAAA,UAAS,SAChCqI,EAAeC,IAAoBtI,EAAAA,EAAAA,UAAS,KAC5CuI,EAAaC,IAAkBxI,EAAAA,EAAAA,UAAS,OACxC2I,EAAaC,IAAkB5I,EAAAA,EAAAA,UAAS,KACxC6I,EAAUC,IAAe9I,EAAAA,EAAAA,UAAS,KAClC+I,EAAQC,IAAahJ,EAAAA,EAAAA,UAAS,KAC9B2J,EAAcC,IAAmB5J,EAAAA,EAAAA,UAAS,OAC1CiJ,EAAQC,IAAalJ,EAAAA,EAAAA,WAAS,IAG9BwL,EAAYC,IAAiBzL,EAAAA,EAAAA,UAAS,GACvC0L,EAFY,IAEGF,EACfG,EAAYC,KAAKC,KAAKlD,EAAYnG,OAHtB,KAsBZsJ,GAASC,EAAAA,EAAAA,IAAU,CACrBC,cAAe,CACXC,WAAY,GACZC,UAAW,GACX5F,MAAO,IAEXkG,SAvBcC,IACd,MAAMC,EAAS,CAAC,EAahB,OAXKD,EAAOR,aACRS,EAAOT,WAAa,YAGnBQ,EAAOP,YACRQ,EAAOR,UAAY,YAGlBO,EAAOnG,QACRoG,EAAOpG,MAAQ,YAEZoG,GAUPC,SAAWF,IACPG,QAIRrM,EAAAA,EAAAA,YAAU,KACNsM,MACD,IAEH,MAAMA,EAAaA,KACf3D,GAAU,GACV1I,EAAAA,EAAMC,IAAI,GAADL,OAAIiG,EAAM3E,IAAG,sBAAsB,CACxCoL,QAAS,CAAC,cAAgB,SAAD1M,OAAWC,aAAaC,QAAQ,aAC1DI,MAAMC,IACLiI,EAAejI,EAASC,SACzBmM,SAAQ,KACP7D,GAAU,OAYZ+D,EAAiBjH,IACnB,MAAMkH,EAAOlH,EAAMuB,OAAO4F,MAAM,GAChCvD,EAAgBsD,IAGdN,EAAcA,KAChB,MAAMQ,EAAW,IAAIC,SACrB,IAAIzG,EAAO,CACP0G,KAAM,SACNrB,WAAYH,EAAOW,OAAOR,WAC1BC,UAAWJ,EAAOW,OAAOP,UACzB5F,MAAOwF,EAAOW,OAAOnG,MACrBiH,OAAQ9D,GAEZ,IAAK,IAAIxD,KAAOW,EACZwG,EAASO,OAAO1H,EAAKW,EAAKX,IAE1B0D,GACAyD,EAASO,OAAO,gBAAiBhE,GAGhCd,GACDrI,EAAAA,EAAMsG,KAAK,GAAD1G,OAAIiG,EAAM3E,IAAG,sBAAsB0L,EACzC,CACIN,QAAS,CAAC,cAAgB,SAAD1M,OAAWC,aAAaC,QAAQ,aAC1DI,MAAMC,IACTqH,EAAa,CAACd,OAAQ,GAAIe,MAAM,IAChC4E,IACAf,EAAOiC,eAIXlF,GACArI,EAAAA,EAAMwN,MAAM,GAAD5N,OAAIiG,EAAM3E,IAAG,sBAAAtB,OAAqByI,EAAQ,KAAKuE,EACtD,CACIN,QAAS,CAAC,cAAgB,SAAD1M,OAAWC,aAAaC,QAAQ,aAC1DI,MAAMC,IACTqH,EAAa,CAACd,OAAQ,GAAIe,MAAM,IAChC4E,IACAf,EAAOiC,gBAebE,EAAe/G,IACF,UAAXA,GAAsB6B,EAAOpC,OAAOnE,OAAS,EAC7ChC,EAAAA,EAAMsG,KAAK,GAAD1G,OAAIiG,EAAM3E,IAAG,mCACnB,CAACwU,UAAWrN,EAAUE,UAAS,CAC3B+D,QAAS,CAAC,cAAgB,SAAD1M,OAAWC,aAAaC,QAAQ,aAC1DI,MAAMC,IACTqH,EAAa,CAACd,OAAQ,GAAIe,MAAM,IAChC4E,IACA7D,EAAU,OAEX7B,MAAM,+BAEE,YAAXD,GACA1G,EAAAA,EAAMsG,KAAK,GAAD1G,OAAIiG,EAAM3E,IAAG,qCACnB,CAACwU,UAAWrN,GAAW,CACnBiE,QAAS,CAAC,cAAgB,SAAD1M,OAAWC,aAAaC,QAAQ,aAC1DI,MAAMC,IACTqH,EAAa,CAACd,OAAQ,GAAIe,MAAM,IAChC4E,QAMNwB,EAAc1F,EAAY2F,MAAM5C,EAAcA,EAvIlC,KAwIb6C,QAAQ7L,IACL,MAAM8L,EAAanG,EAAcoG,WAAWC,cAAcC,QAAQ,OAAQ,IAAIA,QAAQ,MAAO,IACvFC,EAAclM,EAAK4D,MAAMmI,WAAWC,cAAcC,QAAQ,OAAQ,IAAIA,QAAQ,MAAO,IAC3F,MAAsB,KAAfH,GAAqBI,EAAYC,SAASL,MAClD/L,KAAI,CAACC,EAAMyB,KACHrC,EAAAA,EAAAA,MAAA,MAAAnC,SAAA,EACHF,EAAAA,EAAAA,KAAA,MAAAE,SAAKwE,EAAQ,KACbrC,EAAAA,EAAAA,MAAA,MAAIlC,UAAU,iBAAgBD,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,cAAaD,UACxBF,EAAAA,EAAAA,KAAA,OAAKuD,QAASA,KACVgF,EAAa,CAACC,MAAM,EAAMf,OAAQ,iBAClCsB,EAAe9F,EAAKoM,gBACrB/M,IAAKW,EAAKoM,cAAe9M,IAAI,QAEpCvC,EAAAA,EAAAA,KAAA,OAAKG,UAAU,cAAaD,UACxBmC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,OAAMD,SAAA,CAChB+C,EAAKuJ,WAAW,QAChBvJ,EAAKwJ,mBAIlBzM,EAAAA,EAAAA,KAAA,MAAAE,SACK+C,EAAK4D,SAEV7G,EAAAA,EAAAA,KAAA,MAAAE,SACK+C,EAAK6K,UAEV9N,EAAAA,EAAAA,KAAA,MAAAE,UACImC,EAAAA,EAAAA,MAAA,OAAKlC,UAAW8C,EAAK0M,SAAW,aAAe,sBAAsBzP,SAAA,EACjEF,EAAAA,EAAAA,KAAA,OAAKuD,QAASA,KACVgF,EAAa,CAACC,MAAM,EAAMf,OAAQ,YAC9BxE,EAAK0M,UACLpG,EAAUtG,EAAKqG,QAEnBD,EAAYpG,EAAKiC,KAClB5C,IAAI,2BAA2BC,IAAI,UAErCU,EAAKqG,QAAUrG,EAAK0M,WAAYtN,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,eAAcD,SAAA,EAC1DF,EAAAA,EAAAA,KAAA,OAAKsC,IAAI,6BAA6BC,IAAI,MAC1CvC,EAAAA,EAAAA,KAAA,OAAKG,UAAU,OAAMD,SAChB+C,EAAKqG,kBAMtBtJ,EAAAA,EAAAA,KAAA,UAEAA,EAAAA,EAAAA,KAAA,OAAKG,UAAU,YAAWD,UACtBF,EAAAA,EAAAA,KAAA,OAAKuD,QAASA,KApFZ0K,MAqFE1F,EAAa,CAACC,MAAM,EAAMf,OAAQ,gBArFpCwG,EAsFWhL,EArFzBoJ,EAAOuD,UAAU,CACbpD,WAAYyB,EAAOzB,WACnBC,UAAWwB,EAAOxB,UAClB5F,MAAOoH,EAAOpH,QAElBoD,EAAWgE,EAAOH,QAClBzE,EAAY4E,EAAO/I,KAgFJ5C,IAAI,gCAAgCC,IAAI,SA/CnCmC,KAoDxB,OAAOrC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,oBAAmBD,SAAA,EACrCF,EAAAA,EAAAA,KAAC8P,EAAAA,EAAa,CACVC,GAAIzH,EAAUE,KACdC,QAASA,EACTuH,QAAS,IACTC,WAAW,QACXC,eAAa,EAAAhQ,UAEbF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,aAAYD,UACvBmC,EAAAA,EAAAA,MAAA,OAAKsG,IAAKF,EAAStI,UAAU,aAAYD,SAAA,CAEf,eAArBoI,EAAUb,SACPpF,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,aAAYD,SAAA,EACvBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,aAAYD,UACvBF,EAAAA,EAAAA,KAAA,OACIuD,QAASA,KACLgF,EAAa,CAACd,OAAQ,GAAIe,MAAM,IAChC6D,EAAOiC,aAEXhM,IAAI,uBACJC,IAAI,QAGZvC,EAAAA,EAAAA,KAAA,OAAKG,UAAU,QAAOD,SAAC,oBACvBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,aAAYD,SAAC,yBAC5BmC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,iBAAgBD,SAAA,EAC3BmC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,aAAYD,SAAA,EACvBmC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,oBAAmBD,SAAA,EAC9BF,EAAAA,EAAAA,KAAA,SAAO4H,SAAU4F,EAAexF,KAAK,UACrC3F,EAAAA,EAAAA,MAAA,OAAKlC,UAAS,cAAAQ,OAAgBuJ,EAAe,SAAW,IAAKhK,SAAA,CAAC,gBAE1DF,EAAAA,EAAAA,KAAA,OAAKsC,IAAI,2BAA2BC,IAAI,YAIhDvC,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAcD,UACzBF,EAAAA,EAAAA,KAACmQ,EAAAA,EAAS,CACN3I,MAA+B,aAAxB6E,EAAOY,OAAOpG,MACrBD,MAAOyF,EAAOW,OAAOnG,MACrBe,SAAUyE,EAAO+D,aACjB7L,KAAK,QACLyD,KAAK,OACLqI,GAAI,CAACC,EAAG,EAAGC,SAAU,QAASC,KAAK,QAAQtL,GAAG,iBAC9CuL,MAAM,gBAAgBxL,QAAQ,WAAW9E,UAAU,oBAG/DkC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,aAAYD,SAAA,EACvBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAcD,UACzBF,EAAAA,EAAAA,KAACmQ,EAAAA,EAAS,CACN3I,MAAoC,aAA7B6E,EAAOY,OAAOT,WACrB5F,MAAOyF,EAAOW,OAAOR,WACrB5E,SAAUyE,EAAO+D,aACjB7L,KAAK,aACLyD,KAAK,OACLqI,GAAI,CAACC,EAAG,EAAGC,SAAU,QAASC,KAAK,QAAQtL,GAAG,iBAC9CuL,MAAM,MAAMxL,QAAQ,WAAW9E,UAAU,iBAEjDH,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAcD,UACzBF,EAAAA,EAAAA,KAACmQ,EAAAA,EAAS,CACN3I,MAAmC,aAA5B6E,EAAOY,OAAOR,UACrB7F,MAAOyF,EAAOW,OAAOP,UACrB7E,SAAUyE,EAAO+D,aACjB7L,KAAK,YACLyD,KAAK,OACLqI,GAAI,CAACC,EAAG,EAAGC,SAAU,QAASC,KAAK,QAAQtL,GAAG,iBAC9CuL,MAAM,WAAWxL,QAAQ,WAAW9E,UAAU,oBAG1DH,EAAAA,EAAAA,KAAA,OAAKG,UAAU,aAAYD,UACvBmC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,eAAcD,SAAA,EACzBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,WAAUD,SAAC,YAG1BmC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,QAAOD,SAAA,EAClBF,EAAAA,EAAAA,KAAA,OAAKuD,QAASA,IAAM0G,EAAW,QAC1B9J,UAAS,MAAAQ,OAAoB,SAAZqJ,EAAqB,KAAO,IAAK9J,SAAC,WAGxDF,EAAAA,EAAAA,KAAA,OAAKuD,QAASA,IAAM0G,EAAW,UAC1B9J,UAAS,MAAAQ,OAAoB,WAAZqJ,EAAuB,KAAO,IAAK9J,SAAC,qBAO1EF,EAAAA,EAAAA,KAAA,OAAKuD,QAASA,KACV8I,EAAOgG,gBACRlS,UAAU,UAASD,SAAC,gBAMT,iBAArBoI,EAAUb,SACPpF,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,eAAcD,SAAA,EACzBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,aAAYD,UACvBF,EAAAA,EAAAA,KAAA,OACIuD,QAASA,IAAMgF,EAAa,CAACd,OAAQ,GAAIe,MAAM,IAC/ClG,IAAI,uBACJC,IAAI,QAIZvC,EAAAA,EAAAA,KAAA,OAAKG,UAAU,QAAOD,UAClBF,EAAAA,EAAAA,KAAA,OAAKsC,IAAKwG,EAAavG,IAAI,UAKjB,YAArB+F,EAAUb,SACPpF,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,UAASD,SAAA,EACpBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,aAAYD,UACvBF,EAAAA,EAAAA,KAAA,OAAKuD,QAASA,KACVgF,EAAa,CAACd,OAAQ,GAAIe,MAAM,IAChCe,EAAU,KAETjH,IAAI,uBACJC,IAAI,QAIbvC,EAAAA,EAAAA,KAAA,OAAKG,UAAU,QAAOD,SAAC,0BAIvBmC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,cAAaD,SAAA,EACxBF,EAAAA,EAAAA,KAAA,YAAU4G,MAAO0C,EAAQ1B,SAAWC,GAAM0B,EAAU1B,EAAEC,OAAOlB,OACnDmB,YAAY,mCAAmCxD,KAAK,SACpDW,GAAG,YAEb7C,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,UAASD,SAAA,EACpBF,EAAAA,EAAAA,KAAA,OAAKuD,QAASA,KACViL,EAAY,YAEXrO,UAAU,SAAQD,SAAC,kBAGxBF,EAAAA,EAAAA,KAAA,OAAKuD,QAASA,KACViL,EAAY,UACbrO,UAAU,UAASD,SAAC,sBAQjB,gBAArBoI,EAAUb,SACPpF,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,cAAaD,SAAA,EACxBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,aAAYD,UACvBF,EAAAA,EAAAA,KAAA,OACIuD,QAASA,KACLgF,EAAa,CAACd,OAAQ,GAAIe,MAAM,IAChC6D,EAAOiC,aAEXhM,IAAI,uBACJC,IAAI,QAIZvC,EAAAA,EAAAA,KAAA,OAAKG,UAAU,QAAOD,SAAC,qCAEvBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,aAAYD,SAAC,yBAE5BmC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,iBAAgBD,SAAA,EAC3BmC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,aAAYD,SAAA,EACvBmC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,oBAAmBD,SAAA,EAC9BF,EAAAA,EAAAA,KAAA,SAAO4H,SAAU4F,EAAexF,KAAK,UACrC3F,EAAAA,EAAAA,MAAA,OAAKlC,UAAS,cAAAQ,OAAgBuJ,EAAe,SAAW,IAAKhK,SAAA,CAAC,gBAE1DF,EAAAA,EAAAA,KAAA,OAAKsC,IAAI,2BAA2BC,IAAI,YAIhDvC,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAcD,UACzBF,EAAAA,EAAAA,KAACmQ,EAAAA,EAAS,CACN3I,MAA+B,aAAxB6E,EAAOY,OAAOpG,MACrBD,MAAOyF,EAAOW,OAAOnG,MACrBe,SAAUyE,EAAO+D,aACjB7L,KAAK,QACLyD,KAAK,OACLqI,GAAI,CAACC,EAAG,EAAGC,SAAU,QAASC,KAAK,QAAQtL,GAAG,iBAC9CuL,MAAM,gBAAgBxL,QAAQ,WAAW9E,UAAU,oBAG/DkC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,aAAYD,SAAA,EACvBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAcD,UACzBF,EAAAA,EAAAA,KAACmQ,EAAAA,EAAS,CACN3I,MAAoC,aAA7B6E,EAAOY,OAAOT,WACrB5F,MAAOyF,EAAOW,OAAOR,WACrB5E,SAAUyE,EAAO+D,aACjB7L,KAAK,aACLyD,KAAK,OACLqI,GAAI,CAACC,EAAG,EAAGC,SAAU,QAASC,KAAK,QAAQtL,GAAG,iBAC9CuL,MAAM,MAAMxL,QAAQ,WAAW9E,UAAU,iBAEjDH,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAcD,UACzBF,EAAAA,EAAAA,KAACmQ,EAAAA,EAAS,CACN3I,MAAmC,aAA5B6E,EAAOY,OAAOR,UACrB7F,MAAOyF,EAAOW,OAAOP,UACrB7E,SAAUyE,EAAO+D,aACjB7L,KAAK,YACLyD,KAAK,OACLqI,GAAI,CAACC,EAAG,EAAGC,SAAU,QAASC,KAAK,QAAQtL,GAAG,iBAC9CuL,MAAM,WAAWxL,QAAQ,WAAW9E,UAAU,oBAG1DH,EAAAA,EAAAA,KAAA,OAAKG,UAAU,aAAYD,UACvBmC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,eAAcD,SAAA,EACzBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,WAAUD,SAAC,YAG1BmC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,QAAOD,SAAA,EAClBF,EAAAA,EAAAA,KAAA,OAAKuD,QAASA,IAAM0G,EAAW,QAC1B9J,UAAS,MAAAQ,OAAoB,SAAZqJ,EAAqB,KAAO,IAAK9J,SAAC,WAGxDF,EAAAA,EAAAA,KAAA,OAAKuD,QAASA,IAAM0G,EAAW,UAC1B9J,UAAS,MAAAQ,OAAoB,WAAZqJ,EAAuB,KAAO,IAAK9J,SAAC,qBAQ1EF,EAAAA,EAAAA,KAAA,OAAKuD,QAASA,KACV8I,EAAOgG,gBACRlS,UAAU,UAASD,SAAC,uBAS3CmC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,SAAQD,SAAA,EACnBmC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,aAAYD,SAAA,EACvBF,EAAAA,EAAAA,KAAA,OAAKsC,IAAI,iCAAiCC,IAAI,MAC9CvC,EAAAA,EAAAA,KAAA,SAAO4H,SAAWC,GAAMgB,EAAiBhB,EAAEC,OAAOlB,OAAQmB,YAAY,yBAC/DC,KAAK,aAGhBhI,EAAAA,EAAAA,KAAA,OAAKuD,QAASA,KACVgF,EAAa,CAACC,MAAM,EAAMf,OAAQ,gBACnCtH,UAAU,iBAAgBD,SAAC,uBAMlCF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,gBAAeD,SACzBsJ,GAASxJ,EAAAA,EAAAA,KAACoI,EAAW,KAAK/F,EAAAA,EAAAA,MAAA,SAAAnC,SAAA,EACvBF,EAAAA,EAAAA,KAAA,SAAAE,UACAmC,EAAAA,EAAAA,MAAA,MAAAnC,SAAA,EACIF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,YACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,kBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,mBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,WACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,cACJF,EAAAA,EAAAA,KAAA,eAIJA,EAAAA,EAAAA,KAAA,SAAAE,SACC0O,UAKT5O,EAAAA,EAAAA,KAAA,OAAKG,UAAU,aAAYD,SACtBgJ,EAAYnG,OAAS,KAAM/C,EAAAA,EAAAA,KAAC+T,IAAa,CACtCC,WAAW,MACXC,eAAejU,EAAAA,EAAAA,KAAA,OAAKsC,IAAI,0BAA0BC,IAAI,KACtD2R,WAAWlU,EAAAA,EAAAA,KAAA,OAAKsC,IAAI,0BAA0BC,IAAI,KAClD2J,UAAWA,EACXiI,aAtaOtP,IAAiB,IAAhB,SAACgN,GAAShN,EAC1BmH,EAAc6F,GAEduC,YAAW,KAAO,IAADC,EACF,QAAXA,EAAA1L,EAAI2L,eAAO,IAAAD,GAAXA,EAAaE,eAAe,CAACC,SAAU,aACxC,MAkaKC,mBAAoB,kBACpBC,sBAAuB,eACvBC,kBAAmB,WACnBC,mBAAoB,qBACpBC,gBAAiB,qBAChB,SChVjB,EA9Je6B,KACX,MAAM,EAAC7S,IAAKC,EAAAA,EAAAA,MACZ,IAAI8C,GAAQ7C,EAAAA,EAAAA,YAAWC,GACvB,MAAOuL,EAAcoH,IAAmBpW,EAAAA,EAAAA,UACpC,CACIqW,QAAS,GACTC,QAAS,GACTC,QAAS,MAEVC,EAAYC,IAAiBzW,EAAAA,EAAAA,UAAS,KACtC0W,EAAMC,IAAW3W,EAAAA,EAAAA,WAAS,IAC1B4W,EAAQC,IAAa7W,EAAAA,EAAAA,UAAS,IAE/B8W,EAAUA,KACZtW,EAAAA,EAAMC,IAAI,GAADL,OAAIiG,EAAM3E,IAAG,wBAAuB,CACzCoL,QAAS,CAAC,cAAgB,SAAD1M,OAAWC,aAAaC,QAAQ,aAC1DI,MAAMC,IACL8V,EAAc9V,EAASC,WAI/BL,EAAAA,EAAAA,YAAU,KACNuW,MACD,IAEH,MAAMC,EAAY7P,IACd,MAAM,QAACmP,EAAO,QAAEC,EAAO,QAAEC,GAAWvH,EAIpC,KAFwBqH,EAAQ1P,QAAU2P,EAAQ3P,QAAU4P,EAAQ5P,QAIhE,YADAQ,MAAM,iCAIV,MAAM6P,EAAmB,CACrBC,GAAI,CACAjT,KAAMqS,EAAQ1P,QAElBuQ,GAAI,CACAlT,KAAMsS,EAAQ3P,QAElBwQ,GAAI,CACAnT,KAAMuS,EAAQ5P,SAIP,QAAXO,GACA1G,EAAAA,EAAMsG,KAAK,GAAD1G,OAAIiG,EAAM3E,IAAG,wBAAwB,CAACsN,aAAcgI,GAC1D,CACIlK,QAAS,CAAC,cAAgB,SAAD1M,OAAWC,aAAaC,QAAQ,aAE5DI,MAAMC,IACHyV,EAAgB,CAACC,QAAS,GAAIC,QAAS,GAAIC,QAAS,KACpDO,OAEH9P,OAAOC,IACJU,QAAQV,MAAM,2BAA4BA,MAIvC,SAAXC,GACA1G,EAAAA,EAAM4W,IAAI,GAADhX,OAAIiG,EAAM3E,IAAG,wBAAAtB,OAAuBwW,EAAM,KAAK,CAAC5H,aAAcgI,GACnE,CACIlK,QAAS,CAAC,cAAgB,SAAD1M,OAAWC,aAAaC,QAAQ,aAE5DI,MAAMC,IACHyV,EAAgB,CAACC,QAAS,GAAIC,QAAS,GAAIC,QAAS,KACpDO,IACAH,GAAQ,MAEX3P,OAAOC,IACJU,QAAQV,MAAM,+BAAgCA,OAyB9D,OAAOnF,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,iBAAgBD,SAAA,EAClCF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,SAAQD,UACnBmC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,eAAcD,SAAA,EACzBF,EAAAA,EAAAA,KAAA,SACI4G,MAAO2I,EAAaqH,QACpBhP,SAAWC,GACP8O,GAAezQ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAGqJ,GAAY,IAAEqH,QAAS/O,EAAEC,OAAOlB,SAExDmB,YAAY,qBACZC,KAAK,UAEThI,EAAAA,EAAAA,KAAA,SACI4G,MAAO2I,EAAauH,QACpBlP,SAAWC,GACP8O,GAAezQ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAGqJ,GAAY,IAAEuH,QAASjP,EAAEC,OAAOlB,SAExDmB,YAAY,qBACZC,KAAK,UAGThI,EAAAA,EAAAA,KAAA,SACI4G,MAAO2I,EAAasH,QACpBjP,SAAWC,GACP8O,GAAezQ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAGqJ,GAAY,IAAEsH,QAAShP,EAAEC,OAAOlB,SAExDmB,YAAY,0FACZC,KAAK,SAIRiP,GAAOjX,EAAAA,EAAAA,KAAA,OAAKuD,QAASA,IAAM+T,EAAS,QAASnX,UAAU,YAAWD,UAC/DF,EAAAA,EAAAA,KAAA,OAAKsC,IAAI,+BAA+BC,IAAI,QACvCvC,EAAAA,EAAAA,KAAA,OAAKuD,QAASA,IAAM+T,EAAS,OAAQnX,UAAU,YAAWD,UAC/DF,EAAAA,EAAAA,KAAA,OAAKsC,IAAI,yBAAyBC,IAAI,aAKlDvC,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAcD,UACzBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,cAAaD,SAEpB6W,EAAW/T,KAAI,CAAC4U,EAAOlT,KACnBrC,EAAAA,EAAAA,MAAA,OAAiBlC,UAAU,aAAYD,SAAA,EACnCF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,OAAMD,SAAE0X,EAAMrI,aAAanK,EAAAA,GAAQf,UAAUE,QAC5DlC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,SAAQD,SAAA,EACnBF,EAAAA,EAAAA,KAAA,OAAKuD,QAASA,IAvDtBqU,KAChBV,GAAQ,GACRE,EAAUQ,EAAM1S,IAChByR,EAAgB,CACZC,QAASgB,EAAMrI,aAAiB,GAAEhL,MAAQ,GAC1CsS,QAASe,EAAMrI,aAAiB,GAAEhL,MAAQ,GAC1CuS,QAASc,EAAMrI,aAAiB,GAAEhL,MAAQ,MAiDFsT,CAAWD,GAAQzX,UAAU,MAAKD,UAClDF,EAAAA,EAAAA,KAAA,OAAKsC,IAAI,gCAAgCC,IAAI,QAGjDvC,EAAAA,EAAAA,KAAA,OAAKuD,QAASA,KAAMuU,OArE9B5S,EAqEuC0S,EAAM1S,QApE3DnE,EAAAA,EAAMmV,OAAO,GAADvV,OAAIiG,EAAM3E,IAAG,wBAAAtB,OAAuBuE,EAAE,KAAI,CAClDmI,QAAS,CAAC,cAAgB,SAAD1M,OAAWC,aAAaC,QAAQ,aAC1DI,MAAMC,IACLyV,EAAgB,CAACC,QAAS,GAAIC,QAAS,GAAIC,QAAS,KACpDO,IACAH,GAAQ,MANEhS,OAqEkD/E,UAAU,MAAKD,UACnDF,EAAAA,EAAAA,KAAA,OAAKsC,IAAI,4BAA4BC,IAAI,YAR3CmC,aCiBlC,EA7JiBqT,KACb,IAAInR,GAAQ7C,EAAAA,EAAAA,YAAWC,GACvB,MAAO+S,EAAYC,IAAiBzW,EAAAA,EAAAA,UAAS,KACtC0W,EAAMC,IAAW3W,EAAAA,EAAAA,WAAS,IAC1B4W,EAAQC,IAAa7W,EAAAA,EAAAA,UAAS,KAC9BgP,EAAcoH,IAAmBpW,EAAAA,EAAAA,UACpC,CACIqW,QAAS,GACTC,QAAS,GACTC,QAAS,KAGXO,EAAUA,KACZtW,EAAAA,EAAMC,IAAI,GAADL,OAAIiG,EAAM3E,IAAG,uBAAsB,CACxCoL,QAAS,CAAC,cAAgB,SAAD1M,OAAWC,aAAaC,QAAQ,aAC1DI,MAAMC,IACL8V,EAAc9V,EAASC,WAI/BL,EAAAA,EAAAA,YAAU,KACNuW,MACD,IAEH,MAAMC,EAAY7P,IACd,MAAM,QAACmP,EAAO,QAAEC,EAAO,QAAEC,GAAWvH,EAIpC,KAFwBqH,EAAQ1P,QAAU2P,EAAQ3P,QAAU4P,EAAQ5P,QAIhE,YADAQ,MAAM,iCAIV,MAAM6P,EAAmB,CACrBC,GAAI,CACAjT,KAAMqS,EAAQ1P,QAElBuQ,GAAI,CACAlT,KAAMsS,EAAQ3P,QAElBwQ,GAAI,CACAnT,KAAMuS,EAAQ5P,SAIP,QAAXO,GACA1G,EAAAA,EAAMsG,KAAK,GAAD1G,OAAIiG,EAAM3E,IAAG,sBAAsB,CAACsN,aAAcgI,GACxD,CACIlK,QAAS,CAAC,cAAgB,SAAD1M,OAAWC,aAAaC,QAAQ,aAE5DI,MAAMC,IACHyV,EAAgB,CAACC,QAAS,GAAIC,QAAS,GAAIC,QAAS,KACpDO,OAEH9P,OAAOC,IACJU,QAAQV,MAAM,2BAA4BA,MAIvC,SAAXC,GACA1G,EAAAA,EAAM4W,IAAI,GAADhX,OAAIiG,EAAM3E,IAAG,sBAAAtB,OAAqBwW,EAAM,KAAK,CAAC5H,aAAcgI,GACjE,CACIlK,QAAS,CAAC,cAAgB,SAAD1M,OAAWC,aAAaC,QAAQ,aAE5DI,MAAMC,IACHyV,EAAgB,CAACC,QAAS,GAAIC,QAAS,GAAIC,QAAS,KACpDO,IACAH,GAAQ,MAEX3P,OAAOC,IACJU,QAAQV,MAAM,+BAAgCA,OAyB9D,OAAOnF,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,oBAAmBD,SAAA,EACrCF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,SAAQD,UACnBmC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,eAAcD,SAAA,EACzBF,EAAAA,EAAAA,KAAA,SACI4G,MAAO2I,EAAaqH,QACpBhP,SAAWC,GACP8O,GAAezQ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAGqJ,GAAY,IAAEqH,QAAS/O,EAAEC,OAAOlB,SAExDmB,YAAY,qBACZC,KAAK,UAEThI,EAAAA,EAAAA,KAAA,SACI4G,MAAO2I,EAAauH,QACpBlP,SAAWC,GACP8O,GAAezQ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAGqJ,GAAY,IAAEuH,QAASjP,EAAEC,OAAOlB,SAExDmB,YAAY,qBACZC,KAAK,UAGThI,EAAAA,EAAAA,KAAA,SACI4G,MAAO2I,EAAasH,QACpBjP,SAAWC,GACP8O,GAAezQ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAGqJ,GAAY,IAAEsH,QAAShP,EAAEC,OAAOlB,SAExDmB,YAAY,gGACZC,KAAK,SAIRiP,GAAOjX,EAAAA,EAAAA,KAAA,OAAKuD,QAASA,IAAM+T,EAAS,QAASnX,UAAU,YAAWD,UAC/DF,EAAAA,EAAAA,KAAA,OAAKsC,IAAI,+BAA+BC,IAAI,QACvCvC,EAAAA,EAAAA,KAAA,OAAKuD,QAASA,IAAM+T,EAAS,OAAQnX,UAAU,YAAWD,UAC/DF,EAAAA,EAAAA,KAAA,OAAKsC,IAAI,yBAAyBC,IAAI,aAKlDvC,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAcD,UACzBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,cAAaD,SAEpB6W,EAAW/T,KAAI,CAAC4U,EAAOlT,KACnBrC,EAAAA,EAAAA,MAAA,OAAiBlC,UAAU,aAAYD,SAAA,EACnCF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,OAAMD,SAAE0X,EAAMrI,aAAanK,EAAAA,GAAQf,UAAUE,QAC5DlC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,SAAQD,SAAA,EACnBF,EAAAA,EAAAA,KAAA,OAAKuD,QAASA,IAvDtBqU,KAChBV,GAAQ,GACRE,EAAUQ,EAAM1S,IAChByR,EAAgB,CACZC,QAASgB,EAAMrI,aAAiB,GAAEhL,MAAQ,GAC1CsS,QAASe,EAAMrI,aAAiB,GAAEhL,MAAQ,GAC1CuS,QAASc,EAAMrI,aAAiB,GAAEhL,MAAQ,MAiDFsT,CAAWD,GAAQzX,UAAU,MAAKD,UAClDF,EAAAA,EAAAA,KAAA,OAAKsC,IAAI,gCAAgCC,IAAI,QAGjDvC,EAAAA,EAAAA,KAAA,OAAKuD,QAASA,KAAMuU,OArE9B5S,EAqEuC0S,EAAM1S,QApE3DnE,EAAAA,EAAMmV,OAAO,GAADvV,OAAIiG,EAAM3E,IAAG,sBAAAtB,OAAqBuE,EAAE,KAAI,CAChDmI,QAAS,CAAC,cAAgB,SAAD1M,OAAWC,aAAaC,QAAQ,aAC1DI,MAAMC,IACLyV,EAAgB,CAACC,QAAS,GAAIC,QAAS,GAAIC,QAAS,KACpDO,IACAH,GAAQ,MANEhS,OAqEkD/E,UAAU,MAAKD,UACnDF,EAAAA,EAAAA,KAAA,OAAKsC,IAAI,4BAA4BC,IAAI,YAR3CmC,aCoVlC,EArdgBsT,KACZ,IAAIpR,GAAQ7C,EAAAA,EAAAA,YAAWC,GACvB,MAAOsE,EAAWC,IAAgBhI,EAAAA,EAAAA,UAAS,CAACiI,MAAM,EAAOf,QAAQ,IAC3DgB,GAAUC,EAAAA,EAAAA,QAAO,OAChBuP,EAAaC,IAAkB3X,EAAAA,EAAAA,UAAS,KACxC4W,EAAQC,IAAa7W,EAAAA,EAAAA,UAAS,IAC/BoI,GAAMD,EAAAA,EAAAA,QAAO,OACZQ,EAAaC,IAAkB5I,EAAAA,EAAAA,UAAS,CAAC,CAAC,KAE1CwL,EAAYC,IAAiBzL,EAAAA,EAAAA,UAAS,GACvC0L,EAFY,IAEGF,EAEfG,EAAYC,KAAKC,KAAKlD,EAAYnG,OAJtB,KAgDZsJ,GAASC,EAAAA,EAAAA,IAAU,CACrBC,cAAe,CACXsD,QAAS,GACTsI,YAAa,GACbC,aAAc,GACdC,cAAe,GACfC,mBAAoB,GACpBC,eAAgB,GAChBC,aAAc,IAElBzL,SA5CcC,IACd,MAAMC,EAAS,CAAC,EA8BhB,OA5BKD,EAAO6C,UACR5C,EAAO4C,QAAU,YAGhB7C,EAAOwL,eACRvL,EAAOuL,aAAe,YAGrBxL,EAAOmL,cACRlL,EAAOkL,YAAc,YAGpBnL,EAAOoL,eACRnL,EAAOmL,aAAe,YAGrBpL,EAAOqL,gBACRpL,EAAOoL,cAAgB,YAGtBrL,EAAOsL,qBACRrL,EAAOqL,mBAAqB,YAG3BtL,EAAOuL,iBACRtL,EAAOsL,eAAiB,YAGrBtL,GAcPC,SAAWF,IACPG,OAIFA,EAAcA,KAChB,IAAIsL,EAAU,CACV5I,QAASxD,EAAOW,OAAO6C,QACvB2I,aAAcnM,EAAOW,OAAOwL,aAC5BL,YAAa9L,EAAOW,OAAOmL,YAC3BC,aAAc/L,EAAOW,OAAOoL,aAC5BC,cAAehM,EAAOW,OAAOqL,cAC7BC,mBAAoBjM,EAAOW,OAAOsL,mBAClCC,eAAgBlM,EAAOW,OAAOuL,gBAG7BpB,GACDpW,EAAAA,EAAMsG,KAAK,GAAD1G,OAAIiG,EAAM3E,IAAG,uBAAuBwW,EAAS,CACnDpL,QAAS,CACLqI,cAAc,SAAD/U,OAAWC,aAAaC,QAAQ,aAElDI,MAAMC,IACLkM,IACA7E,EAAa,CAACd,OAAQ,GAAIe,MAAM,IAChC6D,EAAOiC,eAIX6I,GACApW,EAAAA,EAAM4W,IAAI,GAADhX,OAAIiG,EAAM3E,IAAG,uBAAAtB,OAAsBwW,EAAM,KAAKsB,EACnD,CACIpL,QAAS,CACLqI,cAAc,SAAD/U,OAAWC,aAAaC,QAAQ,aAElDI,MAAMC,IACTkM,IACAf,EAAOiC,YACP/F,EAAa,CAACd,OAAQ,GAAIe,MAAM,SAK5C1H,EAAAA,EAAAA,YAAU,KACNsM,MACD,IAEH,MAUMA,EAAaA,KACfrM,EAAAA,EAAMC,IAAI,GAADL,OAAIiG,EAAM3E,IAAG,uBAAuB,CACzCoL,QAAS,CACLqI,cAAc,SAAD/U,OAAWC,aAAaC,QAAQ,aAElDI,MAAMC,IACLgX,EAAehX,EAASC,UAkB1ByN,EAAcqJ,EAAYpJ,MAAM5C,EAAcA,EA3IlC,KA2I4DjJ,KAAI,CAACC,EAAMyB,KAC9ErC,EAAAA,EAAAA,MAAA,MAAAnC,SAAA,EACHF,EAAAA,EAAAA,KAAA,MAAAE,SAAKwE,EAAQ,KACb1E,EAAAA,EAAAA,KAAA,MAAAE,SACK+C,EAAK4M,WAEV7P,EAAAA,EAAAA,KAAA,MAAAE,SACK+C,EAAKuV,gBAEVxY,EAAAA,EAAAA,KAAA,MAAAE,SAAK+C,EAAKkV,eACVnY,EAAAA,EAAAA,KAAA,MAAAE,SAAK+C,EAAKmV,gBACVpY,EAAAA,EAAAA,KAAA,MAAAE,SAAK+C,EAAKoV,iBACVrY,EAAAA,EAAAA,KAAA,MAAAE,SAAK+C,EAAKqV,sBACVtY,EAAAA,EAAAA,KAAA,MAAAE,SAAK+C,EAAKsV,kBACVvY,EAAAA,EAAAA,KAAA,MAAAE,UACIF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,OAAMD,UACjBF,EAAAA,EAAAA,KAAA,OAAKuD,QAASA,KAAMuU,OAlDlB5S,EAkD2BjC,EAAKiC,QAjD9CnE,EAAAA,EAAMmV,OAAO,GAADvV,OAAIiG,EAAM3E,IAAG,uBAAAtB,OAAsBuE,EAAE,KAAK,CAClDmI,QAAS,CACLqI,cAAc,SAAD/U,OAAWC,aAAaC,QAAQ,aAElDI,MAAMC,IACLkM,OANUlI,OAkDqC5C,IAAI,4BAA4BC,IAAI,UAGnFvC,EAAAA,EAAAA,KAAA,UAEAA,EAAAA,EAAAA,KAAA,OAAKG,UAAU,YAAWD,UACtBF,EAAAA,EAAAA,KAAA,OAAKuD,QAASA,KAAMmV,OAnC5BtB,GADgBvH,EAoCuB5M,GAnCrBiC,IAClBqD,EAAa,CAACC,MAAM,EAAMf,OAAQ,qBAClC4E,EAAOuD,UAAU,CACbC,QAASA,EAAQA,QACjBsI,YAAatI,EAAQsI,YACrBC,aAAcvI,EAAQuI,aACtBC,cAAexI,EAAQwI,cACvBC,mBAAoBzI,EAAQyI,mBAC5BC,eAAgB1I,EAAQ0I,eACxBC,aAAc3I,EAAQ2I,eAVV3I,OAoC8BvN,IAAI,gCAAgCC,IAAI,SArBtEmC,KA0BpB,OAAOrC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,oBAAmBD,SAAA,EACrCF,EAAAA,EAAAA,KAAC8P,EAAAA,EAAa,CACVC,GAAIzH,EAAUE,KACdC,QAASA,EACTuH,QAAS,IACTC,WAAW,QACXC,eAAa,EAAAhQ,UAEbF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,aAAYD,UACvBmC,EAAAA,EAAAA,MAAA,OAAKsG,IAAKF,EAAStI,UAAU,aAAYD,SAAA,CAEf,eAArBoI,EAAUb,SACPpF,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,aAAYD,SAAA,EACvBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,aAAYD,UACvBF,EAAAA,EAAAA,KAAA,OACIuD,QAASA,IAAMgF,EAAa,CAACd,OAAQ,GAAIe,MAAM,IAC/ClG,IAAI,uBACJC,IAAI,QAIZvC,EAAAA,EAAAA,KAAA,OAAKG,UAAU,QAAOD,SAAC,oBAEvBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,aAAYD,SAAC,yBAE5BmC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,iBAAgBD,SAAA,EAE3BmC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,aAAYD,SAAA,EACvBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAcD,UACzBmC,EAAAA,EAAAA,MAACsO,EAAAA,EAAW,CAACN,GAAI,CAACC,EAAG,EAAGC,SAAU,QAASC,KAAK,QAAQrQ,UAAU,YAAWD,SAAA,EACzEF,EAAAA,EAAAA,KAAC4Q,EAAAA,EAAU,CAAC1L,GAAG,0BAAyBhF,SAAC,gBACzCmC,EAAAA,EAAAA,MAACwO,EAAAA,EAAM,CACHrJ,MAAiC,aAA1B6E,EAAOY,OAAO4C,QACrBiB,QAAQ,0BACR5L,GAAG,oBACH0B,MAAOyF,EAAOW,OAAO6C,QACrBY,MAAM,aACNlM,KAAK,UACLqD,SAAUyE,EAAO+D,aAAalQ,SAAA,EAE9BF,EAAAA,EAAAA,KAAC+Q,EAAAA,EAAQ,CAACnK,MAAM,WAAU1G,SAAC,cAC3BF,EAAAA,EAAAA,KAAC+Q,EAAAA,EAAQ,CAACnK,MAAM,YAAW1G,SAAC,eAC5BF,EAAAA,EAAAA,KAAC+Q,EAAAA,EAAQ,CAACnK,MAAM,UAAS1G,SAAC,qBAKtCF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAcD,UACzBF,EAAAA,EAAAA,KAACmQ,EAAAA,EAAS,CACN3I,MAAsC,aAA/B6E,EAAOY,OAAOuL,aACrB5R,MAAOyF,EAAOW,OAAOwL,aACrB5Q,SAAUyE,EAAO+D,aACjB7L,KAAK,eACLyD,KAAK,OACLqI,GAAI,CAACC,EAAG,EAAGC,SAAU,QAASC,KAAK,QAAQtL,GAAG,iBAC9CuL,MAAM,8BAA8BxL,QAAQ,WAC5C9E,UAAU,oBAItBkC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,aAAYD,SAAA,EACvBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAcD,UACzBF,EAAAA,EAAAA,KAACmQ,EAAAA,EAAS,CACN3I,MAAqC,aAA9B6E,EAAOY,OAAOkL,YACrBvR,MAAOyF,EAAOW,OAAOmL,YACrBvQ,SAAUyE,EAAO+D,aACjB7L,KAAK,cACLyD,KAAK,OACLqI,GAAI,CAACC,EAAG,EAAGC,SAAU,QAASC,KAAK,QAAQtL,GAAG,iBAC9CuL,MAAM,iBAAiBxL,QAAQ,WAAW9E,UAAU,iBAE5DH,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAcD,UACzBF,EAAAA,EAAAA,KAACmQ,EAAAA,EAAS,CACN3I,MAAsC,aAA/B6E,EAAOY,OAAOmL,aACrBxR,MAAOyF,EAAOW,OAAOoL,aACrBxQ,SAAUyE,EAAO+D,aACjB7L,KAAK,eACLyD,KAAK,OACLqI,GAAI,CAACC,EAAG,EAAGC,SAAU,QAASC,KAAK,QAAQtL,GAAG,iBAC9CuL,MAAM,YAAYxL,QAAQ,WAAW9E,UAAU,oBAI3DkC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,aAAYD,SAAA,EACvBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAcD,UACzBF,EAAAA,EAAAA,KAACmQ,EAAAA,EAAS,CACN3I,MAAuC,aAAhC6E,EAAOY,OAAOoL,cACrBzR,MAAOyF,EAAOW,OAAOqL,cACrBzQ,SAAUyE,EAAO+D,aACjB7L,KAAK,gBACLyD,KAAK,OACLqI,GAAI,CAACC,EAAG,EAAGC,SAAU,QAASC,KAAK,QAAQtL,GAAG,iBAC9CuL,MAAM,aAAaxL,QAAQ,WAAW9E,UAAU,iBAExDH,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAcD,UACzBF,EAAAA,EAAAA,KAACmQ,EAAAA,EAAS,CACN3I,MAA4C,aAArC6E,EAAOY,OAAOqL,mBACrB1R,MAAOyF,EAAOW,OAAOsL,mBACrB1Q,SAAUyE,EAAO+D,aACjB7L,KAAK,qBACLyD,KAAK,OACLqI,GAAI,CAACC,EAAG,EAAGC,SAAU,QAASC,KAAK,QAAQtL,GAAG,iBAC9CuL,MAAM,0BAA0BxL,QAAQ,WAAW9E,UAAU,oBAIzEH,EAAAA,EAAAA,KAAA,OAAKG,UAAU,aAAYD,UACvBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAcD,UACzBF,EAAAA,EAAAA,KAACmQ,EAAAA,EAAS,CACN3I,MAAwC,aAAjC6E,EAAOY,OAAOsL,eACrB3R,MAAOyF,EAAOW,OAAOuL,eACrB3Q,SAAUyE,EAAO+D,aACjB7L,KAAK,iBACLyD,KAAK,OACLqI,GAAI,CAACC,EAAG,EAAGC,SAAU,QAASC,KAAK,QAAQtL,GAAG,iBAC9CuL,MAAM,qBAAqBxL,QAAQ,WAAW9E,UAAU,mBAIpEH,EAAAA,EAAAA,KAAA,OAAKuD,QAAS4J,EAAahN,UAAU,UAASD,SAAC,yBAQrC,gBAArBoI,EAAUb,SACPpF,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,cAAaD,SAAA,EACxBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,aAAYD,UACvBF,EAAAA,EAAAA,KAAA,OACIuD,QAASA,IAAMgF,EAAa,CAACd,OAAQ,GAAIe,MAAM,IAC/ClG,IAAI,uBACJC,IAAI,QAIZvC,EAAAA,EAAAA,KAAA,OAAKG,UAAU,QAAOD,SAAC,wBAEvBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,aAAYD,SAAC,yBAE5BmC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,iBAAgBD,SAAA,EAE3BmC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,aAAYD,SAAA,EACvBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAcD,UACzBmC,EAAAA,EAAAA,MAACsO,EAAAA,EAAW,CAACN,GAAI,CAACC,EAAG,EAAGC,SAAU,QAASC,KAAK,QAAQrQ,UAAU,YAAWD,SAAA,EACzEF,EAAAA,EAAAA,KAAC4Q,EAAAA,EAAU,CAAC1L,GAAG,0BAAyBhF,SAAC,gBACzCmC,EAAAA,EAAAA,MAACwO,EAAAA,EAAM,CACHrJ,MAAiC,aAA1B6E,EAAOY,OAAO4C,QACrBiB,QAAQ,0BACR5L,GAAG,oBACH0B,MAAOyF,EAAOW,OAAO6C,QACrBY,MAAM,aACNlM,KAAK,UACLqD,SAAUyE,EAAO+D,aAAalQ,SAAA,EAE9BF,EAAAA,EAAAA,KAAC+Q,EAAAA,EAAQ,CAACnK,MAAM,WAAU1G,SAAC,cAC3BF,EAAAA,EAAAA,KAAC+Q,EAAAA,EAAQ,CAACnK,MAAM,YAAW1G,SAAC,eAC5BF,EAAAA,EAAAA,KAAC+Q,EAAAA,EAAQ,CAACnK,MAAM,UAAS1G,SAAC,qBAKtCF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAcD,UACzBF,EAAAA,EAAAA,KAACmQ,EAAAA,EAAS,CACN3I,MAAsC,aAA/B6E,EAAOY,OAAOuL,aACrB5R,MAAOyF,EAAOW,OAAOwL,aACrB5Q,SAAUyE,EAAO+D,aACjB7L,KAAK,eACLyD,KAAK,OACLqI,GAAI,CAACC,EAAG,EAAGC,SAAU,QAASC,KAAK,QAAQtL,GAAG,iBAC9CuL,MAAM,8BAA8BxL,QAAQ,WAC5C9E,UAAU,oBAItBkC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,aAAYD,SAAA,EACvBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAcD,UACzBF,EAAAA,EAAAA,KAACmQ,EAAAA,EAAS,CACN3I,MAAqC,aAA9B6E,EAAOY,OAAOkL,YACrBvR,MAAOyF,EAAOW,OAAOmL,YACrBvQ,SAAUyE,EAAO+D,aACjB7L,KAAK,cACLyD,KAAK,OACLqI,GAAI,CAACC,EAAG,EAAGC,SAAU,QAASC,KAAK,QAAQtL,GAAG,iBAC9CuL,MAAM,iBAAiBxL,QAAQ,WAAW9E,UAAU,iBAE5DH,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAcD,UACzBF,EAAAA,EAAAA,KAACmQ,EAAAA,EAAS,CACN3I,MAAsC,aAA/B6E,EAAOY,OAAOmL,aACrBxR,MAAOyF,EAAOW,OAAOoL,aACrBxQ,SAAUyE,EAAO+D,aACjB7L,KAAK,eACLyD,KAAK,OACLqI,GAAI,CAACC,EAAG,EAAGC,SAAU,QAASC,KAAK,QAAQtL,GAAG,iBAC9CuL,MAAM,YAAYxL,QAAQ,WAAW9E,UAAU,oBAI3DkC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,aAAYD,SAAA,EACvBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAcD,UACzBF,EAAAA,EAAAA,KAACmQ,EAAAA,EAAS,CACN3I,MAAuC,aAAhC6E,EAAOY,OAAOoL,cACrBzR,MAAOyF,EAAOW,OAAOqL,cACrBzQ,SAAUyE,EAAO+D,aACjB7L,KAAK,gBACLyD,KAAK,OACLqI,GAAI,CAACC,EAAG,EAAGC,SAAU,QAASC,KAAK,QAAQtL,GAAG,iBAC9CuL,MAAM,aAAaxL,QAAQ,WAAW9E,UAAU,iBAExDH,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAcD,UACzBF,EAAAA,EAAAA,KAACmQ,EAAAA,EAAS,CACN3I,MAA4C,aAArC6E,EAAOY,OAAOqL,mBACrB1R,MAAOyF,EAAOW,OAAOsL,mBACrB1Q,SAAUyE,EAAO+D,aACjB7L,KAAK,qBACLyD,KAAK,OACLqI,GAAI,CAACC,EAAG,EAAGC,SAAU,QAASC,KAAK,QAAQtL,GAAG,iBAC9CuL,MAAM,0BAA0BxL,QAAQ,WAAW9E,UAAU,oBAIzEH,EAAAA,EAAAA,KAAA,OAAKG,UAAU,aAAYD,UACvBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAcD,UACzBF,EAAAA,EAAAA,KAACmQ,EAAAA,EAAS,CACN3I,MAAwC,aAAjC6E,EAAOY,OAAOsL,eACrB3R,MAAOyF,EAAOW,OAAOuL,eACrB3Q,SAAUyE,EAAO+D,aACjB7L,KAAK,iBACLyD,KAAK,OACLqI,GAAI,CAACC,EAAG,EAAGC,SAAU,QAASC,KAAK,QAAQtL,GAAG,iBAC9CuL,MAAM,qBAAqBxL,QAAQ,WAAW9E,UAAU,mBAIpEH,EAAAA,EAAAA,KAAA,OAAKuD,QAAS4J,EAAahN,UAAU,UAASD,SAAC,6BAavEF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,SAAQD,UACnBF,EAAAA,EAAAA,KAAA,OAAKuD,QAASA,KACVgF,EAAa,CAACC,MAAM,EAAMf,OAAQ,gBACnCtH,UAAU,iBAAgBD,SAAC,sBAKlCmC,EAAAA,EAAAA,MAAA,SAAAnC,SAAA,EACIF,EAAAA,EAAAA,KAAA,SAAAE,UACAmC,EAAAA,EAAAA,MAAA,MAAAnC,SAAA,EACIF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,YACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,UACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,gBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,oBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,aACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,cACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,sBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,wBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,eACJF,EAAAA,EAAAA,KAAA,eAIJA,EAAAA,EAAAA,KAAA,SAAAE,SACC0O,QAIL5O,EAAAA,EAAAA,KAAA,OAAKG,UAAU,aAAYD,SACtBgJ,EAAYnG,OAAS,KAAM/C,EAAAA,EAAAA,KAAC+T,IAAa,CACtCC,WAAW,MACXC,eAAejU,EAAAA,EAAAA,KAAA,OAAKsC,IAAI,0BAA0BC,IAAI,KACtD2R,WAAWlU,EAAAA,EAAAA,KAAA,OAAKsC,IAAI,0BAA0BC,IAAI,KAClD2J,UAAWA,EACXiI,aA3bOtP,IAAiB,IAAhB,SAACgN,GAAShN,EAC1BmH,EAAc6F,GAEduC,YAAW,KAAO,IAADC,EACF,QAAXA,EAAA1L,EAAI2L,eAAO,IAAAD,GAAXA,EAAaE,eAAe,CAACC,SAAU,aACxC,MAubKC,mBAAoB,kBACpBC,sBAAuB,eACvBC,kBAAmB,WACnBC,mBAAoB,qBACpBC,gBAAiB,qBAChB,SChXjB,EAxGgB8D,KACZ,MAAO/P,EAAeC,IAAoBtI,EAAAA,EAAAA,UAAS,IACnD,IAAIqG,GAAQ7C,EAAAA,EAAAA,YAAWC,GACvB,MAAM2E,GAAMD,EAAAA,EAAAA,QAAO,OACZQ,EAAaC,IAAkB5I,EAAAA,EAAAA,UAAS,KAExCwL,EAAYC,IAAiBzL,EAAAA,EAAAA,UAAS,GACvC0L,EAFY,IAEGF,GAErBjL,EAAAA,EAAAA,YAAU,KACNC,EAAAA,EAAMC,IAAI,GAADL,OAAIiG,EAAM3E,IAAG,uBAAuB,CACzCoL,QAAS,CACLqI,cAAc,SAAD/U,OAAWC,aAAaC,QAAQ,aAElDI,MAAMC,IACLiI,EAAejI,EAASC,WAE7B,IAEH,MAAMyN,EAAc1F,EAAY2F,MAAM5C,EAAcA,EAdlC,KAeb6C,QAAQ7L,IACL,MAAM8L,EAAanG,EAAcoG,WAAWC,cAAcC,QAAQ,OAAQ,IAAIA,QAAQ,MAAO,IACvFC,EAAclM,EAAKgL,OAAOpH,MAAMmI,WAAWC,cAAcC,QAAQ,OAAQ,IAAIA,QAAQ,MAAO,IAClG,MAAsB,KAAfH,GAAqBI,EAAYC,SAASL,MAClD/L,KAAI,CAACC,EAAMyB,KACPrC,EAAAA,EAAAA,MAAA,MAAAnC,SAAA,EACHF,EAAAA,EAAAA,KAAA,MAAAE,SAAKwE,EAAM,KACX1E,EAAAA,EAAAA,KAAA,MAAIG,UAAU,iBAAgBD,UAC1BmC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,cAAaD,SAAA,EACxBmC,EAAAA,EAAAA,MAAA,OACIlC,UAAU,OAAMD,SAAA,CAAE+C,EAAKgL,QAAUhL,EAAKgL,OAAOzB,WAAW,IAAEvJ,EAAKgL,QAAUhL,EAAKgL,OAAOxB,cACzFzM,EAAAA,EAAAA,KAAA,OAAKG,UAAU,QAAOD,SACjB+C,EAAKgL,QAAUhL,EAAKgL,OAAOpH,cAIxC7G,EAAAA,EAAAA,KAAA,MAAAE,SACK+C,EAAKgL,QAAUhL,EAAKgL,OAAOvK,cAEhC1D,EAAAA,EAAAA,KAAA,MAAAE,SACK+C,EAAK2V,aAEV5Y,EAAAA,EAAAA,KAAA,MAAAE,SACK+C,EAAK4V,SAlBEnU,KAuBdwH,EAAYC,KAAKC,KAAKlD,EAAYnG,OA3CtB,KAqDlB,OAAOV,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,oBAAmBD,SAAA,EACrCF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,SAAQD,UACnBmC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,aAAYD,SAAA,EACvBF,EAAAA,EAAAA,KAAA,OAAKsC,IAAI,4BAA4BC,IAAI,MACzCvC,EAAAA,EAAAA,KAAA,SAAO4H,SAAWC,GAAMgB,EAAiBhB,EAAEC,OAAOlB,OAAQmB,YAAY,yBAAyBC,KAAK,eAI5GhI,EAAAA,EAAAA,KAAA,OAAKG,UAAU,gBAAeD,UAC1BmC,EAAAA,EAAAA,MAAA,SAAAnC,SAAA,EACIF,EAAAA,EAAAA,KAAA,SAAAE,UACAmC,EAAAA,EAAAA,MAAA,MAAAnC,SAAA,EACIF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,YACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,eACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,sBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,cACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,eAKRF,EAAAA,EAAAA,KAAA,SAAAE,SACC0O,UAMT5O,EAAAA,EAAAA,KAAA,OAAKG,UAAU,aAAYD,SACtBgJ,EAAYnG,OAAS,KAAM/C,EAAAA,EAAAA,KAAC+T,IAAa,CACtCC,WAAW,MACXC,eAAejU,EAAAA,EAAAA,KAAA,OAAKsC,IAAI,0BAA0BC,IAAI,KACtD2R,WAAWlU,EAAAA,EAAAA,KAAA,OAAKsC,IAAI,0BAA0BC,IAAI,KAClD2J,UAAWA,EACXiI,aA1COtP,IAAiB,IAAhB,SAACgN,GAAShN,EAC1BmH,EAAc6F,GAEduC,YAAW,KAAO,IAADC,EACF,QAAXA,EAAA1L,EAAI2L,eAAO,IAAAD,GAAXA,EAAaE,eAAe,CAACC,SAAU,aACxC,MAsCKC,mBAAoB,kBACpBC,sBAAuB,eACvBC,kBAAmB,WACnBC,mBAAoB,qBACpBC,gBAAiB,qBAChB,SCiKjB,EAhQeiE,KACX,IAAIlS,GAAQ7C,EAAAA,EAAAA,YAAWC,GACvB,MAAOsE,EAAWC,IAAgBhI,EAAAA,EAAAA,UAAS,CAACiI,MAAM,EAAOf,QAAQ,IAC3DgB,GAAUC,EAAAA,EAAAA,QAAO,OAChBc,EAAQC,IAAalJ,EAAAA,EAAAA,WAAS,IAE9BwY,EAAOC,IAAYzY,EAAAA,EAAAA,UAAS,CAAC,IAC7B0Y,EAAOC,IAAY3Y,EAAAA,EAAAA,UAAS,KAC5B4Y,EAAYC,IAAiB7Y,EAAAA,EAAAA,UAAS,IAEtC2I,EAAaC,IAAkB5I,EAAAA,EAAAA,UAAS,KACxC8Y,EAAYC,IAAiB/Y,EAAAA,EAAAA,UAAS,KACtCgZ,EAAaC,IAAkBjZ,EAAAA,EAAAA,UAAS,KACxCkZ,EAAMC,IAAWnZ,EAAAA,EAAAA,UAAS,UAE3BoZ,EAAe,GACfC,EAAaX,EAAMlW,OAEzB,GAAI6W,GAAc,EACdD,EAAaE,QAAQZ,EAAMjW,KAAI,CAACmQ,EAAGzO,IAAUA,EAAQ,SAClD,CACHiV,EAAaE,KAAK,GAEdV,EAAa,GACbQ,EAAaE,KAAK,OAGtB,IAAK,IAAI9H,EAAI5F,KAAK2N,IAAI,EAAGX,EAAa,GAAIpH,GAAK5F,KAAKiF,IAAIwI,EAAa,EAAGT,EAAa,GAAIpH,IACrF4H,EAAaE,KAAK9H,GAGlBoH,EAAaS,EAAa,GAC1BD,EAAaE,KAAK,OAGtBF,EAAaE,KAAKD,EACtB,EAGA9Y,EAAAA,EAAAA,YAAU,KACNiZ,MAED,IAIH,MAAMA,EAAU,WAA2B,IAA1B9X,EAAG+X,UAAAjX,OAAA,QAAAkX,IAAAD,UAAA,GAAAA,UAAA,GAAG,KAAME,EAAIF,UAAAjX,OAAA,QAAAkX,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAChCvQ,GAAU,GACV,MAAM0Q,EAAOlY,GAAS,GAAAtB,OAAMiG,EAAM3E,IAAG,2BAAAtB,OAA0BuZ,GAC/DnZ,EAAAA,EAAMC,IAAImZ,EAAM,CACZ9M,QAAS,CACL,cAAgB,SAAD1M,OAAWC,aAAaC,QAAQ,aAEpDI,MAAMC,IACLiI,EAAejI,EAASC,KAAKiZ,SAC7BpB,EAAS9X,EAASC,KAAK4X,OACvBG,EAAShY,EAASC,KAAK4X,MAAMsB,OAC7BjB,EAAcc,MACf5M,SAAQ,KACP7D,GAAU,KAGlB,EAEA,OAAOpH,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,mBAAkBD,SAAA,EACpCF,EAAAA,EAAAA,KAAC8P,EAAAA,EAAa,CACVC,GAAIzH,EAAUE,KACdC,QAASA,EACTuH,QAAS,IACTC,WAAW,QACXC,eAAa,EAAAhQ,UAEbF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,aAAYD,UACvBmC,EAAAA,EAAAA,MAAA,OAAKsG,IAAKF,EAAStI,UAAU,aAAYD,SAAA,CACf,oBAArBoI,EAAUb,SACPpF,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,kBAAiBD,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,aAAYD,UACvBF,EAAAA,EAAAA,KAAA,OACIuD,QAASA,IAAMgF,EAAa,CAACd,OAAQ,GAAIe,MAAM,IAC/ClG,IAAI,uBACJC,IAAI,QAGZvC,EAAAA,EAAAA,KAAA,OAAKG,UAAU,QAAOD,SAAC,2BAGvBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,cAAaD,UACxBmC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,OAAMD,SAAA,EACjBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,QAAOD,SAAC,qBACvBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,OAAMD,SAAC,sBAKhB,kBAArBoI,EAAUb,SACPpF,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,gBAAeD,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,aAAYD,UACvBF,EAAAA,EAAAA,KAAA,OACIuD,QAASA,IAAMgF,EAAa,CAACd,OAAQ,GAAIe,MAAM,IAC/ClG,IAAI,uBACJC,IAAI,QAGZvC,EAAAA,EAAAA,KAAA,OAAKG,UAAU,QAAOD,SAAC,iCAGvBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,WAAUD,UACrBmC,EAAAA,EAAAA,MAAA,UAAQkC,KAAK,GAAGW,GAAG,GAAEhF,SAAA,EACjBF,EAAAA,EAAAA,KAAA,UAAQ4G,MAAM,MACd5G,EAAAA,EAAAA,KAAA,UAAQ4G,MAAM,GAAE1G,SAAC,mBACjBF,EAAAA,EAAAA,KAAA,UAAQ4G,MAAM,GAAE1G,SAAC,eACjBF,EAAAA,EAAAA,KAAA,UAAQ4G,MAAM,GAAE1G,SAAC,uBAGzBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,cAAaD,SAAC,0BASjDmC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,SAAQD,SAAA,EACnBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,gBAIfH,EAAAA,EAAAA,KAAA,OAAKG,UAAU,mBAiBnBH,EAAAA,EAAAA,KAAA,OAAKG,UAAU,gBAAeD,SAEtBsJ,GAASxJ,EAAAA,EAAAA,KAACoI,EAAW,KACjB/F,EAAAA,EAAAA,MAAA,SAAAnC,SAAA,EACIF,EAAAA,EAAAA,KAAA,SAAAE,UACAmC,EAAAA,EAAAA,MAAA,MAAAnC,SAAA,EACIF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,YACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,WACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,eACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,4BACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,WACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,oBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,0BACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,+BAIRF,EAAAA,EAAAA,KAAA,SAAAE,SACCgJ,EAAYlG,KAAI,CAACC,EAAMyB,KACbrC,EAAAA,EAAAA,MAAA,MAAAnC,SAAA,EACHF,EAAAA,EAAAA,KAAA,MAAAE,SAAKwE,EAAQ,KACb1E,EAAAA,EAAAA,KAAA,MAAAE,UACImC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,cAAaD,SAAA,EACxBmC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,OAAMD,SAAA,CAChB+C,EAAKqX,OAAO9N,WACZvJ,EAAKqX,OAAO7N,cAEjBzM,EAAAA,EAAAA,KAAA,OAAKG,UAAU,QAAOD,SACjB+C,EAAKqX,OAAOzT,cAIzB7G,EAAAA,EAAAA,KAAA,MAAAE,UACIF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,cAAaD,SACvB+C,EAAKgL,SAAU5L,EAAAA,EAAAA,MAAApC,EAAAA,SAAA,CAAAC,SAAA,EACZmC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,OAAMD,SAAA,CAChB+C,EAAKgL,OAAOzB,WACZvJ,EAAKgL,OAAOxB,cAEjBzM,EAAAA,EAAAA,KAAA,OAAKG,UAAU,QAAOD,SACjB+C,EAAKgL,OAAOpH,gBAK7B7G,EAAAA,EAAAA,KAAA,MAAAE,SACK+C,EAAKsX,cAEVva,EAAAA,EAAAA,KAAA,MAAAE,SACK+C,EAAKuX,aAAajL,aAAanK,EAAAA,GAAQf,UAAUE,QAEtDlC,EAAAA,EAAAA,MAAA,MAAAnC,SAAA,CACK+C,EAAKwX,MAAM,YAEhBza,EAAAA,EAAAA,KAAA,MAAAE,UACIF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,OAAMD,UACjBF,EAAAA,EAAAA,KAAA,OAAKuD,QAASA,KACViW,EAAevW,GACfsF,EAAa,CAACC,MAAM,EAAMf,OAAQ,qBACnCnF,IAAI,8BAA8BC,IAAI,UAGjDvC,EAAAA,EAAAA,KAAA,MAAAE,UACIF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,OAAMD,UACjBF,EAAAA,EAAAA,KAAA,OAAKuD,QAASA,KACVgF,EAAa,CAACC,MAAM,EAAMf,OAAQ,mBACnCnF,IAAI,4BAA4BC,IAAI,WA/CnCmC,aA0DpCrC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,aAAYD,SAAA,EACvBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,OAAMD,UACjBF,EAAAA,EAAAA,KAAA,OAAKuD,QAASA,KACN4V,EAAa,GACbY,EAAQhB,EAAM2B,SAAUvB,EAAa,IAE1C7W,IAAI,0BAA0BC,IAAI,WAGxCoX,EAAa3W,KAAI,CAACC,EAAMyB,KACrB1E,EAAAA,EAAAA,KAAA,OACKuD,QAASA,KACQ,QAATN,GACA8W,EAAQ,KAAM9W,IAGtB9C,UAAS,SAAAQ,OAAWwY,IAAelW,EAAO,SAAW,GAAE,KACvD2I,MAAO,CAAC+O,OAAiB,QAAT1X,EAAiB,UAAY,WAAW/C,SACxD+C,GARKyB,MAYd1E,EAAAA,EAAAA,KAAA,OAAKG,UAAU,OAAOoD,QAASA,KACvB4V,EAAaS,GACbG,EAAQhB,EAAM6B,KAAMzB,EAAa,IAEvCjZ,UACEF,EAAAA,EAAAA,KAAA,OAAKsC,IAAI,0BAA0BC,IAAI,kBClDvD,EA1MiBsY,KACb,IAAIjU,GAAQ7C,EAAAA,EAAAA,YAAWC,GACvB,MAAO4G,EAAUC,IAAetK,EAAAA,EAAAA,UAAS,KAClCuK,EAAWC,IAAgBxK,EAAAA,EAAAA,UAAS,KACpCua,EAAYC,IAAiBxa,EAAAA,EAAAA,UAAS,KAEtC0W,EAAMC,IAAW3W,EAAAA,EAAAA,WAAS,IAC1B4W,EAAQC,IAAa7W,EAAAA,EAAAA,UAAS,KAC9BgP,EAAcoH,IAAmBpW,EAAAA,EAAAA,UACpC,CACIqW,QAAS,GACTC,QAAS,GACTC,QAAS,MAWjBhW,EAAAA,EAAAA,YAAU,KAPNC,EAAAA,EAAMC,IAAI,GAADL,OAAIiG,EAAM3E,IAAG,uBAAuB,CACzCoL,QAAS,CAAC,cAAgB,SAAD1M,OAAWC,aAAaC,QAAQ,aAC1DI,MAAMC,IACL2J,EAAY3J,EAASC,WAM1B,IAEH,MAAMmW,EAAY7P,IACd,MAAM,QAACmP,EAAO,QAAEC,EAAO,QAAEC,GAAWvH,EAIpC,KAFwBqH,EAAQ1P,QAAU2P,EAAQ3P,QAAU4P,EAAQ5P,QAIhE,YADAQ,MAAM,iCAIV,MAAM6P,EAAmB,CACrBC,GAAI,CACAjT,KAAMqS,EAAQ1P,QAElBuQ,GAAI,CACAlT,KAAMsS,EAAQ3P,QAElBwQ,GAAI,CACAnT,KAAMuS,EAAQ5P,SAIP,QAAXO,GACA1G,EAAAA,EAAMsG,KAAK,GAAD1G,OAAIiG,EAAM3E,IAAG,wBAAwB,CAAC+Y,KAAMF,EAAYvL,aAAcgI,GAC5E,CACIlK,QAAS,CAAC,cAAgB,SAAD1M,OAAWC,aAAaC,QAAQ,aAE5DI,MAAMC,IACHyV,EAAgB,CAACC,QAAS,GAAIC,QAAS,GAAIC,QAAS,KACpD/V,EAAAA,EAAMC,IAAI,GAADL,OAAIiG,EAAM3E,IAAG,uBAAAtB,OAAsBma,EAAU,KAAK,CACvDzN,QAAS,CACL,cAAgB,SAAD1M,OAAWC,aAAaC,QAAQ,aAEpDI,MAAMC,IACL6J,EAAa7J,EAASC,YAI7BoG,OAAOC,IACJU,QAAQV,MAAM,2BAA4BA,MAIvC,SAAXC,GACA1G,EAAAA,EAAM4W,IAAI,GAADhX,OAAIiG,EAAM3E,IAAG,wBAAAtB,OAAuBwW,EAAM,KAAK,CAAC5H,aAAcgI,GACnE,CACIlK,QAAS,CAAC,cAAgB,SAAD1M,OAAWC,aAAaC,QAAQ,aAE5DI,MAAMC,IACHyV,EAAgB,CAACC,QAAS,GAAIC,QAAS,GAAIC,QAAS,KACpDI,GAAQ,GACRnW,EAAAA,EAAMC,IAAI,GAADL,OAAIiG,EAAM3E,IAAG,uBAAAtB,OAAsBma,EAAU,KAAK,CACvDzN,QAAS,CACL,cAAgB,SAAD1M,OAAWC,aAAaC,QAAQ,aAEpDI,MAAMC,IACL6J,EAAa7J,EAASC,YAI7BoG,OAAOC,IACJU,QAAQV,MAAM,+BAAgCA,OA0C9D,OAAOnF,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,oBAAmBD,SAAA,EACrCF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,SAAQD,UACnBmC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,eAAcD,SAAA,EACzBF,EAAAA,EAAAA,KAAA,SAAO0Q,QAAQ,GAAExQ,SAAC,gCAClBmC,EAAAA,EAAAA,MAAA,UAAQuF,SAfCC,IACjBkT,EAAclT,EAAEC,OAAOlB,OACvB7F,EAAAA,EAAMC,IAAI,GAADL,OAAIiG,EAAM3E,IAAG,uBAAAtB,OAAsBkH,EAAEC,OAAOlB,MAAK,KAAK,CAC3DyG,QAAS,CACL,cAAgB,SAAD1M,OAAWC,aAAaC,QAAQ,aAEpDI,MAAMC,IACL6J,EAAa7J,EAASC,UAQaoD,KAAK,YAC5BW,GAAG,YAAWhF,SAAA,EAClBF,EAAAA,EAAAA,KAAA,UAAQ4G,MAAM,KACbgE,EAAS5H,KAAKiY,IACXjb,EAAAA,EAAAA,KAAA,UAAuB4G,MAAOqU,EAAM/V,GAAGhF,SAClC+a,EAAM1L,aAAanK,EAAAA,GAAQf,UAAUE,MAD7B0W,EAAM/V,UAM3BlF,EAAAA,EAAAA,KAAA,SACI4G,MAAO2I,EAAaqH,QACpBhP,SAAWC,GACP8O,GAAezQ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAGqJ,GAAY,IAAEqH,QAAS/O,EAAEC,OAAOlB,SAExDmB,YAAY,yBACZC,KAAK,UAGThI,EAAAA,EAAAA,KAAA,SACI4G,MAAO2I,EAAauH,QACpBlP,SAAWC,GACP8O,GAAezQ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAGqJ,GAAY,IAAEuH,QAASjP,EAAEC,OAAOlB,SAExDmB,YAAY,mBACZC,KAAK,UAGThI,EAAAA,EAAAA,KAAA,SACI4G,MAAO2I,EAAasH,QACpBjP,SAAWC,GACP8O,GAAezQ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAGqJ,GAAY,IAAEsH,QAAShP,EAAEC,OAAOlB,SAExDmB,YAAY,wHACZC,KAAK,SAGRiP,GAAOjX,EAAAA,EAAAA,KAAA,OAAKuD,QAASA,IAAM+T,EAAS,QAASnX,UAAU,YAAWD,UAC/DF,EAAAA,EAAAA,KAAA,OAAKsC,IAAI,+BAA+BC,IAAI,QACvCvC,EAAAA,EAAAA,KAAA,OAAKuD,QAASA,IAAM+T,EAAS,OAAQnX,UAAU,YAAWD,UAC/DF,EAAAA,EAAAA,KAAA,OAAKsC,IAAI,yBAAyBC,IAAI,aAKlDvC,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAcD,UACzBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,cAAaD,SAEpB4K,EAAU9H,KAAI,CAAC4U,EAAOlT,KAClBrC,EAAAA,EAAAA,MAAA,OAAiBlC,UAAU,aAAYD,SAAA,EACnCF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,OAAMD,SAAE0X,EAAMrI,aAAanK,EAAAA,GAAQf,UAAUE,QAC5DlC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,SAAQD,SAAA,EACnBF,EAAAA,EAAAA,KAAA,OAAKuD,QAASA,IA7EtBqU,KAChBV,GAAQ,GACRE,EAAUQ,EAAM1S,IAChByR,EAAgB,CACZC,QAASgB,EAAMrI,aAAiB,GAAEhL,MAAQ,GAC1CsS,QAASe,EAAMrI,aAAiB,GAAEhL,MAAQ,GAC1CuS,QAASc,EAAMrI,aAAiB,GAAEhL,MAAQ,MAuEFsT,CAAWD,GAAQzX,UAAU,MAAKD,UAClDF,EAAAA,EAAAA,KAAA,OAAKsC,IAAI,gCAAgCC,IAAI,QAGjDvC,EAAAA,EAAAA,KAAA,OAAKuD,QAASA,KAAMuU,OAjG9B5S,EAiGuC0S,EAAM1S,QAhG3DnE,EAAAA,EAAMmV,OAAO,GAADvV,OAAIiG,EAAM3E,IAAG,wBAAAtB,OAAuBuE,EAAE,KAAK,CACnDmI,QAAS,CAAC,cAAgB,SAAD1M,OAAWC,aAAaC,QAAQ,aAC1DI,MAAMC,IACLyV,EAAgB,CAACC,QAAS,GAAIC,QAAS,GAAIC,QAAS,KACpD/V,EAAAA,EAAMC,IAAI,GAADL,OAAIiG,EAAM3E,IAAG,uBAAAtB,OAAsBma,EAAU,KAAK,CACvDzN,QAAS,CACL,cAAgB,SAAD1M,OAAWC,aAAaC,QAAQ,aAEpDI,MAAMC,IACL6J,EAAa7J,EAASC,SAE1B+V,GAAQ,MAZEhS,OAiGkD/E,UAAU,MAAKD,UACnDF,EAAAA,EAAAA,KAAA,OAAKsC,IAAI,4BAA4BC,IAAI,YAR3CmC,aC3DlC,EA5HgBwW,KACZ,IAAItU,GAAQ7C,EAAAA,EAAAA,YAAWC,GACvB,MAAM2E,GAAMD,EAAAA,EAAAA,QAAO,OACZQ,EAAaC,IAAkB5I,EAAAA,EAAAA,UAAS,KACxCqI,EAAeC,IAAoBtI,EAAAA,EAAAA,UAAS,KAE5CwL,EAAYC,IAAiBzL,EAAAA,EAAAA,UAAS,GACvC0L,EAFY,IAEGF,GACdsN,EAAYC,IAAiB/Y,EAAAA,EAAAA,UAAS,IAEvC2L,EAAYC,KAAKC,KAAKlD,EAAYnG,OALtB,MAelBjC,EAAAA,EAAAA,YAAU,KACNC,EAAAA,EAAMC,IAAI,GAADL,OAAIiG,EAAM3E,IAAG,uBAAuB,CACzCoL,QAAS,CACL,cAAgB,SAAD1M,OAAWC,aAAaC,QAAQ,aAEpDI,MAAMC,IACLiI,EAAejI,EAASC,KAAKga,SAC7B7B,EAAcpY,EAASC,KAAKkY,iBAEjC,IAEH,MAAMzK,EAAc1F,EAAY2F,MAAM5C,EAAcA,EA1BlC,KA2Bb6C,QAAQ7L,IACL,MAAM8L,EAAanG,EAAcoG,WAAWC,cAAcC,QAAQ,OAAQ,IAAIA,QAAQ,MAAO,IACvFC,EAAclM,EAAKmY,WAAWpM,WAAWC,cAAcC,QAAQ,OAAQ,IAAIA,QAAQ,MAAO,IAChG,MAAsB,KAAfH,GAAqBI,EAAYC,SAASL,MAClD/L,KAAI,CAACC,EAAMyB,KACHrC,EAAAA,EAAAA,MAAA,MAAAnC,SAAA,EACHF,EAAAA,EAAAA,KAAA,MAAAE,SAAKwE,EAAQ,KAEb1E,EAAAA,EAAAA,KAAA,MAAAE,SACK+C,EAAKmY,cAGVpb,EAAAA,EAAAA,KAAA,MAAAE,SACK+C,EAAKoY,UAGVrb,EAAAA,EAAAA,KAAA,MAAAE,SACK+C,EAAKwE,UAEVzH,EAAAA,EAAAA,KAAA,MAAAE,SACK+C,EAAKqY,oBAGVtb,EAAAA,EAAAA,KAAA,MAAAE,SACK+C,EAAKsY,cAEVvb,EAAAA,EAAAA,KAAA,MAAAE,SACK+C,EAAKqG,WAtBE5E,KA2BxB,OAAOrC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,oBAAmBD,SAAA,EACrCmC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,SAAQD,SAAA,EACnBmC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,aAAYD,SAAA,EACvBF,EAAAA,EAAAA,KAAA,OAAKsC,IAAI,4BAA4BC,IAAI,MACzCvC,EAAAA,EAAAA,KAAA,SAAO4H,SAAWC,GAAMgB,EAAiBhB,EAAEC,OAAOlB,OAAQmB,YAAY,aAAaC,KAAK,aAE5FhI,EAAAA,EAAAA,KAAA,OAAKG,UAAU,aAAYD,SACtBmZ,EAAWtW,OAAS,GAAKsW,EAAWrW,KAAI,CAACC,EAAMyB,KAC5CrC,EAAAA,EAAAA,MAAA,OAAiBlC,UAAU,gBAAeD,SAAA,EACtCmC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,OAAMD,SAAA,CACA,aAAhB+C,EAAKwE,QAAyB,cACd,YAAhBxE,EAAKwE,QAAwB,aACb,cAAhBxE,EAAKwE,QAA0B,eACf,aAAhBxE,EAAKwE,QAAyB,qBAGnCzH,EAAAA,EAAAA,KAAA,OAAKG,UAAU,MAAKD,SAAE+C,EAAKuY,UARrB9W,WActB1E,EAAAA,EAAAA,KAAA,OAAKG,UAAU,gBAAeD,UAC1BmC,EAAAA,EAAAA,MAAA,SAAAnC,SAAA,EACIF,EAAAA,EAAAA,KAAA,SAAAE,UACAmC,EAAAA,EAAAA,MAAA,MAAAnC,SAAA,EACIF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,YACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,eACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,YACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,YACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,iBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,mBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,gBAKRF,EAAAA,EAAAA,KAAA,SAAAE,SACC0O,UAKT5O,EAAAA,EAAAA,KAAA,OAAKG,UAAU,aAAYD,SACtBgJ,EAAYnG,OAAS,KAAM/C,EAAAA,EAAAA,KAAC+T,IAAa,CACtCC,WAAW,MACXC,eAAejU,EAAAA,EAAAA,KAAA,OAAKsC,IAAI,0BAA0BC,IAAI,KACtD2R,WAAWlU,EAAAA,EAAAA,KAAA,OAAKsC,IAAI,0BAA0BC,IAAI,KAClD2J,UAAWA,EACXiI,aArGOtP,IAAiB,IAAhB,SAACgN,GAAShN,EAC1BmH,EAAc6F,GAEduC,YAAW,KAAO,IAADC,EACF,QAAXA,EAAA1L,EAAI2L,eAAO,IAAAD,GAAXA,EAAaE,eAAe,CAACC,SAAU,aACxC,MAiGKC,mBAAoB,kBACpBC,sBAAuB,eACvBC,kBAAmB,WACnBC,mBAAoB,qBACpBC,gBAAiB,qBAChB,SCsCjB,EA7JqB4G,KACjB,IAAI7U,GAAQ7C,EAAAA,EAAAA,YAAWC,GACvB,MAAO+S,EAAYC,IAAiBzW,EAAAA,EAAAA,UAAS,KACtC0W,EAAMC,IAAW3W,EAAAA,EAAAA,WAAS,IAC1B4W,EAAQC,IAAa7W,EAAAA,EAAAA,UAAS,KAC9BgP,EAAcoH,IAAmBpW,EAAAA,EAAAA,UACpC,CACIqW,QAAS,GACTC,QAAS,GACTC,QAAS,KAGXO,EAAUA,KACZtW,EAAAA,EAAMC,IAAI,GAADL,OAAIiG,EAAM3E,IAAG,2BAA0B,CAC5CoL,QAAS,CAAC,cAAgB,SAAD1M,OAAWC,aAAaC,QAAQ,aAC1DI,MAAMC,IACL8V,EAAc9V,EAASC,WAI/BL,EAAAA,EAAAA,YAAU,KACNuW,MACD,IAEH,MAAMC,EAAY7P,IACd,MAAM,QAACmP,EAAO,QAAEC,EAAO,QAAEC,GAAWvH,EAIpC,KAFwBqH,EAAQ1P,QAAU2P,EAAQ3P,QAAU4P,EAAQ5P,QAIhE,YADAQ,MAAM,iCAIV,MAAM6P,EAAmB,CACrBC,GAAI,CACAjT,KAAMqS,EAAQ1P,QAElBuQ,GAAI,CACAlT,KAAMsS,EAAQ3P,QAElBwQ,GAAI,CACAnT,KAAMuS,EAAQ5P,SAIP,QAAXO,GACA1G,EAAAA,EAAMsG,KAAK,GAAD1G,OAAIiG,EAAM3E,IAAG,2BAA2B,CAACsN,aAAcgI,GAC7D,CACIlK,QAAS,CAAC,cAAgB,SAAD1M,OAAWC,aAAaC,QAAQ,aAE5DI,MAAMC,IACHyV,EAAgB,CAACC,QAAS,GAAIC,QAAS,GAAIC,QAAS,KACpDO,OAEH9P,OAAOC,IACJU,QAAQV,MAAM,2BAA4BA,MAIvC,SAAXC,GACA1G,EAAAA,EAAM4W,IAAI,GAADhX,OAAIiG,EAAM3E,IAAG,2BAAAtB,OAA0BwW,EAAM,KAAK,CAAC5H,aAAcgI,GACtE,CACIlK,QAAS,CAAC,cAAgB,SAAD1M,OAAWC,aAAaC,QAAQ,aAE5DI,MAAMC,IACHyV,EAAgB,CAACC,QAAS,GAAIC,QAAS,GAAIC,QAAS,KACpDO,IACAH,GAAQ,MAEX3P,OAAOC,IACJU,QAAQV,MAAM,+BAAgCA,OAyB9D,OAAOnF,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,wBAAuBD,SAAA,EACzCF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,SAAQD,UACnBmC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,eAAcD,SAAA,EACzBF,EAAAA,EAAAA,KAAA,SACI4G,MAAO2I,EAAaqH,QACpBhP,SAAWC,GACP8O,GAAezQ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAGqJ,GAAY,IAAEqH,QAAS/O,EAAEC,OAAOlB,SAExDmB,YAAY,qBACZC,KAAK,UAEThI,EAAAA,EAAAA,KAAA,SACI4G,MAAO2I,EAAauH,QACpBlP,SAAWC,GACP8O,GAAezQ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAGqJ,GAAY,IAAEuH,QAASjP,EAAEC,OAAOlB,SAExDmB,YAAY,sBACZC,KAAK,UAGThI,EAAAA,EAAAA,KAAA,SACI4G,MAAO2I,EAAasH,QACpBjP,SAAWC,GACP8O,GAAezQ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAGqJ,GAAY,IAAEsH,QAAShP,EAAEC,OAAOlB,SAExDmB,YAAY,sGACZC,KAAK,SAIRiP,GAAOjX,EAAAA,EAAAA,KAAA,OAAKuD,QAASA,IAAM+T,EAAS,QAASnX,UAAU,YAAWD,UAC/DF,EAAAA,EAAAA,KAAA,OAAKsC,IAAI,+BAA+BC,IAAI,QACvCvC,EAAAA,EAAAA,KAAA,OAAKuD,QAASA,IAAM+T,EAAS,OAAQnX,UAAU,YAAWD,UAC/DF,EAAAA,EAAAA,KAAA,OAAKsC,IAAI,yBAAyBC,IAAI,aAKlDvC,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAcD,UACzBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,cAAaD,SAEpB6W,EAAW/T,KAAI,CAAC4U,EAAOlT,KACnBrC,EAAAA,EAAAA,MAAA,OAAiBlC,UAAU,aAAYD,SAAA,EACnCF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,OAAMD,SAAE0X,EAAMrI,aAAanK,EAAAA,GAAQf,UAAUE,QAC5DlC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,SAAQD,SAAA,EACnBF,EAAAA,EAAAA,KAAA,OAAKuD,QAASA,IAvDtBqU,KAChBV,GAAQ,GACRE,EAAUQ,EAAM1S,IAChByR,EAAgB,CACZC,QAASgB,EAAMrI,aAAiB,GAAEhL,MAAQ,GAC1CsS,QAASe,EAAMrI,aAAiB,GAAEhL,MAAQ,GAC1CuS,QAASc,EAAMrI,aAAiB,GAAEhL,MAAQ,MAiDFsT,CAAWD,GAAQzX,UAAU,MAAKD,UAClDF,EAAAA,EAAAA,KAAA,OAAKsC,IAAI,gCAAgCC,IAAI,QAGjDvC,EAAAA,EAAAA,KAAA,OAAKuD,QAASA,KAAMuU,OArE9B5S,EAqEuC0S,EAAM1S,QApE3DnE,EAAAA,EAAMmV,OAAO,GAADvV,OAAIiG,EAAM3E,IAAG,2BAAAtB,OAA0BuE,EAAE,KAAI,CACrDmI,QAAS,CAAC,cAAgB,SAAD1M,OAAWC,aAAaC,QAAQ,aAC1DI,MAAMC,IACLyV,EAAgB,CAACC,QAAS,GAAIC,QAAS,GAAIC,QAAS,KACpDO,IACAH,GAAQ,MANEhS,OAqEkD/E,UAAU,MAAKD,UACnDF,EAAAA,EAAAA,KAAA,OAAKsC,IAAI,4BAA4BC,IAAI,YAR3CmC,aC8DlC,EAxMsBgX,KAClB,IAAI9U,GAAQ7C,EAAAA,EAAAA,YAAWC,GACvB,MAAO+S,EAAYC,IAAiBzW,EAAAA,EAAAA,UAAS,KACtC0W,EAAMC,IAAW3W,EAAAA,EAAAA,WAAS,IAC1B4W,EAAQC,IAAa7W,EAAAA,EAAAA,UAAS,KAC9Bob,EAAQC,IAAarb,EAAAA,EAAAA,WAAS,IAC9Bka,EAAOoB,IAAYtb,EAAAA,EAAAA,UAAS,KAC5BgP,EAAcoH,IAAmBpW,EAAAA,EAAAA,UACpC,CACIqW,QAAS,GACTC,QAAS,GACTC,QAAS,KAGXO,EAAUA,KACZtW,EAAAA,EAAMC,IAAI,GAADL,OAAIiG,EAAM3E,IAAG,6BAA6B,CAC/CoL,QAAS,CAAC,cAAgB,SAAD1M,OAAWC,aAAaC,QAAQ,aAC1DI,MAAMC,IACL8V,EAAc9V,EAASC,WAI/BL,EAAAA,EAAAA,YAAU,KACNuW,MACD,IAEH,MAAMC,EAAY7P,IACd,MAAM,QAACmP,EAAO,QAAEC,EAAO,QAAEC,GAAWvH,EAIpC,KAFwBqH,EAAQ1P,QAAU2P,EAAQ3P,QAAU4P,EAAQ5P,QAIhE,YADAQ,MAAM,8BAIV,MAAM6P,EAAmB,CACrBC,GAAI,CACAjT,KAAMqS,EAAQ1P,QAElBuQ,GAAI,CACAlT,KAAMsS,EAAQ3P,QAElBwQ,GAAI,CACAnT,KAAMuS,EAAQ5P,SAIP,QAAXO,GACA1G,EAAAA,EAAMsG,KAAK,GAAD1G,OAAIiG,EAAM3E,IAAG,6BAA6B,CAC5C6Z,QAASH,EACTlB,QACAlL,aAAcgI,GAElB,CACIlK,QAAS,CAAC,cAAgB,SAAD1M,OAAWC,aAAaC,QAAQ,aAE5DI,MAAMC,IACHyV,EAAgB,CAACC,QAAS,GAAIC,QAAS,GAAIC,QAAS,KACpD8E,GAAU,GACVC,EAAS,IACTxE,OAEH9P,OAAOC,IACJU,QAAQV,MAAM,6BAA8BA,MAIzC,SAAXC,GACA1G,EAAAA,EAAM4W,IAAI,GAADhX,OAAIiG,EAAM3E,IAAG,6BAAAtB,OAA4BwW,EAAM,KAAK,CACrD2E,QAASH,EACTlB,QACAlL,aAAcgI,GAElB,CACIlK,QAAS,CAAC,cAAgB,SAAD1M,OAAWC,aAAaC,QAAQ,aAE5DI,MAAMC,IACHyV,EAAgB,CAACC,QAAS,GAAIC,QAAS,GAAIC,QAAS,KACpDO,IACAH,GAAQ,GACR0E,GAAU,GACVC,EAAS,OAEZtU,OAAOC,IACJU,QAAQV,MAAM,+BAAgCA,OA+B9D,OAAOnF,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,yBAAwBD,SAAA,EAC1CF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,SAAQD,UACnBmC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,eAAcD,SAAA,EAEzBmC,EAAAA,EAAAA,MAAA,SAAOqO,QAAQ,SAASvQ,UAAU,SAAQD,SAAA,EACtCF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,OAAMD,SAAC,eAItBF,EAAAA,EAAAA,KAAA,SACIgI,KAAK,WACLkK,QAASyJ,EACTzW,GAAG,SACH0C,SAjBSmU,KACzBH,GAAWD,UAoBH3b,EAAAA,EAAAA,KAAA,SACI4G,MAAO6T,EACP7S,SAAWC,GAAMgU,EAAShU,EAAEC,OAAOlB,OACnCmB,YAAY,OACZC,KAAK,YAIThI,EAAAA,EAAAA,KAAA,SACI4G,MAAO2I,EAAaqH,QACpBhP,SAAWC,GACP8O,GAAezQ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAGqJ,GAAY,IAAEqH,QAAS/O,EAAEC,OAAOlB,SAExDmB,YAAY,sBACZC,KAAK,UAEThI,EAAAA,EAAAA,KAAA,SACI4G,MAAO2I,EAAauH,QACpBlP,SAAWC,GACP8O,GAAezQ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAGqJ,GAAY,IAAEuH,QAASjP,EAAEC,OAAOlB,SAExDmB,YAAY,qBACZC,KAAK,UAGThI,EAAAA,EAAAA,KAAA,SACI4G,MAAO2I,EAAasH,QACpBjP,SAAWC,GACP8O,GAAezQ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAGqJ,GAAY,IAAEsH,QAAShP,EAAEC,OAAOlB,SAExDmB,YAAY,gGACZC,KAAK,SAIRiP,GAAOjX,EAAAA,EAAAA,KAAA,OAAKuD,QAASA,IAAM+T,EAAS,QAASnX,UAAU,YAAWD,UAC/DF,EAAAA,EAAAA,KAAA,OAAKsC,IAAI,+BAA+BC,IAAI,QACvCvC,EAAAA,EAAAA,KAAA,OAAKuD,QAASA,IAAM+T,EAAS,OAAQnX,UAAU,YAAWD,UAC/DF,EAAAA,EAAAA,KAAA,OAAKsC,IAAI,yBAAyBC,IAAI,aAKlDvC,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAcD,UACzBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,cAAaD,SAEpB6W,EAAW/T,KAAI,CAAC6M,EAASnL,KACrBrC,EAAAA,EAAAA,MAAA,OAAiBlC,UAAS,cAAAQ,OAAgBkP,EAAQiM,SAAW,UAAW5b,SAAA,EACpEmC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,OAAMD,SAAA,CAAE2P,EAAQN,aAAanK,EAAAA,GAAQf,UAAUE,KAAK,KAAGsL,EAAQ4K,MAAM,YAEpFpY,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,SAAQD,SAAA,EACnBF,EAAAA,EAAAA,KAAA,OAAKuD,QAASA,KAAMsU,OApF5BD,EAoFuC/H,EAnFvDqH,GAAQ,GACRE,EAAUQ,EAAM1S,IAChByR,EAAgB,CACZC,QAASgB,EAAMrI,aAAiB,GAAEhL,MAAQ,GAC1CsS,QAASe,EAAMrI,aAAiB,GAAEhL,MAAQ,GAC1CuS,QAASc,EAAMrI,aAAiB,GAAEhL,MAAQ,KAE9CqX,EAAUhE,EAAMkE,cAChBD,EAASjE,EAAM6C,OATC7C,OAoFiDzX,UAAU,MAAKD,UACpDF,EAAAA,EAAAA,KAAA,OAAKsC,IAAI,gCAAgCC,IAAI,QAGjDvC,EAAAA,EAAAA,KAAA,OAAKuD,QAASA,KAAMuU,OAlG9B5S,EAkGuC2K,EAAQ3K,QAjG7DnE,EAAAA,EAAMmV,OAAO,GAADvV,OAAIiG,EAAM3E,IAAG,6BAAAtB,OAA4BuE,EAAE,KAAK,CACxDmI,QAAS,CAAC,cAAgB,SAAD1M,OAAWC,aAAaC,QAAQ,aAC1DI,MAAMC,IACLyV,EAAgB,CAACC,QAAS,GAAIC,QAAS,GAAIC,QAAS,KACpDO,IACAH,GAAQ,MANEhS,OAkGoD/E,UAAU,MAAKD,UACrDF,EAAAA,EAAAA,KAAA,OAAKsC,IAAI,4BAA4BC,IAAI,YAT3CmC,aCoUlC,EA9ecsX,KACV,IAAIpV,GAAQ7C,EAAAA,EAAAA,YAAWC,GACvB,MAAOsE,EAAWC,IAAgBhI,EAAAA,EAAAA,UAAS,CAACiI,MAAM,EAAOf,QAAQ,IAC3DgB,GAAUC,EAAAA,EAAAA,QAAO,OAChBuT,EAAWC,IAAgB3b,EAAAA,EAAAA,UAAS,KACpC4b,EAAOC,IAAY7b,EAAAA,EAAAA,UAAS,KAC5BuJ,EAASC,IAAcxJ,EAAAA,EAAAA,UAAS,KAChC0X,EAAaC,IAAkB3X,EAAAA,EAAAA,UAAS,KACxC4W,EAAQC,IAAa7W,EAAAA,EAAAA,UAAS,IAC/BoI,GAAMD,EAAAA,EAAAA,QAAO,OAEZqD,EAAYC,IAAiBzL,EAAAA,EAAAA,UAAS,GACvC0L,EAFY,GAEGF,EAEfG,EAAYC,KAAKC,KAAK6L,EAAYlV,OAJtB,IAqCZsJ,GAASC,EAAAA,EAAAA,IAAU,CACrBC,cAAe,CACXf,YAAa,GACbgP,aAAc,GACd3N,YAAa,GACbC,UAAW,GACX2N,MAAO,IAEX1N,SA/BcC,IACd,MAAMC,EAAS,CAAC,EAmBhB,OAjBKD,EAAOxB,cACRyB,EAAOzB,YAAc,YAGpBwB,EAAOwN,eACRvN,EAAOuN,aAAe,YAErBxN,EAAOH,cACRI,EAAOJ,YAAc,YAEpBG,EAAOF,YACRG,EAAOH,UAAY,YAElBE,EAAOyN,QACRxN,EAAOwN,MAAQ,YAGZxN,GAYPC,SAAWF,IACPG,OAIFA,EAAcA,KAChB,IAAIsL,EAAU,CACVjN,YAAaa,EAAOW,OAAOxB,YAC3BgP,aAAcnO,EAAOW,OAAOwN,aAC5B3N,YAAaR,EAAOW,OAAOH,YAC3BC,UAAWT,EAAOW,OAAOF,UACzB2N,MAAOpO,EAAOW,OAAOyN,OAGpBtD,GACDpW,EAAAA,EAAMsG,KAAK,GAAD1G,OAAIiG,EAAM3E,IAAG,qBAAqBwW,EAAS,CACjDpL,QAAS,CACLqI,cAAc,SAAD/U,OAAWC,aAAaC,QAAQ,aAElDI,MAAMC,IACLkM,IACA7E,EAAa,CAACd,OAAQ,GAAIe,MAAM,IAChC6D,EAAOiC,eAIX6I,GACApW,EAAAA,EAAM4W,IAAI,GAADhX,OAAIiG,EAAM3E,IAAG,qBAAAtB,OAAoBwW,EAAM,KAAKsB,EACjD,CACIpL,QAAS,CACLqI,cAAc,SAAD/U,OAAWC,aAAaC,QAAQ,aAElDI,MAAMC,IACTkM,IACAf,EAAOiC,YACP/F,EAAa,CAACd,OAAQ,GAAIe,MAAM,SAK5C1H,EAAAA,EAAAA,YAAU,KACNsM,IAEArM,EAAAA,EAAMC,IAAI,GAADL,OAAIiG,EAAM3E,IAAG,sBAAsB,CACxCoL,QAAS,CAAC,cAAgB,SAAD1M,OAAWC,aAAaC,QAAQ,aAC1DI,MAAMC,IACL6I,EAAW7I,EAASC,SAGxBJ,EAAAA,EAAMC,IAAI,GAADL,OAAIiG,EAAM3E,IAAG,2BAA2B,CAC7CoL,QAAS,CAAC,cAAgB,SAAD1M,OAAWC,aAAaC,QAAQ,aAC1DI,MAAMC,IACLkb,EAASlb,EAASC,SAGtBJ,EAAAA,EAAMC,IAAI,GAADL,OAAIiG,EAAM3E,IAAG,0BAA0B,CAC5CoL,QAAS,CAAC,cAAgB,SAAD1M,OAAWC,aAAaC,QAAQ,aAC1DI,MAAMC,IACLgb,EAAahb,EAASC,WAG3B,IAEH,MAUMiM,EAAaA,KACfrM,EAAAA,EAAMC,IAAI,GAADL,OAAIiG,EAAM3E,IAAG,qBAAqB,CACvCoL,QAAS,CACLqI,cAAc,SAAD/U,OAAWC,aAAaC,QAAQ,aAElDI,MAAMC,IACLgX,EAAehX,EAASC,UAgB1ByN,EAAcqJ,EAAYpJ,MAAM5C,EAAcA,EA7IlC,IA6I4DjJ,KAAI,CAACC,EAAMyB,KAC9ErC,EAAAA,EAAAA,MAAA,MAAAnC,SAAA,EACHF,EAAAA,EAAAA,KAAA,MAAAE,SAAKwE,EAAQ,KACb1E,EAAAA,EAAAA,KAAA,MAAAE,SACK+C,EAAKuI,eAEVxL,EAAAA,EAAAA,KAAA,MAAAE,SACK+C,EAAKuX,gBAEVxa,EAAAA,EAAAA,KAAA,MAAAE,SAAK+C,EAAK4J,eACV7M,EAAAA,EAAAA,KAAA,MAAAE,SAAK+C,EAAK6J,aACV9M,EAAAA,EAAAA,KAAA,MAAAE,SAAK+C,EAAKwX,SACVza,EAAAA,EAAAA,KAAA,MAAAE,UACIF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,OAAMD,UACjBF,EAAAA,EAAAA,KAAA,OAAKuD,QAASA,KAAMuU,OA9ClB5S,EA8C2BjC,EAAKiC,QA7C9CnE,EAAAA,EAAMmV,OAAO,GAADvV,OAAIiG,EAAM3E,IAAG,qBAAAtB,OAAoBuE,EAAE,KAAK,CAChDmI,QAAS,CACLqI,cAAc,SAAD/U,OAAWC,aAAaC,QAAQ,aAElDI,MAAMC,IACLkM,OANUlI,OA8CqC5C,IAAI,4BAA4BC,IAAI,UAGnFvC,EAAAA,EAAAA,KAAA,UAEAA,EAAAA,EAAAA,KAAA,OAAKG,UAAU,YAAWD,UACtBF,EAAAA,EAAAA,KAAA,OAAKuD,QAASA,KAAMmV,OA/B5BtB,GADgBvH,EAgCuB5M,GA/BrBiC,IAClBqD,EAAa,CAACC,MAAM,EAAMf,OAAQ,qBAClC4E,EAAOuD,UAAU,CACbpE,YAAaqE,EAAQrE,YACrBgP,aAAc3K,EAAQ2K,aACtB3N,YAAagD,EAAQhD,YACrBC,UAAW+C,EAAQ/C,UACnB2N,MAAO5K,EAAQ4K,QARH5K,OAgC8BvN,IAAI,gCAAgCC,IAAI,SAnBtEmC,KAwBpB,OAAOrC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,kBAAiBD,SAAA,EACnCF,EAAAA,EAAAA,KAAC8P,EAAAA,EAAa,CACVC,GAAIzH,EAAUE,KACdC,QAASA,EACTuH,QAAS,IACTC,WAAW,QACXC,eAAa,EAAAhQ,UAEbF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,aAAYD,UACvBmC,EAAAA,EAAAA,MAAA,OAAKsG,IAAKF,EAAStI,UAAU,aAAYD,SAAA,CAEf,eAArBoI,EAAUb,SACPpF,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,aAAYD,SAAA,EACvBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,aAAYD,UACvBF,EAAAA,EAAAA,KAAA,OACIuD,QAASA,IAAMgF,EAAa,CAACd,OAAQ,GAAIe,MAAM,IAC/ClG,IAAI,uBACJC,IAAI,QAIZvC,EAAAA,EAAAA,KAAA,OAAKG,UAAU,QAAOD,SAAC,mBAEvBmC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,iBAAgBD,SAAA,EAE3BmC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,aAAYD,SAAA,EACvBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAcD,UACzBmC,EAAAA,EAAAA,MAACsO,EAAAA,EAAW,CAACN,GAAI,CAACC,EAAG,EAAGC,SAAU,QAASC,KAAK,QAAQrQ,UAAU,YAAWD,SAAA,EACzEF,EAAAA,EAAAA,KAAC4Q,EAAAA,EAAU,CAAC1L,GAAG,0BAAyBhF,SAAC,eACzCF,EAAAA,EAAAA,KAAC6Q,EAAAA,EAAM,CACHrJ,MAAqC,aAA9B6E,EAAOY,OAAOzB,YACrBsF,QAAQ,0BACR5L,GAAG,oBACH0B,MAAOyF,EAAOW,OAAOxB,YACrBiF,MAAM,YACNlM,KAAK,cACLqD,SAAUyE,EAAO+D,aAAalQ,SAE7B+b,EAAUjZ,KAAI,CAACC,EAAMyB,KAClB1E,EAAAA,EAAAA,KAAC+Q,EAAAA,EAAQ,CAAanK,MAAO3D,EAAKoZ,aAAanc,SAC1C+C,EAAKsM,aAAanK,EAAAA,GAAQf,UAAUE,MAD1BG,aAQ/B1E,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAcD,UACzBmC,EAAAA,EAAAA,MAACsO,EAAAA,EAAW,CAACN,GAAI,CAACC,EAAG,EAAGC,SAAU,QAASC,KAAK,QAAQrQ,UAAU,YAAWD,SAAA,EACzEF,EAAAA,EAAAA,KAAC4Q,EAAAA,EAAU,CAAC1L,GAAG,0BAAyBhF,SAAC,WACzCF,EAAAA,EAAAA,KAAC6Q,EAAAA,EAAM,CACHrJ,MAAsC,aAA/B6E,EAAOY,OAAOuN,aACrB1J,QAAQ,0BACR5L,GAAG,oBACH0B,MAAOyF,EAAOW,OAAOwN,aACrB/J,MAAM,QACNlM,KAAK,eACLqD,SAAUyE,EAAO+D,aAAalQ,SAE7Bic,EAAMnZ,KAAI,CAACC,EAAMyB,KACd1E,EAAAA,EAAAA,KAAC+Q,EAAAA,EAAQ,CAAanK,MAAO3D,EAAKqZ,cAAcpc,SAC3C+C,EAAKsM,aAAanK,EAAAA,GAAQf,UAAUE,MAD1BG,gBASnCrC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,aAAYD,SAAA,EACvBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAcD,UACzBmC,EAAAA,EAAAA,MAACsO,EAAAA,EAAW,CAACN,GAAI,CAACC,EAAG,EAAGC,SAAU,QAASC,KAAK,QAAQrQ,UAAU,YAAWD,SAAA,EACzEF,EAAAA,EAAAA,KAAC4Q,EAAAA,EAAU,CAAC1L,GAAG,0BAAyBhF,SAAC,cACzCF,EAAAA,EAAAA,KAAC6Q,EAAAA,EAAM,CACHrJ,MAAqC,aAA9B6E,EAAOY,OAAOJ,YACrBiE,QAAQ,0BACR5L,GAAG,oBACH0B,MAAOyF,EAAOW,OAAOH,YACrB4D,MAAM,WACNlM,KAAK,cACLqD,SAAUyE,EAAO+D,aAAalQ,SAG1B4J,EAAQ9G,KAAI,CAACC,EAAMyB,KACR1E,EAAAA,EAAAA,KAAC+Q,EAAAA,EAAQ,CACCnK,MAAO3D,EAAKiC,GAAGhF,SAC3B+C,EAAKsM,aAAanK,EAAAA,GAAQf,UAAUE,MAFnBG,aAU1C1E,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAcD,UACzBmC,EAAAA,EAAAA,MAACsO,EAAAA,EAAW,CAACN,GAAI,CAACC,EAAG,EAAGC,SAAU,QAASC,KAAK,QAAQrQ,UAAU,YAAWD,SAAA,EACzEF,EAAAA,EAAAA,KAAC4Q,EAAAA,EAAU,CAAC1L,GAAG,0BAAyBhF,SAAC,aACzCF,EAAAA,EAAAA,KAAC6Q,EAAAA,EAAM,CACHrJ,MAAmC,aAA5B6E,EAAOY,OAAOH,UACrBgE,QAAQ,0BACR5L,GAAG,oBACH0B,MAAOyF,EAAOW,OAAOF,UACrB2D,MAAM,UACNlM,KAAK,YACLqD,SAAUyE,EAAO+D,aAAalQ,SAG1B4J,EAAQ9G,KAAI,CAACC,EAAMyB,KACR1E,EAAAA,EAAAA,KAAC+Q,EAAAA,EAAQ,CACCnK,MAAO3D,EAAKiC,GAAGhF,SAC3B+C,EAAKsM,aAAanK,EAAAA,GAAQf,UAAUE,MAFnBG,gBAW9C1E,EAAAA,EAAAA,KAAA,OAAKG,UAAU,aAAYD,UACvBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAcD,UACzBF,EAAAA,EAAAA,KAACmQ,EAAAA,EAAS,CACN3I,MAA+B,aAAxB6E,EAAOY,OAAOwN,MACrB7T,MAAOyF,EAAOW,OAAOyN,MACrB7S,SAAUyE,EAAO+D,aACjB7L,KAAK,QACLyD,KAAK,OACLqI,GAAI,CAACC,EAAG,EAAGC,SAAU,QAASC,KAAK,QAAQtL,GAAG,iBAC9CuL,MAAM,QAAQxL,QAAQ,WAAW9E,UAAU,mBAIvDH,EAAAA,EAAAA,KAAA,OAAKuD,QAAS4J,EAAahN,UAAU,UAASD,SAAC,wBAOrC,gBAArBoI,EAAUb,SACPpF,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,aAAYD,SAAA,EACvBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,aAAYD,UACvBF,EAAAA,EAAAA,KAAA,OACIuD,QAASA,IAAMgF,EAAa,CAACd,OAAQ,GAAIe,MAAM,IAC/ClG,IAAI,uBACJC,IAAI,QAIZvC,EAAAA,EAAAA,KAAA,OAAKG,UAAU,QAAOD,SAAC,uBAEvBmC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,iBAAgBD,SAAA,EAE3BmC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,aAAYD,SAAA,EACvBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAcD,UACzBmC,EAAAA,EAAAA,MAACsO,EAAAA,EAAW,CAACN,GAAI,CAACC,EAAG,EAAGC,SAAU,QAASC,KAAK,QAAQrQ,UAAU,YAAWD,SAAA,EACzEF,EAAAA,EAAAA,KAAC4Q,EAAAA,EAAU,CAAC1L,GAAG,0BAAyBhF,SAAC,eACzCF,EAAAA,EAAAA,KAAC6Q,EAAAA,EAAM,CACHrJ,MAAqC,aAA9B6E,EAAOY,OAAOzB,YACrBsF,QAAQ,0BACR5L,GAAG,oBACH0B,MAAOyF,EAAOW,OAAOxB,YACrBiF,MAAM,YACNlM,KAAK,cACLqD,SAAUyE,EAAO+D,aAAalQ,SAE7B+b,EAAUjZ,KAAI,CAACC,EAAMyB,KAClB1E,EAAAA,EAAAA,KAAC+Q,EAAAA,EAAQ,CAAanK,MAAO3D,EAAKoZ,aAAanc,SAC1C+C,EAAKsM,aAAanK,EAAAA,GAAQf,UAAUE,MAD1BG,aAQ/B1E,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAcD,UACzBmC,EAAAA,EAAAA,MAACsO,EAAAA,EAAW,CAACN,GAAI,CAACC,EAAG,EAAGC,SAAU,QAASC,KAAK,QAAQrQ,UAAU,YAAWD,SAAA,EACzEF,EAAAA,EAAAA,KAAC4Q,EAAAA,EAAU,CAAC1L,GAAG,0BAAyBhF,SAAC,WACzCF,EAAAA,EAAAA,KAAC6Q,EAAAA,EAAM,CACHrJ,MAAsC,aAA/B6E,EAAOY,OAAOuN,aACrB1J,QAAQ,0BACR5L,GAAG,oBACH0B,MAAOyF,EAAOW,OAAOwN,aACrB/J,MAAM,QACNlM,KAAK,eACLqD,SAAUyE,EAAO+D,aAAalQ,SAE7Bic,EAAMnZ,KAAI,CAACC,EAAMyB,KACd1E,EAAAA,EAAAA,KAAC+Q,EAAAA,EAAQ,CAAanK,MAAO3D,EAAKqZ,cAAcpc,SAC3C+C,EAAKsM,aAAanK,EAAAA,GAAQf,UAAUE,MAD1BG,gBASnCrC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,aAAYD,SAAA,EACvBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAcD,UACzBmC,EAAAA,EAAAA,MAACsO,EAAAA,EAAW,CAACN,GAAI,CAACC,EAAG,EAAGC,SAAU,QAASC,KAAK,QAAQrQ,UAAU,YAAWD,SAAA,EACzEF,EAAAA,EAAAA,KAAC4Q,EAAAA,EAAU,CAAC1L,GAAG,0BAAyBhF,SAAC,cACzCF,EAAAA,EAAAA,KAAC6Q,EAAAA,EAAM,CACHrJ,MAAqC,aAA9B6E,EAAOY,OAAOJ,YACrBiE,QAAQ,0BACR5L,GAAG,oBACH0B,MAAOyF,EAAOW,OAAOH,YACrB4D,MAAM,WACNlM,KAAK,cACLqD,SAAUyE,EAAO+D,aAAalQ,SAG1B4J,EAAQ9G,KAAI,CAACC,EAAMyB,KACR1E,EAAAA,EAAAA,KAAC+Q,EAAAA,EAAQ,CACCnK,MAAO3D,EAAKiC,GAAGhF,SAC3B+C,EAAKsM,aAAanK,EAAAA,GAAQf,UAAUE,MAFnBG,aAU1C1E,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAcD,UACzBmC,EAAAA,EAAAA,MAACsO,EAAAA,EAAW,CAACN,GAAI,CAACC,EAAG,EAAGC,SAAU,QAASC,KAAK,QAAQrQ,UAAU,YAAWD,SAAA,EACzEF,EAAAA,EAAAA,KAAC4Q,EAAAA,EAAU,CAAC1L,GAAG,0BAAyBhF,SAAC,aACzCF,EAAAA,EAAAA,KAAC6Q,EAAAA,EAAM,CACHrJ,MAAmC,aAA5B6E,EAAOY,OAAOH,UACrBgE,QAAQ,0BACR5L,GAAG,oBACH0B,MAAOyF,EAAOW,OAAOF,UACrB2D,MAAM,UACNlM,KAAK,YACLqD,SAAUyE,EAAO+D,aAAalQ,SAG1B4J,EAAQ9G,KAAI,CAACC,EAAMyB,KACR1E,EAAAA,EAAAA,KAAC+Q,EAAAA,EAAQ,CACCnK,MAAO3D,EAAKiC,GAAGhF,SAC3B+C,EAAKsM,aAAanK,EAAAA,GAAQf,UAAUE,MAFnBG,gBAW9C1E,EAAAA,EAAAA,KAAA,OAAKG,UAAU,aAAYD,UACvBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAcD,UACzBF,EAAAA,EAAAA,KAACmQ,EAAAA,EAAS,CACN3I,MAA+B,aAAxB6E,EAAOY,OAAOwN,MACrB7T,MAAOyF,EAAOW,OAAOyN,MACrB7S,SAAUyE,EAAO+D,aACjB7L,KAAK,QACLyD,KAAK,OACLqI,GAAI,CAACC,EAAG,EAAGC,SAAU,QAASC,KAAK,QAAQtL,GAAG,iBAC9CuL,MAAM,QAAQxL,QAAQ,WAAW9E,UAAU,mBAIvDH,EAAAA,EAAAA,KAAA,OAAKuD,QAAS4J,EAAahN,UAAU,UAASD,SAAC,0BAWvEF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,SAAQD,UACnBF,EAAAA,EAAAA,KAAA,OAAKuD,QAASA,KACVgF,EAAa,CAACC,MAAM,EAAMf,OAAQ,gBACnCtH,UAAU,iBAAgBD,SAAC,qBAKlCF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,gBAAeD,UAC1BmC,EAAAA,EAAAA,MAAA,SAAAnC,SAAA,EACIF,EAAAA,EAAAA,KAAA,SAAAE,UACAmC,EAAAA,EAAAA,MAAA,MAAAnC,SAAA,EACIF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,YACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,eACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,WACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,cACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,aACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,UACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,eACJF,EAAAA,EAAAA,KAAA,eAIJA,EAAAA,EAAAA,KAAA,SAAAE,SACC0O,UAKT5O,EAAAA,EAAAA,KAAA,OAAKG,UAAU,aAAYD,SACtB+X,EAAYlV,OAAS,IAAK/C,EAAAA,EAAAA,KAAC+T,IAAa,CACrCC,WAAW,MACXC,eAAejU,EAAAA,EAAAA,KAAA,OAAKsC,IAAI,0BAA0BC,IAAI,KACtD2R,WAAWlU,EAAAA,EAAAA,KAAA,OAAKsC,IAAI,0BAA0BC,IAAI,KAClD2J,UAAWA,EACXiI,aAldOtP,IAAiB,IAAhB,SAACgN,GAAShN,EAC1BmH,EAAc6F,GAEduC,YAAW,KAAO,IAADC,EACF,QAAXA,EAAA1L,EAAI2L,eAAO,IAAAD,GAAXA,EAAaE,eAAe,CAACC,SAAU,aACxC,MA8cKC,mBAAoB,kBACpBC,sBAAuB,eACvBC,kBAAmB,WACnBC,mBAAoB,qBACpBC,gBAAiB,qBAChB,SCteJ0H,EAAe,CACxB,CACIC,KAAM,IACNC,SAASzc,EAAAA,EAAAA,KAAC2G,EAAU,MAGf+V,EAAc,CACvB,CACIF,KAAM,KACNC,SAASzc,EAAAA,EAAAA,KAAC4D,EAAK,MAIVmC,EAAkB,CAC3B,CACIyW,KAAM,IACNC,SAASzc,EAAAA,EAAAA,KAACI,EAAQ,KAEtB,CACIoc,KAAM,WACNC,SAASzc,EAAAA,EAAAA,KAACqI,EAAO,KAErB,CACImU,KAAM,WACNC,SAASzc,EAAAA,EAAAA,KAACwW,EAAO,KAErB,CACIgG,KAAM,gBACNC,SAASzc,EAAAA,EAAAA,KAAC8U,EAAU,KAExB,CACI0H,KAAM,UACNC,SAASzc,EAAAA,EAAAA,KAAC0W,EAAM,KAEpB,CACI8F,KAAM,cACNC,SAASzc,EAAAA,EAAAA,KAAC+X,EAAQ,KAEtB,CACIyE,KAAM,cACNC,SAASzc,EAAAA,EAAAA,KAAC6a,EAAQ,KAEtB,CACI2B,KAAM,WACNC,SAASzc,EAAAA,EAAAA,KAACgY,EAAO,KAErB,CACIwE,KAAM,WACNC,SAASzc,EAAAA,EAAAA,KAAC2Y,EAAO,KAErB,CACI6D,KAAM,UACNC,SAASzc,EAAAA,EAAAA,KAAC8Y,EAAM,KAEpB,CACI0D,KAAM,WACNC,SAASzc,EAAAA,EAAAA,KAACkb,EAAO,KAErB,CACIsB,KAAM,iBACNC,SAASzc,EAAAA,EAAAA,KAACyb,EAAY,KAE1B,CACIe,KAAM,kBACNC,SAASzc,EAAAA,EAAAA,KAAC0b,EAAa,KAG3B,CACIc,KAAM,SACNC,SAASzc,EAAAA,EAAAA,KAACgc,EAAK,MCtEvB,EAfiBW,KACN3c,EAAAA,EAAAA,KAAA,OAAKG,UAAU,oBAAmBD,UACrCF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,OAAMD,UACjBmC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,QAAOD,SAAA,EAClBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,QAAOD,SAAC,eAGvBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,OAAMD,SAAC,0BCJzB8D,GAAY4Y,EAAAA,EAAAA,iBA+BzB,QA7BA,WACI,MAAO3a,EAAK4a,IAAUtc,EAAAA,EAAAA,UAAS,0BAEzBuc,GAAQpb,EAAAA,EAAAA,UAAQ,IAAMd,aAAaC,QAAQ,UAAU,IAErDkc,GAASrb,EAAAA,EAAAA,UAAQ,IACfob,EAAcJ,EACXH,GACR,CAACO,IAEJ,OACI9c,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACIF,EAAAA,EAAAA,KAACgE,EAAUgZ,SAAQ,CAACpW,MAAO,CACvB3E,OACF/B,UACEmC,EAAAA,EAAAA,MAACyD,EAAAA,GAAM,CAAA5F,SAAA,CAEC6c,EAAO/Z,KAAI,CAACgD,EAAOtB,KACf1E,EAAAA,EAAAA,KAACiG,EAAAA,IAAKC,EAAAA,EAAAA,GAAA,GAAiBF,GAAXtB,MAGpB1E,EAAAA,EAAAA,KAACiG,EAAAA,GAAK,CAACuW,KAAM,IAAKC,SAASzc,EAAAA,EAAAA,KAAC2c,EAAQ,YAMxD,C","sources":["components/admin/admin home/loader/Loader.jsx","components/admin/admin home/MainHome.jsx","components/admin/Admin/Admin.jsx","components/login/useOnKeyPress.js","components/login/LoginAdmin.jsx","components/admin/loader-admin/LoaderAdmin.js","components/admin/drivers/Drivers.jsx","components/admin/chat/ChatDriver.jsx","components/admin/clients/Clients.jsx","components/admin/colors/Colors.jsx","components/admin/car-brend/CarBrand.jsx","components/admin/service/Service.jsx","components/admin/balance/Balance.jsx","components/admin/orders/Orders.jsx","components/admin/car-model/CarModel.jsx","components/admin/payment/Payment.jsx","components/admin/reject-reason/RejectReason.jsx","components/admin/extra-services/ExtraServices.jsx","components/admin/price/Price.jsx","rootes.jsx","components/notFound/NotFound.jsx","components/App/App.js"],"sourcesContent":["import \"./loader.scss\";\r\n\r\nconst Loader = () => {\r\n    return <>\r\n        <div className=\"spinner-container\">\r\n            <div className=\"sloy\">\r\n                <span className=\"loader\"></span>\r\n            </div>\r\n\r\n        </div>\r\n    </>\r\n};\r\n\r\nexport default Loader;","import \"./adminHome.scss\"\r\nimport {useEffect, useMemo, useState} from \"react\"\r\nimport {GoogleMap, useLoadScript, Marker, InfoWindow} from \"@react-google-maps/api\";\r\nimport Loader from \"./loader/Loader\";\r\nimport axios from \"axios\";\r\n\r\nconst API_KEY = \"AIzaSyBEN2azIRg6YCHa-tV8yAEUJoHsn__fRBM\";\r\n\r\nconst MainHome = () => {\r\n    const [statisitc, setStatisitc] = useState([]);\r\n    const websocket = new WebSocket(`wss://api.buyukyol.uz/ws/orders/Tashkent/uzbekistan/?token=${localStorage.getItem('token')}`);\r\n\r\n    const [locationsList, setLocationsList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios.get(`https://api.adataxi.uz/api/v1/site/statistics/`).then((response) => {\r\n            setStatisitc(response.data[0])\r\n        })\r\n    }, []);\r\n\r\n    const [selectedLocation, setSelectedLocation] = useState(null);\r\n\r\n    const onMarkerClick = (location) => {\r\n        setSelectedLocation(location);\r\n    };\r\n\r\n    const onCloseClick = () => {\r\n        setSelectedLocation(null);\r\n    };\r\n\r\n    const {isLoaded} = useLoadScript({\r\n        googleMapsApiKey: API_KEY\r\n    });\r\n\r\n    const center = useMemo(() => ({lat: 41, lng: 65}), []);\r\n\r\n    const options = useMemo(() => (\r\n        {\r\n            disableDefaultUI: false,\r\n            clickableIcons: false\r\n        }), []);\r\n\r\n    if (!isLoaded) return <Loader/>;\r\n\r\n    const icon = {url: './images/admin/driver-icon.png', scaledSize: {width: 45, height: 45}};\r\n\r\n    return <div className=\"admin-home-container\">\r\n\r\n        <div className=\"header-side\">\r\n            <div className=\"statistic-card\">\r\n                <div className=\"icon\">\r\n                    <img src=\"./images/admin/driver.png\" alt=\"\"/>\r\n                </div>\r\n                <div className=\"title\">Haydovchilar soni:</div>\r\n                <div className=\"count\">{statisitc.drivers}</div>\r\n            </div>\r\n            <div className=\"statistic-card\">\r\n                <div className=\"icon\">\r\n                    <img src=\"./images/admin/user.png\" alt=\"\"/>\r\n                </div>\r\n                <div className=\"title\">Mijozlar soni:</div>\r\n                <div className=\"count\">{statisitc.clients}</div>\r\n            </div>\r\n            <div className=\"statistic-card\">\r\n                <div className=\"icon\">\r\n                    <img src=\"./images/admin/handshake.png\" alt=\"\"/>\r\n                </div>\r\n                <div className=\"title\">Hamkorlar soni:</div>\r\n                <div className=\"count\">{statisitc.avilable_drivers}</div>\r\n            </div>\r\n            <div className=\"statistic-card\">\r\n                <div className=\"icon\">\r\n                    <img src=\"./images/admin/shopping-list.png\" alt=\"\"/>\r\n                </div>\r\n                <div className=\"title\">Yakunlangan soni:</div>\r\n                <div className=\"count\">{statisitc.rides}</div>\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"map\">\r\n            <GoogleMap\r\n                zoom={5}\r\n                center={center}\r\n                options={options}\r\n                mapContainerClassName=\"map-container\">\r\n\r\n                {locationsList.length >= 0 ?\r\n\r\n                    <>\r\n                        {locationsList.map((item) => {\r\n                            return <Marker\r\n                                key={Number(item.latitude)}\r\n                                position={{lat: Number(item.latitude), lng: Number(item.longitude)}}\r\n                                icon={icon}\r\n                                onClick={() => onMarkerClick(item)}\r\n                            />\r\n                        })}\r\n\r\n                        {selectedLocation && (\r\n                            <InfoWindow\r\n                                position={{\r\n                                    lat: Number(selectedLocation.latitude),\r\n                                    lng: Number(selectedLocation.longitude)\r\n                                }}\r\n                                onCloseClick={onCloseClick}\r\n                            >\r\n                                <div className=\"info-box\">\r\n                                    <div className=\"info-text\">\r\n                                        <span>Moshina raqam:</span>\r\n                                        {selectedLocation.car_number} <br/>\r\n                                        <span>Tel raqam:</span>\r\n                                        {selectedLocation.phone_number}\r\n                                    </div>\r\n                                </div>\r\n                            </InfoWindow>\r\n                        )}\r\n                    </>\r\n\r\n                    : \"\"\r\n                }\r\n\r\n\r\n            </GoogleMap>\r\n        </div>\r\n\r\n\r\n    </div>\r\n};\r\n\r\n\r\nexport default MainHome","import {useState, useEffect, useContext} from \"react\";\r\nimport {useNavigate, Route, Routes, NavLink} from \"react-router-dom\";\r\nimport \"./admin.scss\"\r\nimport {adminPageRoutes} from \"../../../rootes\";\r\nimport {MyContext} from \"../../App/App\";\r\nimport i18next from \"i18next\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\n\r\nconst Admin = () => {\r\n    const {t} = useTranslation();\r\n    let value = useContext(MyContext);\r\n    const navigate = useNavigate();\r\n    const [adminMenu, setAdminMenu] = useState(false)\r\n\r\n    const menues = [\r\n        {\r\n            name: \"Dashboard\",\r\n            url: \"/\",\r\n            img: \"../images/admin/dashboard.png\"\r\n        },\r\n        {\r\n            name: \"Haydovchilar\",\r\n            url: \"/drivers\",\r\n            img: \"../images/admin/driver.png\"\r\n        },\r\n        {\r\n            name: \"Mijozlar\",\r\n            url: \"/clients\",\r\n            img: \"../images/admin/user.png\"\r\n        },\r\n        {\r\n            name: \"Buyurtmalar\",\r\n            url: \"/orders\",\r\n            img: \"../images/admin/shopping-list.png\"\r\n        },\r\n        {\r\n            name: \"Moshina brendi\",\r\n            url: \"/car-brands\",\r\n            img: \"../images/admin/car.png\"\r\n        },\r\n        {\r\n            name: \"Moshina modeli\",\r\n            url: \"/car-models\",\r\n            img: \"../images/admin/car.png\"\r\n        },\r\n        {\r\n            name: \"Ranglar\",\r\n            url: \"/colors\",\r\n            img: \"../images/admin/palette.png\"\r\n        },\r\n        {\r\n            name: \"Narxlar\",\r\n            url: \"/price\",\r\n            img: \"../images/admin/price-list.png\"\r\n        },\r\n        {\r\n            name: \"Qo'shimcha xizmatlar\",\r\n            url: \"/extra-services\",\r\n            img: \"../images/admin/technical-service.png\"\r\n        },\r\n        {\r\n            name: \"Bekor qilish sababi\",\r\n            url: \"/reject-reason\",\r\n            img: \"../images/admin/rejected.png\"\r\n        },\r\n\r\n        // {\r\n        //     name: \"Tariflar\",\r\n        //     url: \"/service\",\r\n        //     img: \"../images/admin/list.png\"\r\n        // },\r\n\r\n        // {\r\n        //     name: \"Balans\",\r\n        //     url: \"/balance\",\r\n        //     img: \"../images/admin/wallet.png\"\r\n        // },\r\n        // {\r\n        //     name: \"To'lov tizimi\",\r\n        //     url: \"/payment\",\r\n        //     img: \"../images/admin/credit-card.png\"\r\n        // },\r\n    ];\r\n\r\n    useEffect(() => {\r\n        // axios.get(`${value.url}dashboard/home/`, {\r\n        //     headers: {\r\n        //         \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\r\n        //     }\r\n        // }).then((response) => {\r\n        //     setStatisticsCount(response.data)\r\n        //     setCountPrice(response.data.balance)\r\n        // }).catch((error) => {\r\n        //     if (error.response.statusText == \"Unauthorized\") {\r\n        //         window.location.pathname = \"/\";\r\n        //         localStorage.removeItem(\"token\");\r\n        //     }\r\n        // });\r\n    }, []);\r\n\r\n    const language = [\r\n        {\r\n            code: \"uz\",\r\n            name: \"O'zbek tili\",\r\n            country_code: \"uz\",\r\n        },\r\n        {\r\n            code: \"en\",\r\n            name: \"English language\",\r\n            country_code: \"en\",\r\n        },\r\n        {\r\n            code: \"ru\",\r\n            name: \"Pусский язык\",\r\n            country_code: \"ru\",\r\n        },\r\n    ];\r\n    const changeLanguage = (code) => {\r\n        localStorage.setItem(\"lng\", code);\r\n        i18next.changeLanguage(code);\r\n    };\r\n\r\n    return <div className=\"admin-home\">\r\n\r\n        <div className={`left-box ${adminMenu ? \"\" : \"hide-left\"}`}>\r\n\r\n            <div className={`logo ${adminMenu ? \"\" : \"hide-logo\"}`}>\r\n                <img onClick={() => navigate('/')} src=\"../images/logo2.png\" alt=\"\"/>\r\n            </div>\r\n\r\n            <div className=\"admin-navbar\">\r\n                {\r\n                    menues.map((item, index) => {\r\n                        return <NavLink to={item.url} key={index}\r\n                                        className={`nav-item ${({isActive}) => isActive ? \"active\" : \"\"}`}>\r\n                            <img src={item.img} alt=\"\"/>\r\n                            {adminMenu ?  <span>{item.name}</span> :\"\"}\r\n                        </NavLink>\r\n                    })\r\n                }\r\n            </div>\r\n\r\n            <div onClick={() => setAdminMenu(!adminMenu)} className={`circle ${adminMenu ? \"\" : \"circle-rotate\"}`}>\r\n                <img src=\"../images/admin/previous.png\" alt=\"\"/>\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <div className={`right-box ${adminMenu ? \"\" :\"show-right\"}`}>\r\n            <div className=\"top-box\">\r\n                <div className=\"languge\">\r\n                    <Dropdown>\r\n                        <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                            <img className=\"globe\" src=\"./images/globe-alt.webp\" alt=\"language\" loading=\"lazy\"/>\r\n                            <div className=\"name\">\r\n                                {language.map((item, index) => {\r\n                                    return (\r\n                                        <div key={index}>\r\n                                            {i18next.language === item.code ? item.name : \"\"}\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n\r\n                            {language.map(({code, name, country_code}) => (\r\n                                <Dropdown.Item key={country_code}\r\n                                               onClick={() => changeLanguage(code)}>{name}</Dropdown.Item>\r\n                            ))}\r\n\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </div>\r\n                <div className=\"title\" >\r\n                    <img src=\"./images/logo.png\" alt=\"\"/>\r\n                </div>\r\n                <div className=\"icons\">\r\n                    <div onClick={() => {\r\n                        window.location.pathname = \"/\";\r\n                        localStorage.removeItem(\"admin\")\r\n                        localStorage.removeItem(\"token\")\r\n                    }} className=\"exit\"><img src=\"./images/admin/logout.png\" alt=\"\"/></div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"bottom-box\">\r\n                <Routes>\r\n                    {\r\n                        adminPageRoutes.map((route, index) => (\r\n                            <Route key={index} {...route} />\r\n                        ))\r\n                    }\r\n                </Routes>\r\n            </div>\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport default Admin","import {useEffect} from \"react\";\n\nexport const useOnKeyPress = (callback,targetKey) =>{\n    useEffect(()=>{\n        const keyPressHandler = (event)=>{\n            if (event.key === targetKey){\n                callback()\n            }\n        };\n\n        window.addEventListener('keydown',keyPressHandler);\n        return () =>{\n            window.removeEventListener('keydown', keyPressHandler)\n        }\n    },[callback, targetKey]);\n};","import {useContext, useEffect, useState} from \"react\";\r\nimport \"./style.scss\";\r\nimport axios from \"axios\";\r\nimport {MyContext} from \"../App/App\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {useOnKeyPress} from \"./useOnKeyPress\";\r\n\r\nconst LoginAdmin = () => {\r\n    let value = useContext(MyContext);\r\n    const navigate = useNavigate();\r\n    const [phone, setPhone] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const HandleLogin = () => {\r\n        if (phone.trim().length > 0 && password.trim().length > 0) {\r\n            let user = {\r\n                username: phone,\r\n                password\r\n            };\r\n            axios.post(`${value.url}/dashboard/login/`, user).then((response) => {\r\n                localStorage.setItem(\"admin\", response.data.user)\r\n                localStorage.setItem(\"token\", response.data.token);\r\n                window.location.pathname = '/';\r\n                localStorage.setItem(\"lng\", \"uz\")\r\n            }).catch((error) => {\r\n                if (error.response.status === 404) alert(\"Bu foydalanuvchi topilmadi\");\r\n            });\r\n\r\n        } else alert(\"Formani to'ldiring\")\r\n\r\n    };\r\n\r\n    const Clear = () => {\r\n        setPhone(\"\");\r\n        setPassword(\"\");\r\n    };\r\n\r\n    useOnKeyPress(HandleLogin, 'Enter');\r\n    useOnKeyPress(Clear, 'Delete');\r\n\r\n    return <div className=\"login-container\">\r\n\r\n        <div className=\"login-card\">\r\n            <div className=\"logo\">\r\n                <img src=\"./images/logo.png\" alt=\"\"/>\r\n            </div>\r\n            <div className=\"input_box\">\r\n                <input value={phone} onChange={(e) => setPhone(e.target.value)} placeholder=\"Username\" type=\"text\"/>\r\n                <input value={password} onChange={(e) => setPassword(e.target.value)} placeholder=\"Password\"\r\n                       type=\"password\"/>\r\n            </div>\r\n\r\n            <div onClick={HandleLogin} onKeyUp={() => console.log(\"enter\")} className=\"btn-login\">\r\n                Kirish\r\n            </div>\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport default LoginAdmin;","import \"./adminHome.scss\";\n\n\nconst LoaderAdmin = ()=>{\n    return <div className=\"loader-admin\">\n        <div className=\"lds-spinner\">\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n        </div>\n    </div>\n};\n\nexport default LoaderAdmin","import {useEffect, useRef, useState, useContext} from \"react\";\r\nimport {CSSTransition} from \"react-transition-group\";\r\nimport {useFormik} from \"formik\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport i18next from \"i18next\";\r\nimport axios from \"axios\";\r\nimport {\r\n    TextField,\r\n    MenuItem,\r\n    InputLabel,\r\n    FormControl,\r\n    Select,\r\n    OutlinedInput,\r\n    Checkbox,\r\n    ListItemText\r\n} from \"@mui/material\";\r\nimport \"./style.scss\"\r\nimport {MyContext} from \"../../App/App\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport LoaderAdmin from \"../loader-admin/LoaderAdmin\";\r\n\r\nconst Drivers = () => {\r\n    const {t} = useTranslation();\r\n    let value = useContext(MyContext);\r\n    const [modalShow, setModalShow] = useState({show: false, status: false});\r\n    const nodeRef = useRef(null);\r\n    const ref = useRef(null);\r\n    const [getSearchText, setGetSearchText] = useState(\"\");\r\n    const [driverPhoto, setDriverPhoto] = useState(null);\r\n    const [carInformation, setCarInformation] = useState([]);\r\n    const [driversList, setDriversList] = useState([]);\r\n    const [driverId, setDriverId] = useState(\"\");\r\n    const [reason, setReason] = useState(\"\");\r\n    const [loader, setLoader] = useState(false);\r\n\r\n    const [car_serviceId, setCarServiceId] = useState([])\r\n    const [car_categoriesId, setCarCategoriesId] = useState([])\r\n\r\n    const [regions, setRegions] = useState([])\r\n\r\n    const [luggage, setLuggage] = useState(\"male\");\r\n    const [profileImage, setProfileImage] = useState(null);\r\n    const [car_images, setCar_images] = useState([]);\r\n    const [base_car_images, setBase_Car_images] = useState([]);\r\n\r\n    const [doc_images, setDocImages] = useState([]);\r\n    const [base_doc_images, setBaseDocImages] = useState([]);\r\n\r\n    const [car_make, setCar_make] = useState([]);\r\n    const [car_model, setCar_model] = useState([]);\r\n    const [car_colors, setCar_colors] = useState([]);\r\n    const [extra_services, setExtra_services] = useState([]);\r\n    const [extra_servicesList, setExtra_servicesList] = useState([]);\r\n\r\n    const [car_categories, setCar_categories] = useState([]);\r\n    const [car_service, setCar_service] = useState([]);\r\n\r\n    const ITEM_HEIGHT = 48;\r\n    const ITEM_PADDING_TOP = 8;\r\n    const MenuProps = {\r\n        PaperProps: {\r\n            style: {\r\n                maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n                width: 250,\r\n            },\r\n        },\r\n    };\r\n\r\n    const worksPage = 100;\r\n    const [pageNumber, setPageNumber] = useState(0);\r\n    const pagesVisited = pageNumber * worksPage;\r\n    const pageCount = Math.ceil(driversList.length / worksPage);\r\n\r\n    const validate = (values) => {\r\n        const errors = {};\r\n\r\n        if (!values.first_name) {\r\n            errors.first_name = \"Required\";\r\n        }\r\n\r\n        if (!values.last_name) {\r\n            errors.last_name = \"Required\";\r\n        }\r\n\r\n        if (!values.phone) {\r\n            errors.phone = \"Required\";\r\n        }\r\n\r\n        if (!values.car_model) {\r\n            errors.car_model = \"Required\";\r\n        }\r\n\r\n        if (!values.car_color) {\r\n            errors.car_color = \"Required\";\r\n        }\r\n\r\n        if (!values.car_make) {\r\n            errors.car_make = \"Required\";\r\n        }\r\n\r\n        if (!values.car_number) {\r\n            errors.car_number = \"Required\";\r\n        }\r\n\r\n        if (!values.extra_services) {\r\n            errors.extra_services = \"Required\";\r\n        }\r\n\r\n        if (!values.seat_count) {\r\n            errors.seat_count = \"Required\";\r\n        }\r\n\r\n        if (!values.from_region) {\r\n            errors.from_region = \"Required\";\r\n        }\r\n\r\n        if (!values.to_region) {\r\n            errors.to_region = \"Required\";\r\n        }\r\n\r\n        return errors;\r\n    };\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            phone: \"\",\r\n            first_name: \"\",\r\n            last_name: \"\",\r\n            birth_date: \"\",\r\n            car_number: \"\",\r\n            car_color: \"\",\r\n            car_make: \"\",\r\n            car_model: \"\",\r\n            extra_services: [],\r\n            seat_count: \"\",\r\n            from_region: \"\",\r\n            to_region: \"\"\r\n        },\r\n        validate,\r\n        onSubmit: (values) => {\r\n            sendAllInfo()\r\n        },\r\n    });\r\n\r\n    useEffect(() => {\r\n        getDrivers()\r\n        axios.get(`${value.url}/dashboard/carcategory/`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setCar_categories(response.data);\r\n        })\r\n\r\n        axios.get(`${value.url}/dashboard/carservice/`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setCar_service(response.data);\r\n        })\r\n\r\n        axios.get(`${value.url}/dashboard/carmake/`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setCar_make(response.data);\r\n        })\r\n\r\n        axios.get(`${value.url}/dashboard/carcolor/`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setCar_colors(response.data);\r\n        })\r\n\r\n        axios.get(`${value.url}/dashboard/extraservices/`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setExtra_servicesList(response.data);\r\n        })\r\n\r\n\r\n        axios.get(`${value.url}/dashboard/region/`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setRegions(response.data);\r\n        })\r\n\r\n    }, []);\r\n\r\n    const getDrivers = () => {\r\n        setLoader(true);\r\n\r\n        axios.get(`${value.url}/dashboard/driver/`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setDriversList(response.data);\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        }).finally(() => {\r\n            setLoader(false);\r\n        });\r\n    }\r\n\r\n    const getCarNames = (id) => {\r\n        axios.get(`${value.url}/dashboard/carmake/${id}/`, {\r\n            headers: {\r\n                \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\r\n            }\r\n        }).then((response) => {\r\n            setCar_model(response.data);\r\n        })\r\n    }\r\n\r\n    const changePage = ({selected}) => {\r\n        setPageNumber(selected)\r\n\r\n        setTimeout(() => {\r\n            ref.current?.scrollIntoView({behavior: \"smooth\"});\r\n        }, 500);\r\n    };\r\n\r\n    const getInputPhoto = (event) => {\r\n        const file = event.target.files[0];\r\n        setProfileImage(file);\r\n    };\r\n\r\n    const sendAllInfo = () => {\r\n        const formData = new FormData();\r\n        let user = {\r\n            role: \"driver\",\r\n            first_name: formik.values.first_name,\r\n            last_name: formik.values.last_name,\r\n            phone: formik.values.phone,\r\n            gender: luggage,\r\n            is_verified: true,\r\n            is_confirmed: true\r\n        }\r\n        let driver = {\r\n            car_make: formik.values.car_make,\r\n            car_model: formik.values.car_model,\r\n            car_color: formik.values.car_color,\r\n            car_number: formik.values.car_number,\r\n            seat_count: formik.values.seat_count,\r\n            birth_date: formik.values.birth_date,\r\n            extra_services: formik.values.extra_services,\r\n            from_region: formik.values.from_region,\r\n            to_region: formik.values.to_region\r\n        }\r\n\r\n        for (let key in user) {\r\n            formData.append(key, user[key]);\r\n        }\r\n\r\n        for (let key in driver) {\r\n            if (Array.isArray(driver[key])) {\r\n                driver[key].forEach(value => {\r\n                    formData.append(`driver.${key}`, value);\r\n                });\r\n            } else {\r\n                formData.append(`driver.${key}`, driver[key]);\r\n            }\r\n        }\r\n\r\n        if (profileImage) {\r\n            formData.append('profile_image', profileImage);\r\n        }\r\n\r\n        if (!driverId) {\r\n            axios.post(`${value.url}/dashboard/driver/`, formData,\r\n                {\r\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n                }).then((response) => {\r\n                setModalShow({status: \"\", show: false})\r\n                getDrivers()\r\n                formik.resetForm();\r\n            })\r\n        }\r\n\r\n        if (driverId) {\r\n            axios.patch(`${value.url}/dashboard/driver/${driverId}/`, formData,\r\n                {\r\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n                }).then((response) => {\r\n                setModalShow({status: \"\", show: false})\r\n                getDrivers()\r\n                formik.resetForm();\r\n            })\r\n        }\r\n    }\r\n\r\n    const editInfo = (id) => {\r\n\r\n        axios.get(`${value.url}/dashboard/driver/${id}/`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            formik.setValues({\r\n                phone: response.data.user.phone,\r\n                first_name: response.data.user.first_name,\r\n                last_name: response.data.user.last_name,\r\n                birth_date: response.data.birth_date,\r\n                car_number: response.data.car_number,\r\n                car_color: response.data.car_color.id,\r\n                car_make: response.data.car_make.id,\r\n                car_model: response.data.car_model.id,\r\n                extra_services: response.data.extra_services.map(service => service.id),\r\n                seat_count: response.data.seat_count,\r\n                from_region: response.data.from_region.id,\r\n                to_region: response.data.to_region.id,\r\n            });\r\n            setLuggage(response.data.user.gender)\r\n            getCarNames(response.data.car_make.id)\r\n        })\r\n        setDriverId(id)\r\n    }\r\n\r\n    const blockDriver = (status) => {\r\n        if (status === \"block\" && reason.trim().length > 0) {\r\n            axios.post(`${value.url}/dashboard/driver/block-driver/`,\r\n                {driver_id: driverId, reason}, {\r\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n                }).then((response) => {\r\n                setModalShow({status: \"\", show: false})\r\n                getDrivers()\r\n                setReason(\"\")\r\n            })\r\n        } else alert(\"Bloklash sababini kiriting!\")\r\n\r\n        if (status === \"unblock\") {\r\n            axios.post(`${value.url}/dashboard/driver/unblock-driver/`,\r\n                {driver_id: driverId}, {\r\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n                }).then((response) => {\r\n                setModalShow({status: \"\", show: false})\r\n                getDrivers()\r\n            })\r\n        }\r\n    }\r\n\r\n    const handleCheckboxChangeService = (serviceId) => {\r\n        setCarServiceId((prevSelected) =>\r\n            prevSelected.includes(serviceId)\r\n                ? prevSelected.filter((id) => id !== serviceId)\r\n                : [...prevSelected, serviceId]\r\n        );\r\n    };\r\n    const handleCheckboxChangeCategory = (serviceId) => {\r\n        setCarCategoriesId((prevSelected) =>\r\n            prevSelected.includes(serviceId)\r\n                ? prevSelected.filter((id) => id !== serviceId)\r\n                : [...prevSelected, serviceId]\r\n        );\r\n    };\r\n    const verify = () => {\r\n        let driver = {\r\n            driver_id: driverId,\r\n            available_services: car_serviceId,\r\n            available_categories: car_categoriesId\r\n        }\r\n\r\n        axios.post(`${value.url}/dashboard/driver/confirm-driver/`,\r\n            driver, {\r\n                headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n            }).then((response) => {\r\n            getDrivers()\r\n            setModalShow({status: \"\", show: false})\r\n        })\r\n\r\n    }\r\n\r\n    const getInformation = (id) => {\r\n        setModalShow({show: true, status: \"car-information\"});\r\n\r\n        axios.get(`${value.url}/dashboard/driver/${id}/`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setCarInformation(response.data);\r\n            console.log(response.data)\r\n        })\r\n    }\r\n\r\n    const handleAddImage = (e) => {\r\n        const file = e.target.files[0];\r\n        if (file) {\r\n            const reader = new FileReader();\r\n            reader.onloadend = () => {\r\n                setCar_images((prevImages) => [\r\n                    ...prevImages,\r\n                    {\r\n                        preview: reader.result,\r\n                        file: file\r\n                    }\r\n                ]);\r\n            };\r\n            reader.readAsDataURL(file);\r\n        }\r\n        e.target.value = null;\r\n    };\r\n\r\n    const getCarImages = (id) => {\r\n        setModalShow({show: true, status: \"car-photos\"});\r\n        setDriverId(id)\r\n        axios.post(`${value.url}/dashboard/driver/car-images/`, {driver_id: id}, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setBase_Car_images(response.data)\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    const handleDeleteImageBase = (id) => {\r\n        axios.post(`${value.url}/dashboard/driver/delete-car-image/`, {driver_car_image: id}, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            getCarImages(driverId)\r\n        })\r\n    };\r\n\r\n    const handleDeleteImage = (index) => {\r\n        setCar_images((prevImages) => prevImages.filter((_, i) => i !== index));\r\n    };\r\n\r\n    const addCar_Images = () => {\r\n        const formData = new FormData();\r\n        formData.append('driver', driverId);\r\n\r\n        car_images.forEach((image, index) => {\r\n            formData.append('car_images', image.file);\r\n        });\r\n\r\n        axios.post(`${value.url}/dashboard/driver/update-image/`, formData, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setModalShow({status: \"\", show: false})\r\n            setCar_images([])\r\n        })\r\n    }\r\n\r\n    const handleAddImageDoc = (e) => {\r\n        const file = e.target.files[0];\r\n        if (file) {\r\n            const reader = new FileReader();\r\n            reader.onloadend = () => {\r\n                setDocImages((prevImages) => [\r\n                    ...prevImages,\r\n                    {\r\n                        preview: reader.result,\r\n                        file: file\r\n                    }\r\n                ]);\r\n            };\r\n            reader.readAsDataURL(file);\r\n        }\r\n        e.target.value = null;\r\n    };\r\n\r\n    const getDocsImages = (id) => {\r\n        setModalShow({show: true, status: \"car-docs\"});\r\n        setDriverId(id)\r\n        axios.post(`${value.url}/dashboard/driver/document-images/`, {driver_id: id}, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setBaseDocImages(response.data)\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    const handleDeleteImageDocsBase = (id) => {\r\n        axios.post(`${value.url}/dashboard/driver/delete-document-image/`, {driver_document_image: id}, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            getDocsImages(driverId)\r\n        })\r\n    };\r\n\r\n    const handleDeleteImageDocs = (index) => {\r\n        setDocImages((prevImages) => prevImages.filter((_, i) => i !== index));\r\n    };\r\n\r\n    const addCar_Images_Docs = () => {\r\n        const formData = new FormData();\r\n        formData.append('driver', driverId);\r\n\r\n        doc_images.forEach((image, index) => {\r\n            formData.append('document_images', image.file);\r\n        });\r\n\r\n        axios.post(`${value.url}/dashboard/driver/update-image/`, formData, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setModalShow({status: \"\", show: false})\r\n            setCar_images([])\r\n            setDocImages([])\r\n        })\r\n    }\r\n\r\n\r\n    const productList = driversList.slice(pagesVisited, pagesVisited + worksPage)\r\n        .filter((item) => {\r\n            const searchText = getSearchText.toString().toLowerCase().replace(/\\s+/g, '').replace(/\\+/g, '');\r\n            const phoneNumber = item.phone.toString().toLowerCase().replace(/\\s+/g, '').replace(/\\+/g, '');\r\n            return searchText === \"\" || phoneNumber.includes(searchText);\r\n        }).map((item, index) => {\r\n            return <tr key={index}>\r\n                <td>{index + 1}</td>\r\n                <td className=\"driver-wrapper\">\r\n                    <div className=\"icon-driver\">\r\n                        <img onClick={() => {\r\n                            setModalShow({show: true, status: \"driver-photo\"});\r\n                            setDriverPhoto(item.profile_image)\r\n                        }} src={item.profile_image} alt=\"\"/>\r\n                    </div>\r\n                    <div className=\"text-driver\">\r\n                        <div className=\"name\">\r\n                            {item.user_name && item.user_name}\r\n                        </div>\r\n                        <div className=\"phone\">\r\n                            {item.phone && item.phone}\r\n                        </div>\r\n                    </div>\r\n                </td>\r\n                <td>\r\n                    {item.from_region && item.from_region.translations[i18next.language].name}\r\n                    --\r\n                    {item.to_region && item.to_region.translations[i18next.language].name}\r\n                </td>\r\n                <td>\r\n                    {item.car_color && item.car_color.translations[i18next.language].name}&nbsp;\r\n                    {item.car_make && item.car_make.translations[i18next.language].name} &nbsp;\r\n                    {item.car_model && item.car_model.translations[i18next.language].name}\r\n                </td>\r\n                <td>\r\n                    {item.car_number && item.car_number}\r\n                </td>\r\n\r\n                <td>\r\n                    <div className=\"icon\">\r\n                        <img onClick={() => getInformation(item.id)} src=\"./images/admin/sport-car.png\" alt=\"\"/>\r\n                    </div>\r\n                </td>\r\n\r\n                <td>\r\n                    <div className=\"icon\">\r\n                        <img onClick={() => getCarImages(item.id)} src=\"./images/admin/car-photo.png\" alt=\"\"/>\r\n                    </div>\r\n                </td>\r\n                <td>\r\n                    <div className=\"icon\">\r\n                        <img onClick={() => getDocsImages(item.id)} src=\"./images/admin/document.png\" alt=\"\"/>\r\n                    </div>\r\n                </td>\r\n\r\n                <td>\r\n                    <div className={item.is_confirmed ? \"icon-check\" : \"icon-check disablet\"}>\r\n                        <img onClick={() => {\r\n                            setModalShow({show: true, status: \"driver-service\"});\r\n                            setDriverId(item.id)\r\n                            setCarServiceId(item.available_services)\r\n                            setCarCategoriesId(item.available_categories)\r\n                        }} src=\"./images/admin/check.png\" alt=\"\"/>\r\n                    </div>\r\n                </td>\r\n                <td>\r\n                    <div className={item.is_block ? \"icon-check\" : \"icon-check disablet\"}>\r\n                        <img onClick={() => {\r\n                            setModalShow({show: true, status: \"blocked\"});\r\n                            if (item.is_block) {\r\n                                setReason(item.reason)\r\n                            }\r\n                            setDriverId(item.id)\r\n                        }} src=\"./images/admin/block.png\" alt=\"block\"/>\r\n\r\n                        {item.reason && item.is_block && <div className=\"reason-block\">\r\n                            <img src=\"./images/admin/warning.png\" alt=\"\"/>\r\n                            <div className=\"text\">\r\n                                {item.reason}\r\n                            </div>\r\n                        </div>}\r\n\r\n                    </div>\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <div className=\"edit-icon\">\r\n                    <img onClick={() => {\r\n                        setModalShow({show: true, status: \"edit-driver\"});\r\n                        editInfo(item.id)\r\n                    }} src=\"./images/admin/edit-tools.png\" alt=\"\"/>\r\n                </div>\r\n            </tr>\r\n        });\r\n\r\n    return <div className=\"drivers-container\">\r\n        <CSSTransition\r\n            in={modalShow.show}\r\n            nodeRef={nodeRef}\r\n            timeout={300}\r\n            classNames=\"alert\"\r\n            unmountOnExit\r\n        >\r\n            <div className=\"modal-sloy\">\r\n                <div ref={nodeRef} className=\"modal-card\">\r\n\r\n                    {modalShow.status === \"add-driver\" && (\r\n                        <div className=\"add-driver\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img\r\n                                    onClick={() => {\r\n                                        setModalShow({status: \"\", show: false})\r\n                                        formik.resetForm();\r\n                                    }}\r\n                                    src=\"./images/admin/x.png\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"title\">Haydovchi qo'shish</div>\r\n\r\n                            <div className=\"title-form\">Haydovchi ma'lumotlari:</div>\r\n\r\n                            <div className=\"form-container\">\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides-file\">\r\n                                        <input onChange={getInputPhoto} type=\"file\"/>\r\n                                        <div className={`sloy-image ${profileImage ? \"active\" : \"\"}`}>\r\n                                            Profil rasmi\r\n                                            <img src=\"./images/admin/image.png\" alt=\"\"/>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.first_name === \"Required\"}\r\n                                            value={formik.values.first_name}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"first_name\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Ism\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.last_name === \"Required\"}\r\n                                            value={formik.values.last_name}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"last_name\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Familiya\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.phone === \"Required\"}\r\n                                            value={formik.values.phone}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"phone\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Telefon raqam\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                    <div className=\"select-sides-time\">\r\n                                        <label htmlFor=\"\">Tug'ilgan sana:</label>\r\n                                        <input\r\n                                            className={`working_time ${formik.errors.birth_date === \"Required\" ? \"working_time_required\" : \"\"}`}\r\n                                            name=\"birth_date\" onChange={formik.handleChange}\r\n                                            value={formik.values.birth_date}\r\n                                            type=\"date\"/>\r\n                                    </div>\r\n                                    <div className=\"select-sides\">\r\n                                        <div className=\"title-on\">\r\n                                            Jinsi:\r\n                                        </div>\r\n                                        <div className=\"on-of\">\r\n                                            <div onClick={() => setLuggage(\"male\")}\r\n                                                 className={`of ${luggage === \"male\" ? \"on\" : \"\"}`}>\r\n                                                Erkak\r\n                                            </div>\r\n                                            <div onClick={() => setLuggage(\"female\")}\r\n                                                 className={`of ${luggage === \"female\" ? \"on\" : \"\"}`}>\r\n                                                Ayol\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"title-form\">Avtomobil ma'lumotlari:</div>\r\n\r\n                            <div className=\"form-container\">\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Avtomobil modeli</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.car_make === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.car_make}\r\n                                                name=\"car_make\"\r\n                                                label=\"Avtomobil modeli\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {\r\n                                                    car_make.map((item, index) => {\r\n                                                        return <MenuItem onClick={() => getCarNames(item.id)}\r\n                                                                         key={index}\r\n                                                                         value={item.id}>\r\n                                                            {item.translations[i18next.language].name}\r\n                                                        </MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Avtomobil nomi</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.car_model === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.car_model}\r\n                                                name=\"car_model\"\r\n                                                label=\"Avtomobil nomi\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {\r\n                                                    car_model.map((item, index) => {\r\n                                                        return <MenuItem key={index}\r\n                                                                         value={item.id}>\r\n                                                            {item.translations[i18next.language].name}\r\n                                                        </MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.car_number === \"Required\"}\r\n                                            value={formik.values.car_number}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"car_number\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Avtomobil raqami\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"select-box \">\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Avtomobil rangi</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.car_color === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                name=\"car_color\"\r\n                                                label=\"Avtomobil rangi\"\r\n                                                value={formik.values.car_color}\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {\r\n                                                    car_colors.map((item, index) => {\r\n                                                        return <MenuItem key={index}\r\n                                                                         value={item.id}>\r\n                                                            {item.translations[i18next.language].name}\r\n                                                        </MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <TextField\r\n                                                id=\"seat_count\"\r\n                                                name=\"seat_count\"\r\n                                                label=\"O‘rindiqlar soni\"\r\n                                                type=\"number\"\r\n                                                value={formik.values.seat_count}\r\n                                                onChange={formik.handleChange}\r\n                                                error={formik.touched.seat_count && Boolean(formik.errors.seat_count)}\r\n                                                helperText={formik.touched.seat_count && formik.errors.seat_count}\r\n                                                inputProps={{min: 1}}\r\n                                                fullWidth\r\n                                                size=\"small\"\r\n                                            />\r\n                                        </FormControl>\r\n                                    </div>\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, width: \"100%\"}} className=\"selectMui\" size=\"small\">\r\n                                            <InputLabel id=\"demo-multiple-checkbox-label\">Xizmatlar</InputLabel>\r\n\r\n                                            <Select\r\n                                                error={formik.errors.extra_services === \"Required\"}\r\n                                                name=\"extra_services\"\r\n                                                labelId=\"demo-multiple-checkbox-label\"\r\n                                                id=\"demo-multiple-checkbox\"\r\n                                                multiple\r\n                                                value={formik.values.extra_services}\r\n                                                onChange={(event) => {\r\n                                                    const {value} = event.target;\r\n                                                    formik.setFieldValue(\r\n                                                        \"extra_services\",\r\n                                                        typeof value === 'string' ? value.split(',') : value\r\n                                                    );\r\n                                                }}\r\n                                                input={<OutlinedInput label=\"Xizmatlar\"/>}\r\n                                                renderValue={(selected) =>\r\n                                                    selected\r\n                                                        .map((id) => {\r\n                                                            const item = extra_servicesList.find(i => i.id === id);\r\n                                                            return item ? item.translations[i18next.language].name : '';\r\n                                                        })\r\n                                                        .join(', ')\r\n                                                }\r\n                                                MenuProps={MenuProps}\r\n                                            >\r\n                                                {extra_servicesList.map((item) => (\r\n                                                    <MenuItem key={item.id} value={item.id}>\r\n                                                        <Checkbox\r\n                                                            checked={formik.values.extra_services.includes(item.id)}\r\n                                                        />\r\n                                                        <ListItemText\r\n                                                            primary={item.translations[i18next.language].name}\r\n                                                        />\r\n                                                    </MenuItem>\r\n                                                ))}\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"title-form\">Asosan qaysi yo'nalishda harakat qilasiz:</div>\r\n                            <div className=\"form-container\">\r\n                                <div className=\"select-box start\">\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Qayerdan</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.from_region === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.from_region}\r\n                                                name=\"from_region\"\r\n                                                label=\"Qayerdan\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {\r\n                                                    regions.map((item, index) => {\r\n                                                        return <MenuItem key={index}\r\n                                                                         value={item.id}>\r\n                                                            {item.translations[i18next.language].name}\r\n                                                        </MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Qayerga</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.to_region === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.to_region}\r\n                                                name=\"to_region\"\r\n                                                label=\"Qayerga\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {\r\n                                                    regions.map((item, index) => {\r\n                                                        return <MenuItem key={index}\r\n                                                                         value={item.id}>\r\n                                                            {item.translations[i18next.language].name}\r\n                                                        </MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div onClick={() => {\r\n                                formik.handleSubmit()\r\n                            }} className=\"add-btn\">\r\n                                <img src=\"./images/admin/add.png\" alt=\"\"/>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalShow.status === \"driver-photo\" && (\r\n                        <div className=\"driver-photo\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img\r\n                                    onClick={() => setModalShow({status: \"\", show: false})}\r\n                                    src=\"./images/admin/x.png\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"photo\">\r\n                                <img src={driverPhoto} alt=\"\"/>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalShow.status === \"car-information\" && (\r\n                        <div className=\"car-information\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img onClick={() => setModalShow({status: \"\", show: false})}\r\n                                     src=\"./images/admin/x.png\"\r\n                                     alt=\"\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"title\">\r\n                                Avtomobil ma'lumotlari\r\n                            </div>\r\n                            {carInformation &&\r\n                                <div className=\"information\">\r\n                                    <div className=\"info\">\r\n                                        <div className=\"title\">Tugilgan sanasi:</div>\r\n                                        <div\r\n                                            className=\"text\">{carInformation.birth_date && carInformation.birth_date}</div>\r\n                                    </div>\r\n                                    <div className=\"info\">\r\n                                        <div className=\"title\">Jinsi:</div>\r\n                                        <div\r\n                                            className=\"text\">{carInformation.user && carInformation.user.gender === \"male\" ? \"Erkak\" : \"Ayol\"}</div>\r\n                                    </div>\r\n                                    <div className=\"info\">\r\n                                        <div className=\"title\">Reyting:</div>\r\n                                        <div\r\n                                            className=\"text\">{carInformation.user && carInformation.user.rate}</div>\r\n                                    </div>\r\n                                    <div className=\"info\">\r\n                                        <div className=\"title\">O'rindiqlar soni:</div>\r\n                                        <div\r\n                                            className=\"text\">{carInformation.seat_count && carInformation.seat_count}</div>\r\n                                    </div>\r\n                                    <div className=\"info\">\r\n                                        <div className=\"title\">Yakunlagan buyurtmalar:</div>\r\n                                        <div\r\n                                            className=\"text\">{carInformation.user && carInformation.user.finished_orders_count}</div>\r\n                                    </div>\r\n                                    <div className=\"info\">\r\n                                        <div className=\"title\">Qo'shimcha xizmatlar:</div>\r\n                                        <div className=\"text\">\r\n                                            {carInformation.extra_services && carInformation.extra_services.map((item, index) => {\r\n                                                return <span key={index}>\r\n                                                    {item.translations[i18next.language].name},\r\n                                                </span>\r\n                                            })}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>}\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalShow.status === \"blocked\" && (\r\n                        <div className=\"blocked\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img onClick={() => {\r\n                                    setModalShow({status: \"\", show: false})\r\n                                    setReason(\"\")\r\n                                }}\r\n                                     src=\"./images/admin/x.png\"\r\n                                     alt=\"\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"title\">\r\n                                Haydovchini bloklash\r\n                            </div>\r\n\r\n                            <div className=\"reason-text\">\r\n                                <textarea value={reason} onChange={(e) => setReason(e.target.value)}\r\n                                          placeholder=\"Blok qilish sababini kiriting...\" name=\"reason\"\r\n                                          id=\"reason\"></textarea>\r\n\r\n                                <div className=\"buttons\">\r\n                                    <div onClick={() => {\r\n                                        blockDriver(\"unblock\")\r\n                                    }}\r\n                                         className=\"cancel\">Bekor qilish\r\n                                    </div>\r\n\r\n                                    <div onClick={() => {\r\n                                        blockDriver(\"block\")\r\n                                    }} className=\"success\">Bloklash\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalShow.status === \"edit-driver\" && (\r\n                        <div className=\"edit-driver\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img\r\n                                    onClick={() => {\r\n                                        setModalShow({status: \"\", show: false})\r\n                                        formik.resetForm();\r\n                                    }}\r\n                                    src=\"./images/admin/x.png\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"title\">Haydovchi qo'shish</div>\r\n\r\n                            <div className=\"title-form\">Haydovchi ma'lumotlari:</div>\r\n\r\n                            <div className=\"form-container\">\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides-file\">\r\n                                        <input onChange={getInputPhoto} type=\"file\"/>\r\n                                        <div className={`sloy-image ${profileImage ? \"active\" : \"\"}`}>\r\n                                            Profil rasmi\r\n                                            <img src=\"./images/admin/image.png\" alt=\"\"/>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.first_name === \"Required\"}\r\n                                            value={formik.values.first_name}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"first_name\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Ism\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.last_name === \"Required\"}\r\n                                            value={formik.values.last_name}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"last_name\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Familiya\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.phone === \"Required\"}\r\n                                            value={formik.values.phone}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"phone\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Telefon raqam\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                    <div className=\"select-sides-time\">\r\n                                        <label htmlFor=\"\">Tug'ilgan sana:</label>\r\n                                        <input\r\n                                            className={`working_time ${formik.errors.birth_date === \"Required\" ? \"working_time_required\" : \"\"}`}\r\n                                            name=\"birth_date\" onChange={formik.handleChange}\r\n                                            value={formik.values.birth_date}\r\n                                            type=\"date\"/>\r\n                                    </div>\r\n                                    <div className=\"select-sides\">\r\n                                        <div className=\"title-on\">\r\n                                            Jinsi:\r\n                                        </div>\r\n                                        <div className=\"on-of\">\r\n                                            <div onClick={() => setLuggage(\"male\")}\r\n                                                 className={`of ${luggage === \"male\" ? \"on\" : \"\"}`}>\r\n                                                Erkak\r\n                                            </div>\r\n                                            <div onClick={() => setLuggage(\"famale\")}\r\n                                                 className={`of ${luggage === \"famale\" ? \"on\" : \"\"}`}>\r\n                                                Ayol\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"title-form\">Avtomobil ma'lumotlari:</div>\r\n\r\n                            <div className=\"form-container\">\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Avtomobil modeli</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.car_make === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.car_make}\r\n                                                name=\"car_make\"\r\n                                                label=\"Avtomobil modeli\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {\r\n                                                    car_make.map((item, index) => {\r\n                                                        return <MenuItem onClick={() => getCarNames(item.id)}\r\n                                                                         key={index}\r\n                                                                         value={item.id}>\r\n                                                            {item.translations[i18next.language].name}\r\n                                                        </MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Avtomobil nomi</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.car_model === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.car_model}\r\n                                                name=\"car_model\"\r\n                                                label=\"Avtomobil nomi\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {\r\n                                                    car_model.map((item, index) => {\r\n                                                        return <MenuItem key={index}\r\n                                                                         value={item.id}>\r\n                                                            {item.translations[i18next.language].name}\r\n                                                        </MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.car_number === \"Required\"}\r\n                                            value={formik.values.car_number}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"car_number\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Avtomobil raqami\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"select-box \">\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Avtomobil rangi</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.car_color === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                name=\"car_color\"\r\n                                                label=\"Avtomobil rangi\"\r\n                                                value={formik.values.car_color}\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {\r\n                                                    car_colors.map((item, index) => {\r\n                                                        return <MenuItem key={index}\r\n                                                                         value={item.id}>\r\n                                                            {item.translations[i18next.language].name}\r\n                                                        </MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <TextField\r\n                                                id=\"seat_count\"\r\n                                                name=\"seat_count\"\r\n                                                label=\"O‘rindiqlar soni\"\r\n                                                type=\"number\"\r\n                                                value={formik.values.seat_count}\r\n                                                onChange={formik.handleChange}\r\n                                                error={formik.touched.seat_count && Boolean(formik.errors.seat_count)}\r\n                                                helperText={formik.touched.seat_count && formik.errors.seat_count}\r\n                                                inputProps={{min: 1}}\r\n                                                fullWidth\r\n                                                size=\"small\"\r\n                                            />\r\n                                        </FormControl>\r\n                                    </div>\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, width: \"100%\"}} className=\"selectMui\" size=\"small\">\r\n                                            <InputLabel id=\"demo-multiple-checkbox-label\">Xizmatlar</InputLabel>\r\n\r\n                                            <Select\r\n                                                error={formik.errors.extra_services === \"Required\"}\r\n                                                name=\"extra_services\"\r\n                                                labelId=\"demo-multiple-checkbox-label\"\r\n                                                id=\"demo-multiple-checkbox\"\r\n                                                multiple\r\n                                                value={formik.values.extra_services}\r\n                                                onChange={(event) => {\r\n                                                    const {value} = event.target;\r\n                                                    formik.setFieldValue(\r\n                                                        \"extra_services\",\r\n                                                        typeof value === 'string' ? value.split(',') : value\r\n                                                    );\r\n                                                }}\r\n                                                input={<OutlinedInput label=\"Xizmatlar\"/>}\r\n                                                renderValue={(selected) =>\r\n                                                    selected\r\n                                                        .map((id) => {\r\n                                                            const item = extra_servicesList.find(i => i.id === id);\r\n                                                            return item ? item.translations[i18next.language].name : '';\r\n                                                        })\r\n                                                        .join(', ')\r\n                                                }\r\n                                                MenuProps={MenuProps}\r\n                                            >\r\n                                                {extra_servicesList.map((item) => (\r\n                                                    <MenuItem key={item.id} value={item.id}>\r\n                                                        <Checkbox\r\n                                                            checked={formik.values.extra_services.includes(item.id)}\r\n                                                        />\r\n                                                        <ListItemText\r\n                                                            primary={item.translations[i18next.language].name}\r\n                                                        />\r\n                                                    </MenuItem>\r\n                                                ))}\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"title-form\">Asosan qaysi yo'nalishda harakat qilasiz:</div>\r\n                            <div className=\"form-container\">\r\n                                <div className=\"select-box start\">\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Qayerdan</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.from_region === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.from_region}\r\n                                                name=\"from_region\"\r\n                                                label=\"Qayerdan\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {\r\n                                                    regions.map((item, index) => {\r\n                                                        return <MenuItem key={index}\r\n                                                                         value={item.id}>\r\n                                                            {item.translations[i18next.language].name}\r\n                                                        </MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Qayerga</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.to_region === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.to_region}\r\n                                                name=\"to_region\"\r\n                                                label=\"Qayerga\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {\r\n                                                    regions.map((item, index) => {\r\n                                                        return <MenuItem key={index}\r\n                                                                         value={item.id}>\r\n                                                            {item.translations[i18next.language].name}\r\n                                                        </MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div onClick={() => {\r\n                                formik.handleSubmit()\r\n                            }} className=\"add-btn\">\r\n                                <img src=\"./images/admin/checkmark.png\" alt=\"\"/>\r\n                            </div>\r\n\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalShow.status === \"driver-service\" && (\r\n                        <div className=\"driver-service\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img onClick={() => setModalShow({status: \"\", show: false})}\r\n                                     src=\"./images/admin/x.png\"\r\n                                     alt=\"\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"bottom-side\">\r\n                                <div className=\"left-side\">\r\n                                    <div className=\"title\">\r\n                                        Yo'nalish\r\n                                    </div>\r\n                                    <div className=\"form-wrapper\">\r\n                                        {\r\n                                            car_service.map((category, index) => (\r\n                                                <label key={index}>\r\n                                                    <input onChange={() => handleCheckboxChangeService(category.id)}\r\n                                                           checked={car_serviceId.includes(category.id)} type=\"checkbox\"\r\n                                                           name=\"agree\"/>\r\n                                                    {category.translations[i18next.language].name}\r\n                                                </label>\r\n                                            ))\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"right-side\">\r\n                                    <div className=\"title\">\r\n                                        Tariflar\r\n                                    </div>\r\n                                    <div className=\"form-wrapper\">\r\n                                        {\r\n                                            car_categories.map((category, index) => (\r\n                                                <label key={index}>\r\n                                                    <input onChange={() => handleCheckboxChangeCategory(category.id)}\r\n                                                           checked={car_categoriesId.includes(category.id)}\r\n                                                           type=\"checkbox\"\r\n                                                           name=\"agree\"/>\r\n                                                    {category.translations[i18next.language].name}\r\n                                                </label>\r\n                                            ))\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div onClick={verify} className=\"btn-success\">\r\n                                Tasdiqlash\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalShow.status === \"car-photos\" && (\r\n                        <div className=\"car-photos\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img onClick={() => setModalShow({status: \"\", show: false})}\r\n                                     src=\"./images/admin/x.png\"\r\n                                     alt=\"\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"title\">\r\n                                Avtomobil rasmlari\r\n                            </div>\r\n                            <div className=\"form-wrapper\">\r\n                                {base_car_images.map((image, index) => (\r\n                                    <div key={index} className=\"photo\">\r\n                                        <img src={image.image} alt={`car-${index}`}/>\r\n                                        <div className=\"del-icon\" onClick={() => handleDeleteImageBase(image.id)}>\r\n                                            <img src=\"./images/admin/delete.png\" alt=\"delete\"/>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                                {car_images.map((image, index) => (\r\n                                    <div key={index} className=\"photo\">\r\n                                        <img src={image.preview} alt={`car-${index}`}/>\r\n                                        <div className=\"del-icon\" onClick={() => handleDeleteImage(index)}>\r\n                                            <img src=\"./images/admin/delete.png\" alt=\"delete\"/>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n\r\n                                <div className=\"add-icon\">\r\n                                    <input onChange={handleAddImage} type=\"file\"/>\r\n                                    <img src=\"./images/admin/image.png\" alt=\"\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div onClick={addCar_Images} className=\"btn-success\">\r\n                                Tasdiqlash\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalShow.status === \"car-docs\" && (\r\n                        <div className=\"car-docs\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img onClick={() => setModalShow({status: \"\", show: false})}\r\n                                     src=\"./images/admin/x.png\"\r\n                                     alt=\"\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"title\">\r\n                                Xujjatlar rasmlari\r\n                            </div>\r\n                            <div className=\"form-wrapper\">\r\n                                {base_doc_images.map((image, index) => (\r\n                                    <div key={index} className=\"photo\">\r\n                                        <img src={image.image} alt={`car-${index}`}/>\r\n                                        <div className=\"del-icon\" onClick={() => handleDeleteImageDocsBase(image.id)}>\r\n                                            <img src=\"./images/admin/delete.png\" alt=\"delete\"/>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                                {doc_images.map((image, index) => (\r\n                                    <div key={index} className=\"photo\">\r\n                                        <img src={image.preview} alt={`car-${index}`}/>\r\n                                        <div className=\"del-icon\" onClick={() => handleDeleteImageDocs(index)}>\r\n                                            <img src=\"./images/admin/delete.png\" alt=\"delete\"/>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n\r\n                                <div className=\"add-icon\">\r\n                                    <input onChange={handleAddImageDoc} type=\"file\"/>\r\n                                    <img src=\"./images/admin/image.png\" alt=\"\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div onClick={addCar_Images_Docs} className=\"btn-success\">\r\n                                Tasdiqlash\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </CSSTransition>\r\n\r\n        <div className=\"header\">\r\n\r\n            <div className=\"search-box\">\r\n                <img src=\"./images/admin/search.png\" alt=\"\"/>\r\n                <input onChange={(e) => setGetSearchText(e.target.value)} placeholder=\"Telefon raqam kiriting\"\r\n                       type=\"text\"/>\r\n            </div>\r\n\r\n            <div onClick={() => {\r\n                setModalShow({show: true, status: \"add-driver\"});\r\n            }} className=\"add-driver-btn\">\r\n                Haydovchi qo'shish\r\n            </div>\r\n\r\n        </div>\r\n\r\n        {loader ? <LoaderAdmin/> : <div className=\"table-wrapper\">\r\n            <table>\r\n                <thead>\r\n                <tr>\r\n                    <th>№</th>\r\n                    <th>Haydovchi haqida</th>\r\n                    <th>Yo'nalish</th>\r\n                    <th>Mashina</th>\r\n                    <th>Mashina raqami</th>\r\n                    <th>Moshina ma'lumotlari</th>\r\n                    <th>Moshina rasmlari</th>\r\n                    <th>Dokument rasmlari</th>\r\n                    <th>Tasdiqlash</th>\r\n                    <th>Bloklash</th>\r\n                    <th></th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {productList}\r\n                </tbody>\r\n            </table>\r\n        </div>}\r\n\r\n\r\n        <div className=\"pagination\">\r\n            {driversList.length > 100 ? <ReactPaginate\r\n                breakLabel=\"...\"\r\n                previousLabel={<img src=\"./images/admin/prev.png\" alt=\"\"/>}\r\n                nextLabel={<img src=\"./images/admin/next.png\" alt=\"\"/>}\r\n                pageCount={pageCount}\r\n                onPageChange={changePage}\r\n                containerClassName={\"paginationBttns\"}\r\n                previousLinkClassName={\"previousBttn\"}\r\n                nextLinkClassName={\"nextBttn\"}\r\n                disabledCalassName={\"paginationDisabled\"}\r\n                activeClassName={\"paginationActive\"}\r\n            /> : \"\"}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Drivers","import \"./style.scss\"\nimport {useContext, useEffect, useRef, useState} from \"react\";\nimport axios from \"axios\";\nimport {MyContext} from \"../../App/App\";\n\nconst ChatDriver = () => {\n    let value = useContext(MyContext);\n    const bodyRef = useRef(null);\n    const [chats, setChats] = useState([]);\n    const [message, setMessage] = useState();\n    const [activeCHat, setActiveChat] = useState(null);\n    const [messageText, setMessageText] = useState(\"\");\n    const [getSearchText, setGetSearchText] = useState(\"\");\n    useEffect(() => {\n        if (bodyRef.current) {\n            bodyRef.current.scrollTop = bodyRef.current.scrollHeight;\n        }\n        axios.get(`${value.url}/dashboard/admin-chat/`, {\n            headers: {\n                Authorization: `Token ${localStorage.getItem(\"token\")}`,\n            },\n        }).then((response) => {\n            setChats(response.data);\n        })\n    });\n\n    const getMessage = (chat) => {\n        setActiveChat(chat)\n        axios.get(`${value.url}/dashboard/admin-chat/${chat.id}/`, {\n            headers: {\n                Authorization: `Token ${localStorage.getItem(\"token\")}`,\n            },\n        }).then((response) => {\n            setMessage(response.data);\n        })\n    }\n\n    const sendMessage = () => {\n        let data = {room: activeCHat.id, message: messageText}\n        axios.post(`${value.url}/dashboard/admin-message/`, data, {\n            headers: {\n                Authorization: `Token ${localStorage.getItem(\"token\")}`,\n            },\n        }).then((response) => {\n            setMessageText(\"\")\n            axios.get(`${value.url}/dashboard/admin-chat/${activeCHat.id}/`, {\n                headers: {\n                    Authorization: `Token ${localStorage.getItem(\"token\")}`,\n                },\n            }).then((response) => {\n                setMessage(response.data);\n            })\n        })\n    }\n\n    const delChat = (id) => {\n        axios.delete(`${value.url}/dashboard/admin-chat/${id}/`, {\n            headers: {\n                Authorization: `Token ${localStorage.getItem(\"token\")}`,\n            },\n        }).then((response) => {\n            setActiveChat(null);\n            axios.get(`${value.url}/dashboard/admin-chat/`, {\n                headers: {\n                    Authorization: `Token ${localStorage.getItem(\"token\")}`,\n                },\n            }).then((response) => {\n                setChats(response.data);\n            })\n        })\n    }\n\n    const verify = (id) => {\n        axios.post(`${value.url}/dashboard/admin-chat/close/`,\n            {chat_id: id}, {\n                headers: {\n                    Authorization: `Token ${localStorage.getItem(\"token\")}`,\n                },\n            }).then((response) => {\n            axios.get(`${value.url}/dashboard/admin-chat/`, {\n                headers: {\n                    Authorization: `Token ${localStorage.getItem(\"token\")}`,\n                },\n            }).then((response) => {\n                setChats(response.data);\n            })\n        })\n    }\n\n    return <div className=\"chat-driver\">\n        <div className=\"left\">\n            <div className=\"header\">\n                <div className=\"search-box\">\n                    <img src=\"./images/admin/search.png\" alt=\"\"/>\n                    <input value={getSearchText} onChange={(e) => setGetSearchText(e.target.value)}\n                           placeholder=\"Telefon raqam kiriting\" type=\"text\"/>\n                </div>\n            </div>\n            <div className=\"drivers-box\">\n                {chats\n                    .filter((item) => {\n                        const searchText = getSearchText.toString().toLowerCase().replace(/\\s+/g, '').replace(/\\+/g, '');\n                        const phoneNumber = item.user_phone.toString().toLowerCase().replace(/\\s+/g, '').replace(/\\+/g, '');\n                        return searchText === \"\" || phoneNumber.includes(searchText);\n                    }).map((chat, index) => {\n                        return <div key={index}\n                                    className={`driver ${activeCHat && activeCHat.id === chat.id ? \"active\" : \"\"}`}>\n                            <div className=\"photo\">\n                                <img src=\"./images/admin/user2.png\" alt=\"\"/>\n                            </div>\n                            <div onClick={() => getMessage(chat)} className=\"left-content\">\n                                <div className=\"name\">{chat.title}</div>\n                                <div className=\"number\">{chat.user_phone}</div>\n                            </div>\n                            <div className=\"buttons\">\n\n                                <img onClick={() => verify(chat.id)} className={chat.closed ? \"closed\" : \"disabled\"}\n                                     src=\"./images/admin/check.png\"\n                                     alt=\"check\"/>\n\n                                <img onClick={() => delChat(chat.id)} src=\"./images/admin/delete.png\" alt=\"delete\"/>\n                            </div>\n                        </div>\n                    })}\n            </div>\n        </div>\n\n        {activeCHat && <div className=\"right\">\n            <div className=\"top\">\n                <div className=\"photo\">\n                    <img src=\"./images/admin/user2.png\" alt=\"\"/>\n                </div>\n                <div className=\"left-content\">\n                    <div className=\"name\">{activeCHat && activeCHat.title}</div>\n                    <div className=\"number\">{activeCHat && activeCHat.user_phone}</div>\n                </div>\n            </div>\n            <div ref={bodyRef} className=\"body\">\n                <div className=\"scroll\">\n                    {message && message.map((message, index) => (\n                        <div key={index}\n                             className={message.author && message.author.is_admin ? \"message-my\" : \"message-driver\"}>\n                            <div className=\"message\">\n                                {message.author && <div className=\"name\">\n                                    {message.author.first_name} &ensp;\n                                    {message.author.last_name}\n                                </div>}\n                                {message.message}\n                                <div className=\"time\">\n                                    {message.time}\n                                </div>\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            </div>\n            <div className=\"bottom\">\n                <input value={messageText} onChange={(e) => setMessageText(e.target.value)} placeholder=\"Xabar...\"\n                       type=\"text\"/>\n                <div onClick={sendMessage} className=\"icon-send\">\n                    <img src=\"./images/admin/message.png\" alt=\"\"/>\n                </div>\n            </div>\n        </div>}\n\n    </div>\n}\n\nexport default ChatDriver;","import {useEffect, useRef, useState, useContext} from \"react\";\r\nimport {CSSTransition} from \"react-transition-group\";\r\nimport {useFormik} from \"formik\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport axios from \"axios\";\r\nimport {TextField} from \"@mui/material\";\r\nimport \"./style.scss\"\r\nimport {MyContext} from \"../../App/App\";\r\nimport LoaderAdmin from \"../loader-admin/LoaderAdmin\";\r\n\r\nconst Clients = () => {\r\n    let value = useContext(MyContext);\r\n    const [modalShow, setModalShow] = useState({show: false, status: false});\r\n    const nodeRef = useRef(null);\r\n    const ref = useRef(null);\r\n    const [luggage, setLuggage] = useState(\"male\");\r\n    const [getSearchText, setGetSearchText] = useState(\"\");\r\n    const [driverPhoto, setDriverPhoto] = useState(null);\r\n    const [driversList, setDriversList] = useState([]);\r\n    const [driverId, setDriverId] = useState(\"\");\r\n    const [reason, setReason] = useState(\"\");\r\n    const [profileImage, setProfileImage] = useState(null);\r\n    const [loader, setLoader] = useState(false);\r\n\r\n    const worksPage = 100;\r\n    const [pageNumber, setPageNumber] = useState(0);\r\n    const pagesVisited = pageNumber * worksPage;\r\n    const pageCount = Math.ceil(driversList.length / worksPage);\r\n\r\n    const validate = (values) => {\r\n        const errors = {};\r\n\r\n        if (!values.first_name) {\r\n            errors.first_name = \"Required\";\r\n        }\r\n\r\n        if (!values.last_name) {\r\n            errors.last_name = \"Required\";\r\n        }\r\n\r\n        if (!values.phone) {\r\n            errors.phone = \"Required\";\r\n        }\r\n        return errors;\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            first_name: \"\",\r\n            last_name: \"\",\r\n            phone: \"\",\r\n        },\r\n        validate,\r\n        onSubmit: (values) => {\r\n            sendAllInfo()\r\n        },\r\n    });\r\n\r\n    useEffect(() => {\r\n        getDrivers()\r\n    }, []);\r\n\r\n    const getDrivers = () => {\r\n        setLoader(true);\r\n        axios.get(`${value.url}/dashboard/client/`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setDriversList(response.data);\r\n        }).finally(() => {\r\n            setLoader(false);\r\n        });\r\n    }\r\n\r\n    const changePage = ({selected}) => {\r\n        setPageNumber(selected)\r\n\r\n        setTimeout(() => {\r\n            ref.current?.scrollIntoView({behavior: \"smooth\"});\r\n        }, 500);\r\n    };\r\n\r\n    const getInputPhoto = (event) => {\r\n        const file = event.target.files[0];\r\n        setProfileImage(file);\r\n    };\r\n\r\n    const sendAllInfo = () => {\r\n        const formData = new FormData();\r\n        let user = {\r\n            role: \"client\",\r\n            first_name: formik.values.first_name,\r\n            last_name: formik.values.last_name,\r\n            phone: formik.values.phone,\r\n            gender: luggage,\r\n        }\r\n        for (let key in user) {\r\n            formData.append(key, user[key]);\r\n        }\r\n        if (profileImage) {\r\n            formData.append('profile_image', profileImage);\r\n        }\r\n\r\n        if (!driverId) {\r\n            axios.post(`${value.url}/dashboard/client/`, formData,\r\n                {\r\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n                }).then((response) => {\r\n                setModalShow({status: \"\", show: false})\r\n                getDrivers()\r\n                formik.resetForm();\r\n            })\r\n        }\r\n\r\n        if (driverId) {\r\n            axios.patch(`${value.url}/dashboard/client/${driverId}/`, formData,\r\n                {\r\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n                }).then((response) => {\r\n                setModalShow({status: \"\", show: false})\r\n                getDrivers()\r\n                formik.resetForm();\r\n            })\r\n        }\r\n    }\r\n\r\n    const editInfo = (driver) => {\r\n        formik.setValues({\r\n            first_name: driver.first_name,\r\n            last_name: driver.last_name,\r\n            phone: driver.phone,\r\n        });\r\n        setLuggage(driver.gender)\r\n        setDriverId(driver.id)\r\n    }\r\n\r\n    const blockDriver = (status) => {\r\n        if (status === \"block\" && reason.trim().length > 0) {\r\n            axios.post(`${value.url}/dashboard/client/block-client/`,\r\n                {client_id: driverId, reason}, {\r\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n                }).then((response) => {\r\n                setModalShow({status: \"\", show: false})\r\n                getDrivers()\r\n                setReason(\"\")\r\n            })\r\n        } else alert(\"Bloklash sababini kiriting!\")\r\n\r\n        if (status === \"unblock\") {\r\n            axios.post(`${value.url}/dashboard/client/unblock-client/`,\r\n                {client_id: driverId}, {\r\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n                }).then((response) => {\r\n                setModalShow({status: \"\", show: false})\r\n                getDrivers()\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    const productList = driversList.slice(pagesVisited, pagesVisited + worksPage)\r\n        .filter((item) => {\r\n            const searchText = getSearchText.toString().toLowerCase().replace(/\\s+/g, '').replace(/\\+/g, '');\r\n            const phoneNumber = item.phone.toString().toLowerCase().replace(/\\s+/g, '').replace(/\\+/g, '');\r\n            return searchText === \"\" || phoneNumber.includes(searchText);\r\n        }).map((item, index) => {\r\n            return <tr key={index}>\r\n                <td>{index + 1}</td>\r\n                <td className=\"driver-wrapper\">\r\n                    <div className=\"icon-driver\">\r\n                        <img onClick={() => {\r\n                            setModalShow({show: true, status: \"driver-photo\"});\r\n                            setDriverPhoto(item.profile_image)\r\n                        }} src={item.profile_image} alt=\"\"/>\r\n                    </div>\r\n                    <div className=\"text-driver\">\r\n                        <div className=\"name\">\r\n                            {item.first_name} &nbsp;\r\n                            {item.last_name}\r\n                        </div>\r\n                    </div>\r\n                </td>\r\n                <td>\r\n                    {item.phone}\r\n                </td>\r\n                <td>\r\n                    {item.gender}\r\n                </td>\r\n                <td>\r\n                    <div className={item.is_block ? \"icon-check\" : \"icon-check disablet\"}>\r\n                        <img onClick={() => {\r\n                            setModalShow({show: true, status: \"blocked\"});\r\n                            if (item.is_block) {\r\n                                setReason(item.reason)\r\n                            }\r\n                            setDriverId(item.id)\r\n                        }} src=\"./images/admin/block.png\" alt=\"block\"/>\r\n\r\n                        {item.reason && item.is_block && <div className=\"reason-block\">\r\n                            <img src=\"./images/admin/warning.png\" alt=\"\"/>\r\n                            <div className=\"text\">\r\n                                {item.reason}\r\n                            </div>\r\n                        </div>}\r\n\r\n                    </div>\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <div className=\"edit-icon\">\r\n                    <img onClick={() => {\r\n                        setModalShow({show: true, status: \"edit-driver\"});\r\n                        editInfo(item)\r\n                    }} src=\"./images/admin/edit-tools.png\" alt=\"\"/>\r\n                </div>\r\n            </tr>\r\n        });\r\n\r\n    return <div className=\"clients-container\">\r\n        <CSSTransition\r\n            in={modalShow.show}\r\n            nodeRef={nodeRef}\r\n            timeout={300}\r\n            classNames=\"alert\"\r\n            unmountOnExit\r\n        >\r\n            <div className=\"modal-sloy\">\r\n                <div ref={nodeRef} className=\"modal-card\">\r\n\r\n                    {modalShow.status === \"add-driver\" && (\r\n                        <div className=\"add-driver\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img\r\n                                    onClick={() => {\r\n                                        setModalShow({status: \"\", show: false})\r\n                                        formik.resetForm();\r\n                                    }}\r\n                                    src=\"./images/admin/x.png\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"title\">Mijoz qo'shish</div>\r\n                            <div className=\"title-form\">Mijoz ma'lumotlari:</div>\r\n                            <div className=\"form-container\">\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides-file\">\r\n                                        <input onChange={getInputPhoto} type=\"file\"/>\r\n                                        <div className={`sloy-image ${profileImage ? \"active\" : \"\"}`}>\r\n                                            Profil rasmi\r\n                                            <img src=\"./images/admin/image.png\" alt=\"\"/>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.phone === \"Required\"}\r\n                                            value={formik.values.phone}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"phone\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Telefon raqam\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.first_name === \"Required\"}\r\n                                            value={formik.values.first_name}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"first_name\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Ism\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.last_name === \"Required\"}\r\n                                            value={formik.values.last_name}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"last_name\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Familiya\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <div className=\"title-on\">\r\n                                            Jinsi:\r\n                                        </div>\r\n                                        <div className=\"on-of\">\r\n                                            <div onClick={() => setLuggage(\"male\")}\r\n                                                 className={`of ${luggage === \"male\" ? \"on\" : \"\"}`}>\r\n                                                Erkak\r\n                                            </div>\r\n                                            <div onClick={() => setLuggage(\"female\")}\r\n                                                 className={`of ${luggage === \"female\" ? \"on\" : \"\"}`}>\r\n                                                Ayol\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div onClick={() => {\r\n                                formik.handleSubmit()\r\n                            }} className=\"add-btn\">\r\n                                Qo'shish\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalShow.status === \"driver-photo\" && (\r\n                        <div className=\"driver-photo\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img\r\n                                    onClick={() => setModalShow({status: \"\", show: false})}\r\n                                    src=\"./images/admin/x.png\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"photo\">\r\n                                <img src={driverPhoto} alt=\"\"/>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalShow.status === \"blocked\" && (\r\n                        <div className=\"blocked\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img onClick={() => {\r\n                                    setModalShow({status: \"\", show: false})\r\n                                    setReason(\"\")\r\n                                }}\r\n                                     src=\"./images/admin/x.png\"\r\n                                     alt=\"\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"title\">\r\n                                Haydovchini bloklash\r\n                            </div>\r\n\r\n                            <div className=\"reason-text\">\r\n                                <textarea value={reason} onChange={(e) => setReason(e.target.value)}\r\n                                          placeholder=\"Blok qilish sababini kiriting...\" name=\"reason\"\r\n                                          id=\"reason\"></textarea>\r\n\r\n                                <div className=\"buttons\">\r\n                                    <div onClick={() => {\r\n                                        blockDriver(\"unblock\")\r\n                                    }}\r\n                                         className=\"cancel\">Bekor qilish\r\n                                    </div>\r\n\r\n                                    <div onClick={() => {\r\n                                        blockDriver(\"block\")\r\n                                    }} className=\"success\">Bloklash\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalShow.status === \"edit-driver\" && (\r\n                        <div className=\"edit-driver\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img\r\n                                    onClick={() => {\r\n                                        setModalShow({status: \"\", show: false})\r\n                                        formik.resetForm();\r\n                                    }}\r\n                                    src=\"./images/admin/x.png\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"title\">Mijoz ma'lumotlarini tahrirlash</div>\r\n\r\n                            <div className=\"title-form\">Mijoz ma'lumotlari:</div>\r\n\r\n                            <div className=\"form-container\">\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides-file\">\r\n                                        <input onChange={getInputPhoto} type=\"file\"/>\r\n                                        <div className={`sloy-image ${profileImage ? \"active\" : \"\"}`}>\r\n                                            Profil rasmi\r\n                                            <img src=\"./images/admin/image.png\" alt=\"\"/>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.phone === \"Required\"}\r\n                                            value={formik.values.phone}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"phone\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Telefon raqam\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.first_name === \"Required\"}\r\n                                            value={formik.values.first_name}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"first_name\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Ism\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.last_name === \"Required\"}\r\n                                            value={formik.values.last_name}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"last_name\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Familiya\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <div className=\"title-on\">\r\n                                            Jinsi:\r\n                                        </div>\r\n                                        <div className=\"on-of\">\r\n                                            <div onClick={() => setLuggage(\"male\")}\r\n                                                 className={`of ${luggage === \"male\" ? \"on\" : \"\"}`}>\r\n                                                Erkak\r\n                                            </div>\r\n                                            <div onClick={() => setLuggage(\"female\")}\r\n                                                 className={`of ${luggage === \"female\" ? \"on\" : \"\"}`}>\r\n                                                Ayol\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div onClick={() => {\r\n                                formik.handleSubmit()\r\n                            }} className=\"add-btn\">\r\n                                Saqlash\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </CSSTransition>\r\n\r\n        <div className=\"header\">\r\n            <div className=\"search-box\">\r\n                <img src=\"./images/admin/find-person.png\" alt=\"\"/>\r\n                <input onChange={(e) => setGetSearchText(e.target.value)} placeholder=\"Telefon raqam kiriting\"\r\n                       type=\"text\"/>\r\n            </div>\r\n\r\n            <div onClick={() => {\r\n                setModalShow({show: true, status: \"add-driver\"});\r\n            }} className=\"add-driver-btn\">\r\n                Mijoz qo'shish\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <div className=\"table-wrapper\">\r\n            {loader ? <LoaderAdmin/> : <table>\r\n                <thead>\r\n                <tr>\r\n                    <th>№</th>\r\n                    <th>Mijoz haqida</th>\r\n                    <th>Telefon raqam</th>\r\n                    <th>Jinsi</th>\r\n                    <th>Bloklash</th>\r\n                    <th></th>\r\n                </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                {productList}\r\n                </tbody>\r\n            </table>}\r\n        </div>\r\n\r\n        <div className=\"pagination\">\r\n            {driversList.length > 100 ? <ReactPaginate\r\n                breakLabel=\"...\"\r\n                previousLabel={<img src=\"./images/admin/prev.png\" alt=\"\"/>}\r\n                nextLabel={<img src=\"./images/admin/next.png\" alt=\"\"/>}\r\n                pageCount={pageCount}\r\n                onPageChange={changePage}\r\n                containerClassName={\"paginationBttns\"}\r\n                previousLinkClassName={\"previousBttn\"}\r\n                nextLinkClassName={\"nextBttn\"}\r\n                disabledCalassName={\"paginationDisabled\"}\r\n                activeClassName={\"paginationActive\"}\r\n            /> : \"\"}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Clients","import \"./style.scss\"\nimport {useContext, useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {MyContext} from \"../../App/App\";\nimport i18next from \"i18next\";\nimport {useTranslation} from \"react-i18next\";\n\nconst Colors = () => {\n    const {t} = useTranslation();\n    let value = useContext(MyContext);\n    const [translations, setTranslations] = useState(\n        {\n            name_uz: \"\",\n            name_ru: \"\",\n            name_en: \"\"\n        })\n    const [colorsList, setColorsList] = useState([])\n    const [edit, setEdit] = useState(false)\n    const [editId, setEditId] = useState('')\n\n    const getData = () => {\n        axios.get(`${value.url}/dashboard/carcolor/`,{\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n        }).then((response) => {\n            setColorsList(response.data);\n        })\n    }\n\n    useEffect(() => {\n        getData()\n    }, []);\n\n    const addColor = (status) => {\n        const {name_uz, name_ru, name_en} = translations;\n\n        const isAnyNameFilled = name_uz.trim() && name_ru.trim() && name_en.trim();\n\n        if (!isAnyNameFilled) {\n            alert(\"Iltimos, rang nomini kiriting\");\n            return;\n        }\n\n        const translation_list = {\n            uz: {\n                name: name_uz.trim()\n            },\n            ru: {\n                name: name_ru.trim()\n            },\n            en: {\n                name: name_en.trim()\n            }\n        };\n\n        if (status === \"add\") {\n            axios.post(`${value.url}/dashboard/carcolor/`, {translations: translation_list},\n                {\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n                })\n                .then((response) => {\n                    setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n                    getData();\n                })\n                .catch((error) => {\n                    console.error(\"Rang qo'shishda xatolik:\", error);\n                });\n        }\n\n        if (status === \"edit\") {\n            axios.put(`${value.url}/dashboard/carcolor/${editId}/`, {translations: translation_list},\n                {\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n                })\n                .then((response) => {\n                    setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n                    getData();\n                    setEdit(false);\n                })\n                .catch((error) => {\n                    console.error(\"Rangni tahrirlashda xatolik:\", error);\n                });\n        }\n    };\n\n    const delColor = (id) => {\n        axios.delete(`${value.url}/dashboard/carcolor/${id}/`,{\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n        }).then((response) => {\n            setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n            getData()\n            setEdit(false)\n        })\n    }\n\n    const handleEdit = (color) => {\n        setEdit(true);\n        setEditId(color.id);\n        setTranslations({\n            name_uz: color.translations[\"uz\"].name || \"\",\n            name_ru: color.translations[\"ru\"].name || \"\",\n            name_en: color.translations[\"en\"].name || \"\"\n        });\n    };\n\n    return <div className=\"colors-wrapper\">\n        <div className=\"header\">\n            <div className=\"form-wrapper\">\n                <input\n                    value={translations.name_uz}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_uz: e.target.value})\n                    }\n                    placeholder=\"Rangi nomi (uz)...\"\n                    type=\"text\"\n                />\n                <input\n                    value={translations.name_en}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_en: e.target.value})\n                    }\n                    placeholder=\"Color name (en)...\"\n                    type=\"text\"\n                />\n\n                <input\n                    value={translations.name_ru}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_ru: e.target.value})\n                    }\n                    placeholder=\"Название цвета (ru)...\"\n                    type=\"text\"\n                />\n\n\n                {edit ? <div onClick={() => addColor(\"edit\")} className=\"add-color\">\n                    <img src=\"./images/admin/checkmark.png\" alt=\"\"/>\n                </div> : <div onClick={() => addColor(\"add\")} className=\"add-color\">\n                    <img src=\"./images/admin/add.png\" alt=\"\"/>\n                </div>}\n\n            </div>\n        </div>\n        <div className=\"colors-cards\">\n            <div className=\"wrapper-box\">\n                {\n                    colorsList.map((color, index) => (\n                        <div key={index} className=\"color-card\">\n                            <div className=\"name\">{color.translations[i18next.language].name}</div>\n                            <div className=\"bttons\">\n                                <div onClick={() => handleEdit(color)} className=\"btn\">\n                                    <img src=\"./images/admin/edit-tools.png\" alt=\"\"/>\n                                </div>\n\n                                <div onClick={() => delColor(color.id)} className=\"btn\">\n                                    <img src=\"./images/admin/delete.png\" alt=\"\"/>\n                                </div>\n                            </div>\n                        </div>\n                    ))\n                }\n            </div>\n        </div>\n    </div>\n}\n\nexport default Colors;","import \"./style.scss\"\nimport {useContext, useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {MyContext} from \"../../App/App\";\nimport i18next from \"i18next\";\n\nconst CarBrand = () => {\n    let value = useContext(MyContext);\n    const [colorsList, setColorsList] = useState([])\n    const [edit, setEdit] = useState(false)\n    const [editId, setEditId] = useState('')\n    const [translations, setTranslations] = useState(\n        {\n            name_uz: \"\",\n            name_ru: \"\",\n            name_en: \"\"\n        })\n\n    const getData = () => {\n        axios.get(`${value.url}/dashboard/carmake/`,{\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n        }).then((response) => {\n            setColorsList(response.data);\n        })\n    }\n\n    useEffect(() => {\n        getData()\n    }, []);\n\n    const addColor = (status) => {\n        const {name_uz, name_ru, name_en} = translations;\n\n        const isAnyNameFilled = name_uz.trim() && name_ru.trim() && name_en.trim();\n\n        if (!isAnyNameFilled) {\n            alert(\"Iltimos, rang nomini kiriting\");\n            return;\n        }\n\n        const translation_list = {\n            uz: {\n                name: name_uz.trim()\n            },\n            ru: {\n                name: name_ru.trim()\n            },\n            en: {\n                name: name_en.trim()\n            }\n        };\n\n        if (status === \"add\") {\n            axios.post(`${value.url}dashboard/carmake/`, {translations: translation_list},\n                {\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n                })\n                .then((response) => {\n                    setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n                    getData();\n                })\n                .catch((error) => {\n                    console.error(\"Rang qo'shishda xatolik:\", error);\n                });\n        }\n\n        if (status === \"edit\") {\n            axios.put(`${value.url}dashboard/carmake/${editId}/`, {translations: translation_list},\n                {\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n                })\n                .then((response) => {\n                    setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n                    getData();\n                    setEdit(false);\n                })\n                .catch((error) => {\n                    console.error(\"Rangni tahrirlashda xatolik:\", error);\n                });\n        }\n    };\n\n    const delColor = (id) => {\n        axios.delete(`${value.url}dashboard/carmake/${id}/`,{\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n        }).then((response) => {\n            setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n            getData()\n            setEdit(false)\n        })\n    }\n\n    const handleEdit = (color) => {\n        setEdit(true);\n        setEditId(color.id);\n        setTranslations({\n            name_uz: color.translations[\"uz\"].name || \"\",\n            name_ru: color.translations[\"ru\"].name || \"\",\n            name_en: color.translations[\"en\"].name || \"\"\n        });\n    };\n\n    return <div className=\"car-brand-wrapper\">\n        <div className=\"header\">\n            <div className=\"form-wrapper\">\n                <input\n                    value={translations.name_uz}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_uz: e.target.value})\n                    }\n                    placeholder=\"Brend nomi (uz)...\"\n                    type=\"text\"\n                />\n                <input\n                    value={translations.name_en}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_en: e.target.value})\n                    }\n                    placeholder=\"Brand name (en)...\"\n                    type=\"text\"\n                />\n\n                <input\n                    value={translations.name_ru}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_ru: e.target.value})\n                    }\n                    placeholder=\"Название бренда (ru)...\"\n                    type=\"text\"\n                />\n\n\n                {edit ? <div onClick={() => addColor(\"edit\")} className=\"add-color\">\n                    <img src=\"./images/admin/checkmark.png\" alt=\"\"/>\n                </div> : <div onClick={() => addColor(\"add\")} className=\"add-color\">\n                    <img src=\"./images/admin/add.png\" alt=\"\"/>\n                </div>}\n\n            </div>\n        </div>\n        <div className=\"colors-cards\">\n            <div className=\"wrapper-box\">\n                {\n                    colorsList.map((color, index) => (\n                        <div key={index} className=\"color-card\">\n                            <div className=\"name\">{color.translations[i18next.language].name}</div>\n                            <div className=\"bttons\">\n                                <div onClick={() => handleEdit(color)} className=\"btn\">\n                                    <img src=\"./images/admin/edit-tools.png\" alt=\"\"/>\n                                </div>\n\n                                <div onClick={() => delColor(color.id)} className=\"btn\">\n                                    <img src=\"./images/admin/delete.png\" alt=\"\"/>\n                                </div>\n                            </div>\n                        </div>\n                    ))\n                }\n            </div>\n        </div>\n    </div>\n}\n\nexport default CarBrand;","import {useCallback, useEffect, useRef, useState, useMemo, useContext} from \"react\";\r\nimport {CSSTransition} from \"react-transition-group\";\r\nimport {useFormik} from \"formik\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport {\r\n    TextField,\r\n    MenuItem,\r\n    InputLabel,\r\n    FormControl,\r\n    Select\r\n} from \"@mui/material\";\r\nimport \"./style.scss\"\r\nimport axios from \"axios\";\r\nimport {MyContext} from \"../../App/App\";\r\n\r\nconst Service = () => {\r\n    let value = useContext(MyContext);\r\n    const [modalShow, setModalShow] = useState({show: false, status: false});\r\n    const nodeRef = useRef(null);\r\n    const [serviceList, setServiceList] = useState([]);\r\n    const [editId, setEditId] = useState(\"\");\r\n    const ref = useRef(null);\r\n    const [driversList, setDriversList] = useState([{}]);\r\n    const worksPage = 100;\r\n    const [pageNumber, setPageNumber] = useState(0);\r\n    const pagesVisited = pageNumber * worksPage;\r\n\r\n    const pageCount = Math.ceil(driversList.length / worksPage);\r\n\r\n    const changePage = ({selected}) => {\r\n        setPageNumber(selected)\r\n\r\n        setTimeout(() => {\r\n            ref.current?.scrollIntoView({behavior: \"smooth\"});\r\n        }, 500);\r\n    };\r\n\r\n    const validate = (values) => {\r\n        const errors = {};\r\n\r\n        if (!values.service) {\r\n            errors.service = \"Required\";\r\n        }\r\n\r\n        if (!values.includedCars) {\r\n            errors.includedCars = \"Required\";\r\n        }\r\n\r\n        if (!values.start_price) {\r\n            errors.start_price = \"Required\";\r\n        }\r\n\r\n        if (!values.price_per_km) {\r\n            errors.price_per_km = \"Required\";\r\n        }\r\n\r\n        if (!values.price_per_min) {\r\n            errors.price_per_min = \"Required\";\r\n        }\r\n\r\n        if (!values.wait_price_per_min) {\r\n            errors.wait_price_per_min = \"Required\";\r\n        }\r\n\r\n        if (!values.free_wait_time) {\r\n            errors.free_wait_time = \"Required\";\r\n        }\r\n\r\n        return errors;\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            service: \"\",\r\n            start_price: \"\",\r\n            price_per_km: \"\",\r\n            price_per_min: \"\",\r\n            wait_price_per_min: \"\",\r\n            free_wait_time: \"\",\r\n            includedCars: \"\"\r\n        },\r\n        validate,\r\n        onSubmit: (values) => {\r\n            sendAllInfo()\r\n        },\r\n    });\r\n\r\n    const sendAllInfo = () => {\r\n        let allInfo = {\r\n            service: formik.values.service,\r\n            includedCars: formik.values.includedCars,\r\n            start_price: formik.values.start_price,\r\n            price_per_km: formik.values.price_per_km,\r\n            price_per_min: formik.values.price_per_min,\r\n            wait_price_per_min: formik.values.wait_price_per_min,\r\n            free_wait_time: formik.values.free_wait_time\r\n        }\r\n\r\n        if (!editId) {\r\n            axios.post(`${value.url}/dashboard/service/`, allInfo, {\r\n                headers: {\r\n                    Authorization: `Token ${localStorage.getItem(\"token\")}`,\r\n                },\r\n            }).then((response) => {\r\n                getDrivers()\r\n                setModalShow({status: \"\", show: false})\r\n                formik.resetForm();\r\n            })\r\n        }\r\n\r\n        if (editId) {\r\n            axios.put(`${value.url}/dashboard/service/${editId}/`, allInfo,\r\n                {\r\n                    headers: {\r\n                        Authorization: `Token ${localStorage.getItem(\"token\")}`,\r\n                    },\r\n                }).then((response) => {\r\n                getDrivers()\r\n                formik.resetForm();\r\n                setModalShow({status: \"\", show: false})\r\n            })\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getDrivers()\r\n    }, []);\r\n\r\n    const delColor = (id) => {\r\n        axios.delete(`${value.url}/dashboard/service/${id}/`, {\r\n            headers: {\r\n                Authorization: `Token ${localStorage.getItem(\"token\")}`,\r\n            },\r\n        }).then((response) => {\r\n            getDrivers()\r\n        })\r\n    }\r\n\r\n    const getDrivers = () => {\r\n        axios.get(`${value.url}/dashboard/service/`, {\r\n            headers: {\r\n                Authorization: `Token ${localStorage.getItem(\"token\")}`,\r\n            },\r\n        }).then((response) => {\r\n            setServiceList(response.data);\r\n        })\r\n    }\r\n\r\n    const editValues = (service) => {\r\n        setEditId(service.id)\r\n        setModalShow({show: true, status: \"edit-driver\"});\r\n        formik.setValues({\r\n            service: service.service,\r\n            start_price: service.start_price,\r\n            price_per_km: service.price_per_km,\r\n            price_per_min: service.price_per_min,\r\n            wait_price_per_min: service.wait_price_per_min,\r\n            free_wait_time: service.free_wait_time,\r\n            includedCars: service.includedCars,\r\n        });\r\n    }\r\n\r\n    const productList = serviceList.slice(pagesVisited, pagesVisited + worksPage).map((item, index) => {\r\n        return <tr key={index}>\r\n            <td>{index + 1}</td>\r\n            <td>\r\n                {item.service}\r\n            </td>\r\n            <td>\r\n                {item.includedCars}\r\n            </td>\r\n            <td>{item.start_price}</td>\r\n            <td>{item.price_per_km}</td>\r\n            <td>{item.price_per_min}</td>\r\n            <td>{item.wait_price_per_min}</td>\r\n            <td>{item.free_wait_time}</td>\r\n            <td>\r\n                <div className=\"icon\">\r\n                    <img onClick={() => delColor(item.id)} src=\"./images/admin/delete.png\" alt=\"\"/>\r\n                </div>\r\n            </td>\r\n            <td>\r\n            </td>\r\n            <div className=\"edit-icon\">\r\n                <img onClick={() => editValues(item)} src=\"./images/admin/edit-tools.png\" alt=\"\"/>\r\n            </div>\r\n        </tr>\r\n    });\r\n\r\n    return <div className=\"service-container\">\r\n        <CSSTransition\r\n            in={modalShow.show}\r\n            nodeRef={nodeRef}\r\n            timeout={300}\r\n            classNames=\"alert\"\r\n            unmountOnExit\r\n        >\r\n            <div className=\"modal-sloy\">\r\n                <div ref={nodeRef} className=\"modal-card\">\r\n\r\n                    {modalShow.status === \"add-driver\" && (\r\n                        <div className=\"add-driver\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img\r\n                                    onClick={() => setModalShow({status: \"\", show: false})}\r\n                                    src=\"./images/admin/x.png\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"title\">Tarif qo'shish</div>\r\n\r\n                            <div className=\"title-form\">Tarif ma'lumotlari:</div>\r\n\r\n                            <div className=\"form-container\">\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Tarif nomi</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.service === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.service}\r\n                                                label=\"Tarif nomi\"\r\n                                                name=\"service\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                <MenuItem value=\"standart\">Standart</MenuItem>\r\n                                                <MenuItem value=\"bussiness\">Bussiness</MenuItem>\r\n                                                <MenuItem value=\"comfort\">Comfort</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.includedCars === \"Required\"}\r\n                                            value={formik.values.includedCars}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"includedCars\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Tarifga kiruvchi mashinalar\" variant=\"outlined\"\r\n                                            className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.start_price === \"Required\"}\r\n                                            value={formik.values.start_price}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"start_price\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Boshlash narxi\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.price_per_km === \"Required\"}\r\n                                            value={formik.values.price_per_km}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"price_per_km\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Narx (km)\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.price_per_min === \"Required\"}\r\n                                            value={formik.values.price_per_min}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"price_per_min\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Narx (min)\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.wait_price_per_min === \"Required\"}\r\n                                            value={formik.values.wait_price_per_min}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"wait_price_per_min\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Kutish uchun narx (min)\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.free_wait_time === \"Required\"}\r\n                                            value={formik.values.free_wait_time}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"free_wait_time\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Tekin kutish vaqti\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div onClick={sendAllInfo} className=\"add-btn\">\r\n                                    Tarif qo'shish\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalShow.status === \"edit-driver\" && (\r\n                        <div className=\"edit-driver\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img\r\n                                    onClick={() => setModalShow({status: \"\", show: false})}\r\n                                    src=\"./images/admin/x.png\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"title\">Tarifni tahrirlash</div>\r\n\r\n                            <div className=\"title-form\">Tarif ma'lumotlari:</div>\r\n\r\n                            <div className=\"form-container\">\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Tarif nomi</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.service === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.service}\r\n                                                label=\"Tarif nomi\"\r\n                                                name=\"service\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                <MenuItem value=\"standart\">Standart</MenuItem>\r\n                                                <MenuItem value=\"bussiness\">Bussiness</MenuItem>\r\n                                                <MenuItem value=\"comfort\">Comfort</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.includedCars === \"Required\"}\r\n                                            value={formik.values.includedCars}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"includedCars\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Tarifga kiruvchi mashinalar\" variant=\"outlined\"\r\n                                            className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.start_price === \"Required\"}\r\n                                            value={formik.values.start_price}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"start_price\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Boshlash narxi\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.price_per_km === \"Required\"}\r\n                                            value={formik.values.price_per_km}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"price_per_km\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Narx (km)\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.price_per_min === \"Required\"}\r\n                                            value={formik.values.price_per_min}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"price_per_min\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Narx (min)\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.wait_price_per_min === \"Required\"}\r\n                                            value={formik.values.wait_price_per_min}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"wait_price_per_min\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Kutish uchun narx (min)\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.free_wait_time === \"Required\"}\r\n                                            value={formik.values.free_wait_time}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"free_wait_time\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Tekin kutish vaqti\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div onClick={sendAllInfo} className=\"add-btn\">\r\n                                    Tasdiqlash\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </CSSTransition>\r\n\r\n        <div className=\"header\">\r\n            <div onClick={() => {\r\n                setModalShow({show: true, status: \"add-driver\"});\r\n            }} className=\"add-driver-btn\">\r\n                Tarif qo'shish\r\n            </div>\r\n        </div>\r\n\r\n        <table>\r\n            <thead>\r\n            <tr>\r\n                <th>№</th>\r\n                <th>Nomi</th>\r\n                <th>Moshinalar</th>\r\n                <th>Boshlash narxi</th>\r\n                <th>Narx km</th>\r\n                <th>Narx min</th>\r\n                <th>Kutish narxi min</th>\r\n                <th>Tekin kutish vaqti</th>\r\n                <th>O'chirish</th>\r\n                <th></th>\r\n            </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n            {productList}\r\n            </tbody>\r\n        </table>\r\n\r\n        <div className=\"pagination\">\r\n            {driversList.length > 100 ? <ReactPaginate\r\n                breakLabel=\"...\"\r\n                previousLabel={<img src=\"./images/admin/prev.png\" alt=\"\"/>}\r\n                nextLabel={<img src=\"./images/admin/next.png\" alt=\"\"/>}\r\n                pageCount={pageCount}\r\n                onPageChange={changePage}\r\n                containerClassName={\"paginationBttns\"}\r\n                previousLinkClassName={\"previousBttn\"}\r\n                nextLinkClassName={\"nextBttn\"}\r\n                disabledCalassName={\"paginationDisabled\"}\r\n                activeClassName={\"paginationActive\"}\r\n            /> : \"\"}\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default Service","import {useCallback, useEffect, useRef, useState, useMemo, useContext} from \"react\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport \"./style.scss\"\r\nimport axios from \"axios\";\r\nimport {MyContext} from \"../../App/App\";\r\n\r\nconst Balance = () => {\r\n    const [getSearchText, setGetSearchText] = useState(\"\");\r\n    let value = useContext(MyContext);\r\n    const ref = useRef(null);\r\n    const [driversList, setDriversList] = useState([]);\r\n    const worksPage = 100;\r\n    const [pageNumber, setPageNumber] = useState(0);\r\n    const pagesVisited = pageNumber * worksPage;\r\n\r\n    useEffect(() => {\r\n        axios.get(`${value.url}/dashboard/balance/`, {\r\n            headers: {\r\n                Authorization: `Token ${localStorage.getItem(\"token\")}`,\r\n            },\r\n        }).then((response) => {\r\n            setDriversList(response.data);\r\n        })\r\n    }, []);\r\n\r\n    const productList = driversList.slice(pagesVisited, pagesVisited + worksPage)\r\n        .filter((item) => {\r\n            const searchText = getSearchText.toString().toLowerCase().replace(/\\s+/g, '').replace(/\\+/g, '');\r\n            const phoneNumber = item.driver.phone.toString().toLowerCase().replace(/\\s+/g, '').replace(/\\+/g, '');\r\n            return searchText === \"\" || phoneNumber.includes(searchText);\r\n        }).map((item, index) => {\r\n        return <tr key={index}>\r\n            <td>{index+1}</td>\r\n            <td className=\"driver-wrapper\">\r\n                <div className=\"text-driver\">\r\n                    <div\r\n                        className=\"name\">{item.driver && item.driver.first_name} {item.driver && item.driver.last_name}</div>\r\n                    <div className=\"phone\">\r\n                        {item.driver && item.driver.phone}\r\n                    </div>\r\n                </div>\r\n            </td>\r\n            <td>\r\n                {item.driver && item.driver.car_number}\r\n            </td>\r\n            <td>\r\n                {item.id_number}\r\n            </td>\r\n            <td>\r\n                {item.fund}\r\n            </td>\r\n        </tr>\r\n    });\r\n\r\n    const pageCount = Math.ceil(driversList.length / worksPage);\r\n\r\n    const changePage = ({selected}) => {\r\n        setPageNumber(selected)\r\n\r\n        setTimeout(() => {\r\n            ref.current?.scrollIntoView({behavior: \"smooth\"});\r\n        }, 500);\r\n    };\r\n\r\n    return <div className=\"balance-container\">\r\n        <div className=\"header\">\r\n            <div className=\"search-box\">\r\n                <img src=\"./images/admin/search.png\" alt=\"\"/>\r\n                <input onChange={(e) => setGetSearchText(e.target.value)} placeholder=\"Telefon raqam kiriting\" type=\"text\"/>\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"table-wrapper\">\r\n            <table>\r\n                <thead>\r\n                <tr>\r\n                    <th>№</th>\r\n                    <th>Haydovchi</th>\r\n                    <th>Avtomobil raqami</th>\r\n                    <th>Id raqam</th>\r\n                    <th>Narx</th>\r\n\r\n                </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                {productList}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n\r\n\r\n        <div className=\"pagination\">\r\n            {driversList.length > 100 ? <ReactPaginate\r\n                breakLabel=\"...\"\r\n                previousLabel={<img src=\"./images/admin/prev.png\" alt=\"\"/>}\r\n                nextLabel={<img src=\"./images/admin/next.png\" alt=\"\"/>}\r\n                pageCount={pageCount}\r\n                onPageChange={changePage}\r\n                containerClassName={\"paginationBttns\"}\r\n                previousLinkClassName={\"previousBttn\"}\r\n                nextLinkClassName={\"nextBttn\"}\r\n                disabledCalassName={\"paginationDisabled\"}\r\n                activeClassName={\"paginationActive\"}\r\n            /> : \"\"}\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default Balance","import {useEffect, useRef, useState, useMemo, useContext} from \"react\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport \"./style.scss\"\r\nimport {CSSTransition} from \"react-transition-group\";\r\nimport axios from \"axios\";\r\nimport {MyContext} from \"../../App/App\";\r\nimport i18next from \"i18next\";\r\nimport LoaderAdmin from \"../loader-admin/LoaderAdmin\";\r\n\r\nconst Orders = () => {\r\n    let value = useContext(MyContext);\r\n    const [modalShow, setModalShow] = useState({show: false, status: false});\r\n    const nodeRef = useRef(null);\r\n    const [loader, setLoader] = useState(false);\r\n\r\n    const [links, setLinks] = useState({});\r\n    const [Pages, setPages] = useState([]);\r\n    const [activeItem, setActiveItem] = useState(1);\r\n\r\n    const [driversList, setDriversList] = useState([]);\r\n    const [statistics, setStatistics] = useState([]);\r\n    const [information, setInformation] = useState([]);\r\n    const [tabs, setTabs] = useState(\"active\");\r\n\r\n    const visiblePages = [];\r\n    const totalPages = Pages.length;\r\n\r\n    if (totalPages <= 7) {\r\n        visiblePages.push(...Pages.map((_, index) => index + 1));\r\n    } else {\r\n        visiblePages.push(1);\r\n\r\n        if (activeItem > 3) {\r\n            visiblePages.push(\"...\");\r\n        }\r\n\r\n        for (let i = Math.max(2, activeItem - 1); i <= Math.min(totalPages - 1, activeItem + 1); i++) {\r\n            visiblePages.push(i);\r\n        }\r\n\r\n        if (activeItem < totalPages - 2) {\r\n            visiblePages.push(\"...\");\r\n        }\r\n\r\n        visiblePages.push(totalPages);\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        getList();\r\n\r\n    }, []);\r\n\r\n    // const filteredList = driversList.filter(item => item.status === tabs);\r\n\r\n    const getList = (url = null, page = 1) => {\r\n        setLoader(true);\r\n        const main = url ? url : `${value.url}/dashboard/order/?page=${page}`;\r\n        axios.get(main, {\r\n            headers: {\r\n                \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\r\n            }\r\n        }).then((response) => {\r\n            setDriversList(response.data.results);\r\n            setLinks(response.data.links);\r\n            setPages(response.data.links.pages);\r\n            setActiveItem(page);\r\n        }).finally(() => {\r\n            setLoader(false);\r\n        });\r\n\r\n    };\r\n\r\n    return <div className=\"orders-container\">\r\n        <CSSTransition\r\n            in={modalShow.show}\r\n            nodeRef={nodeRef}\r\n            timeout={300}\r\n            classNames=\"alert\"\r\n            unmountOnExit\r\n        >\r\n            <div className=\"modal-sloy\">\r\n                <div ref={nodeRef} className=\"modal-card\">\r\n                    {modalShow.status === \"car-information\" && (\r\n                        <div className=\"car-information\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img\r\n                                    onClick={() => setModalShow({status: \"\", show: false})}\r\n                                    src=\"./images/admin/x.png\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"title\">\r\n                                Qo'shimcha malumotlar\r\n                            </div>\r\n                            <div className=\"information\">\r\n                                <div className=\"info\">\r\n                                    <div className=\"title\">Moshina modeli:</div>\r\n                                    <div className=\"text\">Chevrolet</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    {modalShow.status === \"change-status\" && (\r\n                        <div className=\"change-status\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img\r\n                                    onClick={() => setModalShow({status: \"\", show: false})}\r\n                                    src=\"./images/admin/x.png\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"title\">\r\n                                Buyurtma bosqichini tanlang\r\n                            </div>\r\n                            <div className=\"form-box\">\r\n                                <select name=\"\" id=\"\">\r\n                                    <option value=\"\"></option>\r\n                                    <option value=\"\">Mijozni olish</option>\r\n                                    <option value=\"\">Yakunlash</option>\r\n                                    <option value=\"\">Bekor qilish</option>\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"success-btn\">\r\n                                Tasdiqlash\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </CSSTransition>\r\n\r\n        <div className=\"header\">\r\n            <div className=\"search-box\">\r\n\r\n            </div>\r\n\r\n            <div className=\"statisitcs\">\r\n                {/*{statistics.length > 0 && statistics.map((item, index) => (*/}\r\n                {/*    <div onClick={() => setTabs(item.status)} key={index}*/}\r\n                {/*         className={`statistic-box ${tabs === item.status ? \"active\" : \"\"}`}>*/}\r\n                {/*        <div className=\"name\">*/}\r\n                {/*            {item.status === \"active\" && \"Faol buyurtmalar\"}*/}\r\n                {/*            {item.status === \"inactive\" && \"Jarayonda\"}*/}\r\n                {/*            {item.status === \"assigned\" && \"Tugallangan\"}*/}\r\n                {/*            {item.status === \"rejected\" && \"Bekor qilingan\"}*/}\r\n\r\n                {/*        </div>*/}\r\n                {/*        <div className=\"num\">{item.count}</div>*/}\r\n                {/*    </div>*/}\r\n                {/*))}*/}\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"wrapper-table\">\r\n            {\r\n                loader ? <LoaderAdmin/> :\r\n                    <table>\r\n                        <thead>\r\n                        <tr>\r\n                            <th>№</th>\r\n                            <th>Mijoz</th>\r\n                            <th>Haydovchi</th>\r\n                            <th>Buyurtma berilgan sana</th>\r\n                            <th>Tarif</th>\r\n                            <th>Buyurtma narxi</th>\r\n                            <th>Batafsil ma'lumotlar</th>\r\n                            <th>Statusni ozgartirish</th>\r\n                        </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                        {driversList.map((item, index) => {\r\n                            return <tr key={index}>\r\n                                <td>{index + 1}</td>\r\n                                <td>\r\n                                    <div className=\"text-driver\">\r\n                                        <div className=\"name\">\r\n                                            {item.client.first_name}\r\n                                            {item.client.last_name}\r\n                                        </div>\r\n                                        <div className=\"phone\">\r\n                                            {item.client.phone}\r\n                                        </div>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div className=\"text-driver\">\r\n                                        {item.driver && <>\r\n                                            <div className=\"name\">\r\n                                                {item.driver.first_name}\r\n                                                {item.driver.last_name}\r\n                                            </div>\r\n                                            <div className=\"phone\">\r\n                                                {item.driver.phone}\r\n                                            </div>\r\n                                        </>}\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    {item.created_at}\r\n                                </td>\r\n                                <td>\r\n                                    {item.car_category.translations[i18next.language].name}\r\n                                </td>\r\n                                <td>\r\n                                    {item.price} so'm\r\n                                </td>\r\n                                <td>\r\n                                    <div className=\"icon\">\r\n                                        <img onClick={() => {\r\n                                            setInformation(item)\r\n                                            setModalShow({show: true, status: \"car-information\"});\r\n                                        }} src=\"./images/admin/document.png\" alt=\"\"/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div className=\"icon\">\r\n                                        <img onClick={() => {\r\n                                            setModalShow({show: true, status: \"change-status\"});\r\n                                        }} src=\"./images/admin/status.png\" alt=\"\"/>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                        })}\r\n                        </tbody>\r\n                    </table>\r\n            }\r\n\r\n        </div>\r\n\r\n        <div className=\"pagination\">\r\n            <div className=\"prev\">\r\n                <img onClick={() => {\r\n                    if (activeItem > 1) {\r\n                        getList(links.previous, activeItem - 1);\r\n                    }\r\n                }} src=\"./images/admin/prev.png\" alt=\"Prev\"/>\r\n            </div>\r\n\r\n            {visiblePages.map((item, index) => (\r\n                <div key={index}\r\n                     onClick={() => {\r\n                         if (item !== \"...\") {\r\n                             getList(null, item);\r\n                         }\r\n                     }}\r\n                     className={`items ${activeItem === item ? \"active\" : \"\"} `}\r\n                     style={{cursor: item === \"...\" ? \"default\" : \"pointer\"}}>\r\n                    {item}\r\n                </div>\r\n            ))}\r\n\r\n            <div className=\"next\" onClick={() => {\r\n                if (activeItem < totalPages) {\r\n                    getList(links.next, activeItem + 1);\r\n                }\r\n            }}>\r\n                <img src=\"./images/admin/next.png\" alt=\"Next\"/>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default Orders","import \"./style.scss\"\nimport {useContext, useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {MyContext} from \"../../App/App\";\nimport i18next from \"i18next\";\n\nconst CarModel = () => {\n    let value = useContext(MyContext);\n    const [car_make, setCar_make] = useState([]);\n    const [car_model, setCar_model] = useState([]);\n    const [carBrandId, setCarBrandId] = useState(\"\")\n\n    const [edit, setEdit] = useState(false)\n    const [editId, setEditId] = useState('')\n    const [translations, setTranslations] = useState(\n        {\n            name_uz: \"\",\n            name_ru: \"\",\n            name_en: \"\"\n        })\n\n    const getData = () => {\n        axios.get(`${value.url}/dashboard/carmake/`, {\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n        }).then((response) => {\n            setCar_make(response.data);\n        })\n    }\n\n    useEffect(() => {\n        getData()\n    }, []);\n\n    const addColor = (status) => {\n        const {name_uz, name_ru, name_en} = translations;\n\n        const isAnyNameFilled = name_uz.trim() && name_ru.trim() && name_en.trim();\n\n        if (!isAnyNameFilled) {\n            alert(\"Iltimos, rang nomini kiriting\");\n            return;\n        }\n\n        const translation_list = {\n            uz: {\n                name: name_uz.trim()\n            },\n            ru: {\n                name: name_ru.trim()\n            },\n            en: {\n                name: name_en.trim()\n            }\n        };\n\n        if (status === \"add\") {\n            axios.post(`${value.url}/dashboard/carmodel/`, {make: carBrandId, translations: translation_list},\n                {\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n                })\n                .then((response) => {\n                    setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n                    axios.get(`${value.url}/dashboard/carmake/${carBrandId}/`, {\n                        headers: {\n                            \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\n                        }\n                    }).then((response) => {\n                        setCar_model(response.data);\n                    })\n\n                })\n                .catch((error) => {\n                    console.error(\"Rang qo'shishda xatolik:\", error);\n                });\n        }\n\n        if (status === \"edit\") {\n            axios.put(`${value.url}/dashboard/carmodel/${editId}/`, {translations: translation_list},\n                {\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n                })\n                .then((response) => {\n                    setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n                    setEdit(false);\n                    axios.get(`${value.url}/dashboard/carmake/${carBrandId}/`, {\n                        headers: {\n                            \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\n                        }\n                    }).then((response) => {\n                        setCar_model(response.data);\n                    })\n\n                })\n                .catch((error) => {\n                    console.error(\"Rangni tahrirlashda xatolik:\", error);\n                });\n        }\n    };\n\n    const delColor = (id) => {\n        axios.delete(`${value.url}/dashboard/carmodel/${id}/`, {\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n        }).then((response) => {\n            setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n            axios.get(`${value.url}/dashboard/carmake/${carBrandId}/`, {\n                headers: {\n                    \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\n                }\n            }).then((response) => {\n                setCar_model(response.data);\n            })\n            setEdit(false)\n        })\n    }\n\n    const handleEdit = (color) => {\n        setEdit(true);\n        setEditId(color.id);\n        setTranslations({\n            name_uz: color.translations[\"uz\"].name || \"\",\n            name_ru: color.translations[\"ru\"].name || \"\",\n            name_en: color.translations[\"en\"].name || \"\"\n        });\n    };\n\n    const getCarNames = (e) => {\n        setCarBrandId(e.target.value)\n        axios.get(`${value.url}/dashboard/carmake/${e.target.value}/`, {\n            headers: {\n                \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\n            }\n        }).then((response) => {\n            setCar_model(response.data);\n        })\n    }\n\n    return <div className=\"car-model-wrapper\">\n        <div className=\"header\">\n            <div className=\"form-wrapper\">\n                <label htmlFor=\"\">Moshina brendini tanlang: </label>\n                <select onChange={getCarNames} name=\"car-brand\"\n                        id=\"car-brand\">\n                    <option value=\"\"></option>\n                    {car_make.map((brand) => (\n                        <option key={brand.id} value={brand.id}>\n                            {brand.translations[i18next.language].name}\n                        </option>\n                    ))}\n                </select>\n\n                <input\n                    value={translations.name_uz}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_uz: e.target.value})\n                    }\n                    placeholder=\"Avtomobil nomi (uz)...\"\n                    type=\"text\"\n                />\n\n                <input\n                    value={translations.name_en}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_en: e.target.value})\n                    }\n                    placeholder=\"Car name (en)...\"\n                    type=\"text\"\n                />\n\n                <input\n                    value={translations.name_ru}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_ru: e.target.value})\n                    }\n                    placeholder=\"Название автомобиля (ru)...\"\n                    type=\"text\"\n                />\n\n                {edit ? <div onClick={() => addColor(\"edit\")} className=\"add-color\">\n                    <img src=\"./images/admin/checkmark.png\" alt=\"\"/>\n                </div> : <div onClick={() => addColor(\"add\")} className=\"add-color\">\n                    <img src=\"./images/admin/add.png\" alt=\"\"/>\n                </div>}\n\n            </div>\n        </div>\n        <div className=\"colors-cards\">\n            <div className=\"wrapper-box\">\n                {\n                    car_model.map((color, index) => (\n                        <div key={index} className=\"color-card\">\n                            <div className=\"name\">{color.translations[i18next.language].name}</div>\n                            <div className=\"bttons\">\n                                <div onClick={() => handleEdit(color)} className=\"btn\">\n                                    <img src=\"./images/admin/edit-tools.png\" alt=\"\"/>\n                                </div>\n\n                                <div onClick={() => delColor(color.id)} className=\"btn\">\n                                    <img src=\"./images/admin/delete.png\" alt=\"\"/>\n                                </div>\n                            </div>\n                        </div>\n                    ))\n                }\n            </div>\n        </div>\n    </div>\n}\n\nexport default CarModel;","import {useEffect, useRef, useState, useMemo, useContext} from \"react\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport \"./style.scss\"\r\nimport {MyContext} from \"../../App/App\";\r\nimport axios from \"axios\";\r\n\r\nconst Payment = () => {\r\n    let value = useContext(MyContext);\r\n    const ref = useRef(null);\r\n    const [driversList, setDriversList] = useState([]);\r\n    const [getSearchText, setGetSearchText] = useState(\"\");\r\n    const worksPage = 100;\r\n    const [pageNumber, setPageNumber] = useState(0);\r\n    const pagesVisited = pageNumber * worksPage;\r\n    const [statistics, setStatistics] = useState([]);\r\n\r\n    const pageCount = Math.ceil(driversList.length / worksPage);\r\n\r\n    const changePage = ({selected}) => {\r\n        setPageNumber(selected)\r\n\r\n        setTimeout(() => {\r\n            ref.current?.scrollIntoView({behavior: \"smooth\"});\r\n        }, 500);\r\n    };\r\n\r\n    useEffect(() => {\r\n        axios.get(`${value.url}/dashboard/payment/`, {\r\n            headers: {\r\n                \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\r\n            }\r\n        }).then((response) => {\r\n            setDriversList(response.data.payment);\r\n            setStatistics(response.data.statistics);\r\n        })\r\n    }, []);\r\n\r\n    const productList = driversList.slice(pagesVisited, pagesVisited + worksPage)\r\n        .filter((item) => {\r\n            const searchText = getSearchText.toString().toLowerCase().replace(/\\s+/g, '').replace(/\\+/g, '');\r\n            const phoneNumber = item.balance_id.toString().toLowerCase().replace(/\\s+/g, '').replace(/\\+/g, '');\r\n            return searchText === \"\" || phoneNumber.includes(searchText);\r\n        }).map((item, index) => {\r\n            return <tr key={index}>\r\n                <td>{index + 1}</td>\r\n\r\n                <td>\r\n                    {item.balance_id}\r\n                </td>\r\n\r\n                <td>\r\n                    {item.amount}\r\n                </td>\r\n\r\n                <td>\r\n                    {item.status}\r\n                </td>\r\n                <td>\r\n                    {item.payment_operator}\r\n                </td>\r\n\r\n                <td>\r\n                    {item.updated_at}\r\n                </td>\r\n                <td>\r\n                    {item.reason}\r\n                </td>\r\n            </tr>\r\n        });\r\n\r\n    return <div className=\"payment-container\">\r\n        <div className=\"header\">\r\n            <div className=\"search-box\">\r\n                <img src=\"./images/admin/search.png\" alt=\"\"/>\r\n                <input onChange={(e) => setGetSearchText(e.target.value)} placeholder=\"ID kiritng\" type=\"text\"/>\r\n            </div>\r\n            <div className=\"statisitcs\">\r\n                {statistics.length > 0 && statistics.map((item, index) => (\r\n                    <div key={index} className=\"statistic-box\">\r\n                        <div className=\"name\">\r\n                            {item.status === \"refunded\" && \"Qaytarilgan\"}\r\n                            {item.status === \"waiting\" && \"Kutilmoqda\"}\r\n                            {item.status === \"confirmed\" && \"Tasdiqlangan\"}\r\n                            {item.status === \"rejected\" && \"Bekor qilingan\"}\r\n\r\n                        </div>\r\n                        <div className=\"num\">{item.count}</div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"wrapper-table\">\r\n            <table>\r\n                <thead>\r\n                <tr>\r\n                    <th>№</th>\r\n                    <th>Balans id</th>\r\n                    <th>Miqdor</th>\r\n                    <th>Status</th>\r\n                    <th>To'lov turi</th>\r\n                    <th>To'lov sanasi</th>\r\n                    <th>Sabab</th>\r\n                </tr>\r\n\r\n                </thead>\r\n\r\n                <tbody>\r\n                {productList}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n\r\n        <div className=\"pagination\">\r\n            {driversList.length > 100 ? <ReactPaginate\r\n                breakLabel=\"...\"\r\n                previousLabel={<img src=\"./images/admin/prev.png\" alt=\"\"/>}\r\n                nextLabel={<img src=\"./images/admin/next.png\" alt=\"\"/>}\r\n                pageCount={pageCount}\r\n                onPageChange={changePage}\r\n                containerClassName={\"paginationBttns\"}\r\n                previousLinkClassName={\"previousBttn\"}\r\n                nextLinkClassName={\"nextBttn\"}\r\n                disabledCalassName={\"paginationDisabled\"}\r\n                activeClassName={\"paginationActive\"}\r\n            /> : \"\"}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Payment","import \"./style.scss\"\nimport {useContext, useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {MyContext} from \"../../App/App\";\nimport i18next from \"i18next\";\n\nconst RejectReason = () => {\n    let value = useContext(MyContext);\n    const [colorsList, setColorsList] = useState([])\n    const [edit, setEdit] = useState(false)\n    const [editId, setEditId] = useState('')\n    const [translations, setTranslations] = useState(\n        {\n            name_uz: \"\",\n            name_ru: \"\",\n            name_en: \"\"\n        })\n\n    const getData = () => {\n        axios.get(`${value.url}/dashboard/rejectreson/`,{\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n        }).then((response) => {\n            setColorsList(response.data);\n        })\n    }\n\n    useEffect(() => {\n        getData()\n    }, []);\n\n    const addColor = (status) => {\n        const {name_uz, name_ru, name_en} = translations;\n\n        const isAnyNameFilled = name_uz.trim() && name_ru.trim() && name_en.trim();\n\n        if (!isAnyNameFilled) {\n            alert(\"Iltimos, rang nomini kiriting\");\n            return;\n        }\n\n        const translation_list = {\n            uz: {\n                name: name_uz.trim()\n            },\n            ru: {\n                name: name_ru.trim()\n            },\n            en: {\n                name: name_en.trim()\n            }\n        };\n\n        if (status === \"add\") {\n            axios.post(`${value.url}/dashboard/rejectreson/`, {translations: translation_list},\n                {\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n                })\n                .then((response) => {\n                    setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n                    getData();\n                })\n                .catch((error) => {\n                    console.error(\"Rang qo'shishda xatolik:\", error);\n                });\n        }\n\n        if (status === \"edit\") {\n            axios.put(`${value.url}/dashboard/rejectreson/${editId}/`, {translations: translation_list},\n                {\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n                })\n                .then((response) => {\n                    setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n                    getData();\n                    setEdit(false);\n                })\n                .catch((error) => {\n                    console.error(\"Rangni tahrirlashda xatolik:\", error);\n                });\n        }\n    };\n\n    const delColor = (id) => {\n        axios.delete(`${value.url}/dashboard/rejectreson/${id}/`,{\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n        }).then((response) => {\n            setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n            getData()\n            setEdit(false)\n        })\n    }\n\n    const handleEdit = (color) => {\n        setEdit(true);\n        setEditId(color.id);\n        setTranslations({\n            name_uz: color.translations[\"uz\"].name || \"\",\n            name_ru: color.translations[\"ru\"].name || \"\",\n            name_en: color.translations[\"en\"].name || \"\"\n        });\n    };\n\n    return <div className=\"reject-reason-wrapper\">\n        <div className=\"header\">\n            <div className=\"form-wrapper\">\n                <input\n                    value={translations.name_uz}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_uz: e.target.value})\n                    }\n                    placeholder=\"Sabab nomi (uz)...\"\n                    type=\"text\"\n                />\n                <input\n                    value={translations.name_en}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_en: e.target.value})\n                    }\n                    placeholder=\"Reason name (en)...\"\n                    type=\"text\"\n                />\n\n                <input\n                    value={translations.name_ru}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_ru: e.target.value})\n                    }\n                    placeholder=\"Название причины (ru)...\"\n                    type=\"text\"\n                />\n\n\n                {edit ? <div onClick={() => addColor(\"edit\")} className=\"add-color\">\n                    <img src=\"./images/admin/checkmark.png\" alt=\"\"/>\n                </div> : <div onClick={() => addColor(\"add\")} className=\"add-color\">\n                    <img src=\"./images/admin/add.png\" alt=\"\"/>\n                </div>}\n\n            </div>\n        </div>\n        <div className=\"colors-cards\">\n            <div className=\"wrapper-box\">\n                {\n                    colorsList.map((color, index) => (\n                        <div key={index} className=\"color-card\">\n                            <div className=\"name\">{color.translations[i18next.language].name}</div>\n                            <div className=\"bttons\">\n                                <div onClick={() => handleEdit(color)} className=\"btn\">\n                                    <img src=\"./images/admin/edit-tools.png\" alt=\"\"/>\n                                </div>\n\n                                <div onClick={() => delColor(color.id)} className=\"btn\">\n                                    <img src=\"./images/admin/delete.png\" alt=\"\"/>\n                                </div>\n                            </div>\n                        </div>\n                    ))\n                }\n            </div>\n        </div>\n    </div>\n}\n\nexport default RejectReason;","import \"./style.scss\"\nimport {useContext, useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {MyContext} from \"../../App/App\";\nimport i18next from \"i18next\";\n\nconst ExtraServices = () => {\n    let value = useContext(MyContext);\n    const [colorsList, setColorsList] = useState([])\n    const [edit, setEdit] = useState(false)\n    const [editId, setEditId] = useState('')\n    const [isMain, setIsMain] = useState(false);\n    const [price, setPrice] = useState(\"\");\n    const [translations, setTranslations] = useState(\n        {\n            name_uz: \"\",\n            name_ru: \"\",\n            name_en: \"\"\n        })\n\n    const getData = () => {\n        axios.get(`${value.url}/dashboard/extraservices/`, {\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n        }).then((response) => {\n            setColorsList(response.data);\n        })\n    }\n\n    useEffect(() => {\n        getData()\n    }, []);\n\n    const addColor = (status) => {\n        const {name_uz, name_ru, name_en} = translations;\n\n        const isAnyNameFilled = name_uz.trim() && name_ru.trim() && name_en.trim();\n\n        if (!isAnyNameFilled) {\n            alert(\"Iltimos, formani toldiring\");\n            return;\n        }\n\n        const translation_list = {\n            uz: {\n                name: name_uz.trim()\n            },\n            ru: {\n                name: name_ru.trim()\n            },\n            en: {\n                name: name_en.trim()\n            }\n        };\n\n        if (status === \"add\") {\n            axios.post(`${value.url}/dashboard/extraservices/`, {\n                    is_main: isMain,\n                    price,\n                    translations: translation_list\n                },\n                {\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n                })\n                .then((response) => {\n                    setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n                    setIsMain(false);\n                    setPrice(\"\")\n                    getData();\n                })\n                .catch((error) => {\n                    console.error(\"Xizmat qo'shishda xatolik:\", error);\n                });\n        }\n\n        if (status === \"edit\") {\n            axios.put(`${value.url}/dashboard/extraservices/${editId}/`, {\n                    is_main: isMain,\n                    price,\n                    translations: translation_list\n                },\n                {\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n                })\n                .then((response) => {\n                    setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n                    getData();\n                    setEdit(false);\n                    setIsMain(false);\n                    setPrice(\"\")\n                })\n                .catch((error) => {\n                    console.error(\"Rangni tahrirlashda xatolik:\", error);\n                });\n        }\n    };\n\n    const delColor = (id) => {\n        axios.delete(`${value.url}/dashboard/extraservices/${id}/`, {\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n        }).then((response) => {\n            setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n            getData()\n            setEdit(false)\n        })\n    }\n\n    const handleEdit = (color) => {\n        setEdit(true);\n        setEditId(color.id);\n        setTranslations({\n            name_uz: color.translations[\"uz\"].name || \"\",\n            name_ru: color.translations[\"ru\"].name || \"\",\n            name_en: color.translations[\"en\"].name || \"\"\n        });\n        setIsMain(color.is_main)\n        setPrice(color.price)\n    };\n\n    const handleCheckboxChange = () => {\n        setIsMain(!isMain);\n    };\n\n    return <div className=\"extra-services-wrapper\">\n        <div className=\"header\">\n            <div className=\"form-wrapper\">\n\n                <label htmlFor=\"ismain\" className=\"ismain\">\n                    <div className=\"name\">\n                        Asosiymi?\n                    </div>\n\n                    <input\n                        type=\"checkbox\"\n                        checked={isMain}\n                        id=\"ismain\"\n                        onChange={handleCheckboxChange}\n                    />\n                </label>\n\n                <input\n                    value={price}\n                    onChange={(e) => setPrice(e.target.value)}\n                    placeholder=\"Narx\"\n                    type=\"number\"\n                />\n\n\n                <input\n                    value={translations.name_uz}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_uz: e.target.value})\n                    }\n                    placeholder=\"Xizmat nomi (uz)...\"\n                    type=\"text\"\n                />\n                <input\n                    value={translations.name_en}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_en: e.target.value})\n                    }\n                    placeholder=\"Price name (en)...\"\n                    type=\"text\"\n                />\n\n                <input\n                    value={translations.name_ru}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_ru: e.target.value})\n                    }\n                    placeholder=\"Название услуги (ru)...\"\n                    type=\"text\"\n                />\n\n\n                {edit ? <div onClick={() => addColor(\"edit\")} className=\"add-color\">\n                    <img src=\"./images/admin/checkmark.png\" alt=\"\"/>\n                </div> : <div onClick={() => addColor(\"add\")} className=\"add-color\">\n                    <img src=\"./images/admin/add.png\" alt=\"\"/>\n                </div>}\n\n            </div>\n        </div>\n        <div className=\"colors-cards\">\n            <div className=\"wrapper-box\">\n                {\n                    colorsList.map((service, index) => (\n                        <div key={index} className={`color-card ${service.is_main && \"ismain\"}`}>\n                            <div className=\"name\">{service.translations[i18next.language].name}: {service.price} so'm\n                            </div>\n                            <div className=\"bttons\">\n                                <div onClick={() => handleEdit(service)} className=\"btn\">\n                                    <img src=\"./images/admin/edit-tools.png\" alt=\"\"/>\n                                </div>\n\n                                <div onClick={() => delColor(service.id)} className=\"btn\">\n                                    <img src=\"./images/admin/delete.png\" alt=\"\"/>\n                                </div>\n                            </div>\n                        </div>\n                    ))\n                }\n            </div>\n        </div>\n    </div>\n}\n\nexport default ExtraServices;","import {useEffect, useRef, useState, useContext} from \"react\";\r\nimport {CSSTransition} from \"react-transition-group\";\r\nimport {useFormik} from \"formik\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport {\r\n    TextField,\r\n    MenuItem,\r\n    InputLabel,\r\n    FormControl,\r\n    Select\r\n} from \"@mui/material\";\r\nimport \"./style.scss\"\r\nimport axios from \"axios\";\r\nimport {MyContext} from \"../../App/App\";\r\nimport i18next from \"i18next\";\r\n\r\nconst Price = () => {\r\n    let value = useContext(MyContext);\r\n    const [modalShow, setModalShow] = useState({show: false, status: false});\r\n    const nodeRef = useRef(null);\r\n    const [direction, setDirection] = useState([])\r\n    const [tarif, setTarif] = useState([]);\r\n    const [regions, setRegions] = useState([]);\r\n    const [serviceList, setServiceList] = useState([]);\r\n    const [editId, setEditId] = useState(\"\");\r\n    const ref = useRef(null);\r\n    const worksPage = 50;\r\n    const [pageNumber, setPageNumber] = useState(0);\r\n    const pagesVisited = pageNumber * worksPage;\r\n\r\n    const pageCount = Math.ceil(serviceList.length / worksPage);\r\n\r\n    const changePage = ({selected}) => {\r\n        setPageNumber(selected)\r\n\r\n        setTimeout(() => {\r\n            ref.current?.scrollIntoView({behavior: \"smooth\"});\r\n        }, 500);\r\n    };\r\n\r\n    const validate = (values) => {\r\n        const errors = {};\r\n\r\n        if (!values.car_service) {\r\n            errors.car_service = \"Required\";\r\n        }\r\n\r\n        if (!values.car_category) {\r\n            errors.car_category = \"Required\";\r\n        }\r\n        if (!values.from_region) {\r\n            errors.from_region = \"Required\";\r\n        }\r\n        if (!values.to_region) {\r\n            errors.to_region = \"Required\";\r\n        }\r\n        if (!values.price) {\r\n            errors.price = \"Required\";\r\n        }\r\n\r\n        return errors;\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            car_service: \"\",\r\n            car_category: \"\",\r\n            from_region: \"\",\r\n            to_region: \"\",\r\n            price: \"\",\r\n        },\r\n        validate,\r\n        onSubmit: (values) => {\r\n            sendAllInfo()\r\n        },\r\n    });\r\n\r\n    const sendAllInfo = () => {\r\n        let allInfo = {\r\n            car_service: formik.values.car_service,\r\n            car_category: formik.values.car_category,\r\n            from_region: formik.values.from_region,\r\n            to_region: formik.values.to_region,\r\n            price: formik.values.price,\r\n        }\r\n\r\n        if (!editId) {\r\n            axios.post(`${value.url}/dashboard/price/`, allInfo, {\r\n                headers: {\r\n                    Authorization: `Token ${localStorage.getItem(\"token\")}`,\r\n                },\r\n            }).then((response) => {\r\n                getDrivers()\r\n                setModalShow({status: \"\", show: false})\r\n                formik.resetForm();\r\n            })\r\n        }\r\n\r\n        if (editId) {\r\n            axios.put(`${value.url}/dashboard/price/${editId}/`, allInfo,\r\n                {\r\n                    headers: {\r\n                        Authorization: `Token ${localStorage.getItem(\"token\")}`,\r\n                    },\r\n                }).then((response) => {\r\n                getDrivers()\r\n                formik.resetForm();\r\n                setModalShow({status: \"\", show: false})\r\n            })\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getDrivers()\r\n\r\n        axios.get(`${value.url}/dashboard/region/`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setRegions(response.data);\r\n        })\r\n\r\n        axios.get(`${value.url}/dashboard/carcategory/`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setTarif(response.data);\r\n        })\r\n\r\n        axios.get(`${value.url}/dashboard/carservice/`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setDirection(response.data);\r\n        })\r\n\r\n    }, []);\r\n\r\n    const delColor = (id) => {\r\n        axios.delete(`${value.url}/dashboard/price/${id}/`, {\r\n            headers: {\r\n                Authorization: `Token ${localStorage.getItem(\"token\")}`,\r\n            },\r\n        }).then((response) => {\r\n            getDrivers()\r\n        })\r\n    }\r\n\r\n    const getDrivers = () => {\r\n        axios.get(`${value.url}/dashboard/price/`, {\r\n            headers: {\r\n                Authorization: `Token ${localStorage.getItem(\"token\")}`,\r\n            },\r\n        }).then((response) => {\r\n            setServiceList(response.data);\r\n        })\r\n    }\r\n\r\n    const editValues = (service) => {\r\n        setEditId(service.id)\r\n        setModalShow({show: true, status: \"edit-driver\"});\r\n        formik.setValues({\r\n            car_service: service.car_service,\r\n            car_category: service.car_category,\r\n            from_region: service.from_region,\r\n            to_region: service.to_region,\r\n            price: service.price,\r\n        });\r\n    }\r\n\r\n    const productList = serviceList.slice(pagesVisited, pagesVisited + worksPage).map((item, index) => {\r\n        return <tr key={index}>\r\n            <td>{index + 1}</td>\r\n            <td>\r\n                {item.car_service}\r\n            </td>\r\n            <td>\r\n                {item.car_category}\r\n            </td>\r\n            <td>{item.from_region}</td>\r\n            <td>{item.to_region}</td>\r\n            <td>{item.price}</td>\r\n            <td>\r\n                <div className=\"icon\">\r\n                    <img onClick={() => delColor(item.id)} src=\"./images/admin/delete.png\" alt=\"\"/>\r\n                </div>\r\n            </td>\r\n            <td>\r\n            </td>\r\n            <div className=\"edit-icon\">\r\n                <img onClick={() => editValues(item)} src=\"./images/admin/edit-tools.png\" alt=\"\"/>\r\n            </div>\r\n        </tr>\r\n    });\r\n\r\n    return <div className=\"price-container\">\r\n        <CSSTransition\r\n            in={modalShow.show}\r\n            nodeRef={nodeRef}\r\n            timeout={300}\r\n            classNames=\"alert\"\r\n            unmountOnExit\r\n        >\r\n            <div className=\"modal-sloy\">\r\n                <div ref={nodeRef} className=\"modal-card\">\r\n\r\n                    {modalShow.status === \"add-driver\" && (\r\n                        <div className=\"add-driver\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img\r\n                                    onClick={() => setModalShow({status: \"\", show: false})}\r\n                                    src=\"./images/admin/x.png\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"title\">Narx qo'shish</div>\r\n\r\n                            <div className=\"form-container\">\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Yo'nalish</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.car_service === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.car_service}\r\n                                                label=\"Yo'nalish\"\r\n                                                name=\"car_service\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {direction.map((item, index) => (\r\n                                                    <MenuItem key={index} value={item.service_type}>\r\n                                                        {item.translations[i18next.language].name}\r\n                                                    </MenuItem>\r\n                                                ))}\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Tarif</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.car_category === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.car_category}\r\n                                                label=\"Tarif\"\r\n                                                name=\"car_category\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {tarif.map((item, index) => (\r\n                                                    <MenuItem key={index} value={item.category_type}>\r\n                                                        {item.translations[i18next.language].name}\r\n                                                    </MenuItem>\r\n                                                ))}\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Qayerdan</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.from_region === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.from_region}\r\n                                                label=\"Qayerdan\"\r\n                                                name=\"from_region\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {\r\n                                                    regions.map((item, index) => {\r\n                                                        return <MenuItem key={index}\r\n                                                                         value={item.id}>\r\n                                                            {item.translations[i18next.language].name}\r\n                                                        </MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Qayerga</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.to_region === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.to_region}\r\n                                                label=\"Qayerga\"\r\n                                                name=\"to_region\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {\r\n                                                    regions.map((item, index) => {\r\n                                                        return <MenuItem key={index}\r\n                                                                         value={item.id}>\r\n                                                            {item.translations[i18next.language].name}\r\n                                                        </MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.price === \"Required\"}\r\n                                            value={formik.values.price}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"price\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Narxi\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div onClick={sendAllInfo} className=\"add-btn\">\r\n                                    Narx qo'shish\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalShow.status === \"edit-driver\" && (\r\n                        <div className=\"add-driver\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img\r\n                                    onClick={() => setModalShow({status: \"\", show: false})}\r\n                                    src=\"./images/admin/x.png\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"title\">Narxni tahrirlash</div>\r\n\r\n                            <div className=\"form-container\">\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Yo'nalish</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.car_service === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.car_service}\r\n                                                label=\"Yo'nalish\"\r\n                                                name=\"car_service\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {direction.map((item, index) => (\r\n                                                    <MenuItem key={index} value={item.service_type}>\r\n                                                        {item.translations[i18next.language].name}\r\n                                                    </MenuItem>\r\n                                                ))}\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Tarif</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.car_category === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.car_category}\r\n                                                label=\"Tarif\"\r\n                                                name=\"car_category\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {tarif.map((item, index) => (\r\n                                                    <MenuItem key={index} value={item.category_type}>\r\n                                                        {item.translations[i18next.language].name}\r\n                                                    </MenuItem>\r\n                                                ))}\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Qayerdan</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.from_region === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.from_region}\r\n                                                label=\"Qayerdan\"\r\n                                                name=\"from_region\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {\r\n                                                    regions.map((item, index) => {\r\n                                                        return <MenuItem key={index}\r\n                                                                         value={item.id}>\r\n                                                            {item.translations[i18next.language].name}\r\n                                                        </MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Qayerga</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.to_region === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.to_region}\r\n                                                label=\"Qayerga\"\r\n                                                name=\"to_region\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {\r\n                                                    regions.map((item, index) => {\r\n                                                        return <MenuItem key={index}\r\n                                                                         value={item.id}>\r\n                                                            {item.translations[i18next.language].name}\r\n                                                        </MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.price === \"Required\"}\r\n                                            value={formik.values.price}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"price\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Narxi\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div onClick={sendAllInfo} className=\"add-btn\">\r\n                                    Saqlash\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                </div>\r\n            </div>\r\n        </CSSTransition>\r\n\r\n        <div className=\"header\">\r\n            <div onClick={() => {\r\n                setModalShow({show: true, status: \"add-driver\"});\r\n            }} className=\"add-driver-btn\">\r\n                Narx qo'shish\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"table-wrapper\">\r\n            <table>\r\n                <thead>\r\n                <tr>\r\n                    <th>№</th>\r\n                    <th>Yo'nalish</th>\r\n                    <th>Tarif</th>\r\n                    <th>Qayerdan</th>\r\n                    <th>Qayerga</th>\r\n                    <th>Narx</th>\r\n                    <th>O'chirish</th>\r\n                    <th></th>\r\n                </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                {productList}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n\r\n        <div className=\"pagination\">\r\n            {serviceList.length > 50 ? <ReactPaginate\r\n                breakLabel=\"...\"\r\n                previousLabel={<img src=\"./images/admin/prev.png\" alt=\"\"/>}\r\n                nextLabel={<img src=\"./images/admin/next.png\" alt=\"\"/>}\r\n                pageCount={pageCount}\r\n                onPageChange={changePage}\r\n                containerClassName={\"paginationBttns\"}\r\n                previousLinkClassName={\"previousBttn\"}\r\n                nextLinkClassName={\"nextBttn\"}\r\n                disabledCalassName={\"paginationDisabled\"}\r\n                activeClassName={\"paginationActive\"}\r\n            /> : \"\"}\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default Price","\r\nimport MainHome from \"./components/admin/admin home/MainHome\";\r\nimport Admin from \"./components/admin/Admin/Admin\";\r\nimport LoginAdmin from \"./components/login/LoginAdmin\";\r\nimport Drivers from \"./components/admin/drivers/Drivers\";\r\nimport ChatDriver from \"./components/admin/chat/ChatDriver\";\r\nimport Clients from \"./components/admin/clients/Clients\";\r\nimport Colors from \"./components/admin/colors/Colors\";\r\nimport CarBrand from \"./components/admin/car-brend/CarBrand\";\r\nimport Service from \"./components/admin/service/Service\";\r\nimport Balance from \"./components/admin/balance/Balance\";\r\nimport Orders from \"./components/admin/orders/Orders\";\r\nimport CarModel from \"./components/admin/car-model/CarModel\";\r\nimport Payment from \"./components/admin/payment/Payment\";\r\nimport RejectReason from \"./components/admin/reject-reason/RejectReason\";\r\nimport ExtraServices from \"./components/admin/extra-services/ExtraServices\";\r\nimport Price from \"./components/admin/price/Price\";\r\n\r\nexport const publicRoutes = [\r\n    {\r\n        path: \"/\",\r\n        element: <LoginAdmin/>\r\n    }];\r\n\r\nexport const adminRoutes = [\r\n    {\r\n        path: \"/*\",\r\n        element: <Admin/>\r\n    },\r\n];\r\n\r\nexport const adminPageRoutes = [\r\n    {\r\n        path: \"/\",\r\n        element: <MainHome/>\r\n    },\r\n    {\r\n        path: \"/drivers\",\r\n        element: <Drivers/>\r\n    },\r\n    {\r\n        path: \"/clients\",\r\n        element: <Clients/>\r\n    },\r\n    {\r\n        path: \"/chat-drivers\",\r\n        element: <ChatDriver/>\r\n    },\r\n    {\r\n        path: \"/colors\",\r\n        element: <Colors/>\r\n    },\r\n    {\r\n        path: \"/car-brands\",\r\n        element: <CarBrand/>\r\n    },\r\n    {\r\n        path: \"/car-models\",\r\n        element: <CarModel/>\r\n    },\r\n    {\r\n        path: \"/service\",\r\n        element: <Service/>\r\n    },\r\n    {\r\n        path: \"/balance\",\r\n        element: <Balance/>\r\n    },\r\n    {\r\n        path: \"/orders\",\r\n        element: <Orders/>\r\n    },\r\n    {\r\n        path: \"/payment\",\r\n        element: <Payment/>\r\n    },\r\n    {\r\n        path: \"/reject-reason\",\r\n        element: <RejectReason/>\r\n    },\r\n    {\r\n        path: \"/extra-services\",\r\n        element: <ExtraServices/>\r\n    },\r\n\r\n    {\r\n        path: \"/price\",\r\n        element: <Price/>\r\n    },\r\n\r\n];","import \"./not-found.scss\"\r\n\r\nconst NotFound = () => {\r\n    return <div className=\"not-found-wrapper\">\r\n        <div className=\"sloy\">\r\n            <div className=\"text1\">\r\n                <div className=\"error\">\r\n                    error 404\r\n                </div>\r\n                <div className=\"text\">\r\n                    Page not found\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport default NotFound","import React, {useMemo, useState, createContext} from \"react\";\r\nimport {Routes, Route} from \"react-router-dom\";\r\nimport {adminRoutes, publicRoutes} from \"../../rootes\";\r\nimport NotFound from \"../notFound/NotFound\";\r\n\r\nexport const MyContext = createContext();\r\n\r\nfunction App() {\r\n    const [url, setUrl] = useState('https://api.adataxi.uz');\r\n\r\n    const admin = useMemo(() => localStorage.getItem('admin'), []);\r\n\r\n    const routes = useMemo(() => {\r\n        if (admin) return adminRoutes;\r\n        return publicRoutes\r\n    }, [admin]);\r\n\r\n    return (\r\n        <>\r\n            <MyContext.Provider value={{\r\n                url\r\n            }}>\r\n                <Routes>\r\n                    {\r\n                        routes.map((route, index) => (\r\n                            <Route key={index} {...route} />\r\n                        ))\r\n                    }\r\n                    <Route path={'*'} element={<NotFound/>}/>\r\n                </Routes>\r\n\r\n            </MyContext.Provider>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;"],"names":["Loader","_jsx","_Fragment","children","className","MainHome","statisitc","setStatisitc","useState","locationsList","setLocationsList","WebSocket","concat","localStorage","getItem","useEffect","axios","get","then","response","data","selectedLocation","setSelectedLocation","isLoaded","useLoadScript","googleMapsApiKey","center","useMemo","lat","lng","options","disableDefaultUI","clickableIcons","icon","url","scaledSize","width","height","_jsxs","src","alt","drivers","clients","avilable_drivers","rides","GoogleMap","zoom","mapContainerClassName","length","map","item","Marker","position","Number","latitude","longitude","onClick","InfoWindow","onCloseClick","car_number","phone_number","Admin","t","useTranslation","useContext","MyContext","navigate","useNavigate","adminMenu","setAdminMenu","language","code","name","country_code","img","index","NavLink","to","_ref","isActive","Dropdown","Toggle","variant","id","loading","i18next","Menu","_ref2","Item","setItem","changeLanguage","window","location","pathname","removeItem","Routes","adminPageRoutes","route","Route","_objectSpread","useOnKeyPress","callback","targetKey","keyPressHandler","event","key","addEventListener","removeEventListener","LoginAdmin","value","phone","setPhone","password","setPassword","HandleLogin","trim","user","username","post","token","catch","error","status","alert","Clear","onChange","e","target","placeholder","type","onKeyUp","console","log","LoaderAdmin","Drivers","modalShow","setModalShow","show","nodeRef","useRef","ref","getSearchText","setGetSearchText","driverPhoto","setDriverPhoto","carInformation","setCarInformation","driversList","setDriversList","driverId","setDriverId","reason","setReason","loader","setLoader","car_serviceId","setCarServiceId","car_categoriesId","setCarCategoriesId","regions","setRegions","luggage","setLuggage","profileImage","setProfileImage","car_images","setCar_images","base_car_images","setBase_Car_images","doc_images","setDocImages","base_doc_images","setBaseDocImages","car_make","setCar_make","car_model","setCar_model","car_colors","setCar_colors","extra_services","setExtra_services","extra_servicesList","setExtra_servicesList","car_categories","setCar_categories","car_service","setCar_service","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","pageNumber","setPageNumber","pagesVisited","pageCount","Math","ceil","formik","useFormik","initialValues","first_name","last_name","birth_date","car_color","seat_count","from_region","to_region","validate","values","errors","onSubmit","sendAllInfo","getDrivers","headers","finally","getCarNames","getInputPhoto","file","files","formData","FormData","role","gender","is_verified","is_confirmed","driver","append","Array","isArray","forEach","resetForm","patch","blockDriver","driver_id","getCarImages","getDocsImages","productList","slice","filter","searchText","toString","toLowerCase","replace","phoneNumber","includes","profile_image","user_name","translations","getInformation","available_services","available_categories","is_block","setValues","service","CSSTransition","in","timeout","classNames","unmountOnExit","TextField","handleChange","sx","m","minWidth","size","label","htmlFor","FormControl","InputLabel","Select","labelid","MenuItem","touched","Boolean","helperText","inputProps","min","fullWidth","labelId","multiple","setFieldValue","split","input","OutlinedInput","renderValue","selected","find","i","join","Checkbox","checked","ListItemText","primary","handleSubmit","rate","finished_orders_count","category","handleCheckboxChangeService","serviceId","prevSelected","handleCheckboxChangeCategory","verify","image","handleDeleteImageBase","driver_car_image","preview","prevImages","_","handleDeleteImage","reader","FileReader","onloadend","result","readAsDataURL","addCar_Images","handleDeleteImageDocsBase","driver_document_image","handleDeleteImageDocs","addCar_Images_Docs","ReactPaginate","breakLabel","previousLabel","nextLabel","onPageChange","setTimeout","_ref$current","current","scrollIntoView","behavior","containerClassName","previousLinkClassName","nextLinkClassName","disabledCalassName","activeClassName","ChatDriver","bodyRef","chats","setChats","message","setMessage","activeCHat","setActiveChat","messageText","setMessageText","scrollTop","scrollHeight","Authorization","user_phone","chat","getMessage","title","chat_id","closed","delChat","delete","author","is_admin","time","sendMessage","room","Clients","client_id","Colors","setTranslations","name_uz","name_ru","name_en","colorsList","setColorsList","edit","setEdit","editId","setEditId","getData","addColor","translation_list","uz","ru","en","put","color","handleEdit","delColor","CarBrand","Service","serviceList","setServiceList","start_price","price_per_km","price_per_min","wait_price_per_min","free_wait_time","includedCars","allInfo","editValues","Balance","id_number","fund","Orders","links","setLinks","Pages","setPages","activeItem","setActiveItem","statistics","setStatistics","information","setInformation","tabs","setTabs","visiblePages","totalPages","push","max","getList","arguments","undefined","page","main","results","pages","client","created_at","car_category","price","previous","cursor","next","CarModel","carBrandId","setCarBrandId","make","brand","Payment","payment","balance_id","amount","payment_operator","updated_at","count","RejectReason","ExtraServices","isMain","setIsMain","setPrice","is_main","handleCheckboxChange","Price","direction","setDirection","tarif","setTarif","service_type","category_type","publicRoutes","path","element","adminRoutes","NotFound","createContext","setUrl","admin","routes","Provider"],"sourceRoot":""}
{"version":3,"file":"static/js/242.c650e78e.chunk.js","mappings":"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","sources":["components/admin/admin home/loader/Loader.jsx","components/admin/admin home/MainHome.jsx","components/admin/Admin/Admin.jsx","components/login/useOnKeyPress.js","components/login/LoginAdmin.jsx","components/admin/loader-admin/LoaderAdmin.js","components/admin/drivers/Drivers.jsx","components/admin/chat/ChatDriver.jsx","components/admin/clients/Clients.jsx","components/admin/colors/Colors.jsx","components/admin/car-brend/CarBrand.jsx","components/admin/service/Service.jsx","components/admin/balance/Balance.jsx","components/admin/orders/Orders.jsx","components/admin/car-model/CarModel.jsx","components/admin/payment/Payment.jsx","components/admin/reject-reason/RejectReason.jsx","components/admin/extra-services/ExtraServices.jsx","components/admin/price/Price.jsx","rootes.jsx","components/notFound/NotFound.jsx","components/App/App.js"],"sourcesContent":["import \"./loader.scss\";\r\n\r\nconst Loader = () => {\r\n    return <>\r\n        <div className=\"spinner-container\">\r\n            <div className=\"sloy\">\r\n                <span className=\"loader\"></span>\r\n            </div>\r\n\r\n        </div>\r\n    </>\r\n};\r\n\r\nexport default Loader;","import \"./adminHome.scss\"\r\nimport {useEffect, useMemo, useState, createContext} from \"react\"\r\nimport {GoogleMap, useLoadScript, MarkerF} from \"@react-google-maps/api\";\r\nimport Loader from \"./loader/Loader\";\r\nimport axios from \"axios\";\r\nimport {w3cwebsocket as W3CWebSocket} from \"websocket\";\r\n\r\nconst API_KEY = \"AIzaSyBEN2azIRg6YCHa-tV8yAEUJoHsn__fRBM\";\r\n\r\nconst MainHome = () => {\r\n    const [statisitc, setStatisitc] = useState([]);\r\n    const [sockedContext, setSockedContext] = useState(null);\r\n    const [locationsList, setLocationsList] = useState([]);\r\n    const [center, setCenter] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (!localStorage.getItem(\"token\")) return;\r\n\r\n        const websocket = new W3CWebSocket(`wss://api.adataxi.uz/ws/client/?token=${localStorage.getItem(\"token\")}`);\r\n        setSockedContext(websocket);\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        navigator.geolocation.getCurrentPosition((position) => {\r\n            const {latitude, longitude} = position.coords;\r\n            let locMy = {lat: latitude, lng: longitude};\r\n            setCenter(locMy);\r\n        });\r\n\r\n\r\n        axios.get(`https://api.adataxi.uz/api/v1/site/statistics/`).then((response) => {\r\n            setStatisitc(response.data[0])\r\n        })\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (!sockedContext) return;\r\n        sockedContext.onmessage = (event) => {\r\n            const data = JSON.parse(event.data);\r\n            if (data.message?.code === -35) {\r\n                localStorage.removeItem(\"token\");\r\n                localStorage.removeItem(\"userId\");\r\n                window.location.pathname = \"/\";\r\n                return;\r\n            }\r\n            if (data.action === \"driver_location\") {\r\n                setLocationsList(data.message)\r\n            }\r\n        };\r\n    }, [sockedContext]);\r\n\r\n    const {isLoaded} = useLoadScript({\r\n        googleMapsApiKey: API_KEY\r\n    });\r\n\r\n    const options = useMemo(() => (\r\n        {\r\n            disableDefaultUI: false,\r\n            clickableIcons: false\r\n        }), []);\r\n\r\n    if (!isLoaded) return <Loader/>;\r\n\r\n    const icon = {url: './images/admin/driver-icon.png', scaledSize: {width: 45, height: 45}};\r\n\r\n    return <div className=\"admin-home-container\">\r\n\r\n        <div className=\"header-side\">\r\n            <div className=\"statistic-card\">\r\n                <div className=\"icon\">\r\n                    <img src=\"./images/admin/driver.png\" alt=\"\"/>\r\n                </div>\r\n                <div className=\"title\">Haydovchilar soni:</div>\r\n                <div className=\"count\">{statisitc.drivers}</div>\r\n            </div>\r\n            <div className=\"statistic-card\">\r\n                <div className=\"icon\">\r\n                    <img src=\"./images/admin/user.png\" alt=\"\"/>\r\n                </div>\r\n                <div className=\"title\">Mijozlar soni:</div>\r\n                <div className=\"count\">{statisitc.clients}</div>\r\n            </div>\r\n            <div className=\"statistic-card\">\r\n                <div className=\"icon\">\r\n                    <img src=\"./images/admin/handshake.png\" alt=\"\"/>\r\n                </div>\r\n                <div className=\"title\">Hamkorlar soni:</div>\r\n                <div className=\"count\">{statisitc.avilable_drivers}</div>\r\n            </div>\r\n            <div className=\"statistic-card\">\r\n                <div className=\"icon\">\r\n                    <img src=\"./images/admin/shopping-list.png\" alt=\"\"/>\r\n                </div>\r\n                <div className=\"title\">Yakunlangan soni:</div>\r\n                <div className=\"count\">{statisitc.rides}</div>\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"map\">\r\n            <GoogleMap\r\n                zoom={5}\r\n                center={center}\r\n                options={options}\r\n                mapContainerClassName=\"map-container\">\r\n\r\n                {locationsList.latitude && locationsList.longitude && (\r\n                    <MarkerF\r\n                        position={{lat: locationsList.latitude, lng: locationsList.longitude}}\r\n                        icon={icon}\r\n                    />)}\r\n\r\n            </GoogleMap>\r\n        </div>\r\n    </div>\r\n};\r\n\r\n\r\nexport default MainHome","import {useState, useEffect, useContext} from \"react\";\r\nimport {useNavigate, Route, Routes, NavLink} from \"react-router-dom\";\r\nimport \"./admin.scss\"\r\nimport {adminPageRoutes} from \"../../../rootes\";\r\nimport {MyContext} from \"../../App/App\";\r\nimport i18next from \"i18next\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\n\r\nconst Admin = () => {\r\n    const {t} = useTranslation();\r\n    let value = useContext(MyContext);\r\n    const navigate = useNavigate();\r\n    const [adminMenu, setAdminMenu] = useState(false)\r\n\r\n    const menues = [\r\n        {\r\n            name: \"Dashboard\",\r\n            url: \"/\",\r\n            img: \"../images/admin/dashboard.png\"\r\n        },\r\n        {\r\n            name: \"Haydovchilar\",\r\n            url: \"/drivers\",\r\n            img: \"../images/admin/driver.png\"\r\n        },\r\n        {\r\n            name: \"Mijozlar\",\r\n            url: \"/clients\",\r\n            img: \"../images/admin/user.png\"\r\n        },\r\n        {\r\n            name: \"Buyurtmalar\",\r\n            url: \"/orders\",\r\n            img: \"../images/admin/shopping-list.png\"\r\n        },\r\n        {\r\n            name: \"Moshina brendi\",\r\n            url: \"/car-brands\",\r\n            img: \"../images/admin/car.png\"\r\n        },\r\n        {\r\n            name: \"Moshina modeli\",\r\n            url: \"/car-models\",\r\n            img: \"../images/admin/car.png\"\r\n        },\r\n        {\r\n            name: \"Ranglar\",\r\n            url: \"/colors\",\r\n            img: \"../images/admin/palette.png\"\r\n        },\r\n        {\r\n            name: \"Narxlar\",\r\n            url: \"/price\",\r\n            img: \"../images/admin/price-list.png\"\r\n        },\r\n        {\r\n            name: \"Qo'shimcha xizmatlar\",\r\n            url: \"/extra-services\",\r\n            img: \"../images/admin/technical-service.png\"\r\n        },\r\n        {\r\n            name: \"Bekor qilish sababi\",\r\n            url: \"/reject-reason\",\r\n            img: \"../images/admin/rejected.png\"\r\n        },\r\n\r\n        // {\r\n        //     name: \"Tariflar\",\r\n        //     url: \"/service\",\r\n        //     img: \"../images/admin/list.png\"\r\n        // },\r\n\r\n        {\r\n            name: \"Balans\",\r\n            url: \"/balance\",\r\n            img: \"../images/admin/wallet.png\"\r\n        },\r\n        {\r\n            name: \"To'lov tizimi\",\r\n            url: \"/payment\",\r\n            img: \"../images/admin/credit-card.png\"\r\n        },\r\n    ];\r\n\r\n    useEffect(() => {\r\n        // axios.get(`${value.url}dashboard/home/`, {\r\n        //     headers: {\r\n        //         \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\r\n        //     }\r\n        // }).then((response) => {\r\n        //     setStatisticsCount(response.data)\r\n        //     setCountPrice(response.data.balance)\r\n        // }).catch((error) => {\r\n        //     if (error.response.statusText == \"Unauthorized\") {\r\n        //         window.location.pathname = \"/\";\r\n        //         localStorage.removeItem(\"token\");\r\n        //     }\r\n        // });\r\n    }, []);\r\n\r\n    const language = [\r\n        {\r\n            code: \"uz\",\r\n            name: \"O'zbek tili\",\r\n            country_code: \"uz\",\r\n        },\r\n        {\r\n            code: \"en\",\r\n            name: \"English language\",\r\n            country_code: \"en\",\r\n        },\r\n        {\r\n            code: \"ru\",\r\n            name: \"Pусский язык\",\r\n            country_code: \"ru\",\r\n        },\r\n    ];\r\n    const changeLanguage = (code) => {\r\n        localStorage.setItem(\"lng\", code);\r\n        i18next.changeLanguage(code);\r\n    };\r\n\r\n    const logOut = () => {\r\n        const isConfirmed = window.confirm(\"Rostdan ham profildan chiqmoqchimisz?\");\r\n        if (isConfirmed) {\r\n            window.location.pathname = \"/\";\r\n            localStorage.removeItem(\"admin\")\r\n            localStorage.removeItem(\"token\")\r\n        }\r\n    }\r\n\r\n    return <div className=\"admin-home\">\r\n        <div className={`left-box ${adminMenu ? \"\" : \"hide-left\"}`}>\r\n\r\n            <div className={`logo ${adminMenu ? \"\" : \"hide-logo\"}`}>\r\n                <img onClick={() => navigate('/')} src=\"../images/logo2.png\" alt=\"\"/>\r\n            </div>\r\n\r\n            <div className=\"admin-navbar\">\r\n                {\r\n                    menues.map((item, index) => {\r\n                        return <NavLink to={item.url} key={index}\r\n                                        className={`nav-item ${({isActive}) => isActive ? \"active\" : \"\"}`}>\r\n                            <img src={item.img} alt=\"\"/>\r\n                            {adminMenu ? <span>{item.name}</span> : \"\"}\r\n                        </NavLink>\r\n                    })\r\n                }\r\n            </div>\r\n\r\n            <div onClick={() => setAdminMenu(!adminMenu)} className={`circle ${adminMenu ? \"\" : \"circle-rotate\"}`}>\r\n                <img src=\"../images/admin/previous.png\" alt=\"\"/>\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <div className={`right-box ${adminMenu ? \"\" : \"show-right\"}`}>\r\n            <div className=\"top-box\">\r\n                <div className=\"languge\">\r\n                    <Dropdown>\r\n                        <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                            <img className=\"globe\" src=\"./images/globe-alt.webp\" alt=\"language\" loading=\"lazy\"/>\r\n                            <div className=\"name\">\r\n                                {language.map((item, index) => {\r\n                                    return (\r\n                                        <div key={index}>\r\n                                            {i18next.language === item.code ? item.name : \"\"}\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n\r\n                            {language.map(({code, name, country_code}) => (\r\n                                <Dropdown.Item key={country_code}\r\n                                               onClick={() => changeLanguage(code)}>{name}</Dropdown.Item>\r\n                            ))}\r\n\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </div>\r\n                <div className=\"title\">\r\n                    <img src=\"./images/logo.png\" alt=\"\"/>\r\n                </div>\r\n                <div className=\"icons\">\r\n                    <div onClick={() => logOut()} className=\"exit\"><img src=\"./images/admin/logout.png\" alt=\"\"/></div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"bottom-box\">\r\n                <Routes>\r\n                    {\r\n                        adminPageRoutes.map((route, index) => (\r\n                            <Route key={index} {...route} />\r\n                        ))\r\n                    }\r\n                </Routes>\r\n            </div>\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport default Admin","import {useEffect} from \"react\";\n\nexport const useOnKeyPress = (callback,targetKey) =>{\n    useEffect(()=>{\n        const keyPressHandler = (event)=>{\n            if (event.key === targetKey){\n                callback()\n            }\n        };\n\n        window.addEventListener('keydown',keyPressHandler);\n        return () =>{\n            window.removeEventListener('keydown', keyPressHandler)\n        }\n    },[callback, targetKey]);\n};","import {useContext, useEffect, useState} from \"react\";\r\nimport \"./style.scss\";\r\nimport axios from \"axios\";\r\nimport {MyContext} from \"../App/App\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {useOnKeyPress} from \"./useOnKeyPress\";\r\n\r\nconst LoginAdmin = () => {\r\n    let value = useContext(MyContext);\r\n    const navigate = useNavigate();\r\n    const [phone, setPhone] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const HandleLogin = () => {\r\n        if (phone.trim().length > 0 && password.trim().length > 0) {\r\n            let user = {\r\n                username: phone,\r\n                password\r\n            };\r\n            axios.post(`${value.url}/dashboard/login/`, user).then((response) => {\r\n                localStorage.setItem(\"admin\", response.data.user)\r\n                localStorage.setItem(\"token\", response.data.token);\r\n                window.location.pathname = '/';\r\n                localStorage.setItem(\"lng\", \"uz\")\r\n            }).catch((error) => {\r\n                if (error.response.status === 404) alert(\"Bu foydalanuvchi topilmadi\");\r\n            });\r\n\r\n        } else alert(\"Formani to'ldiring\")\r\n\r\n    };\r\n\r\n    const Clear = () => {\r\n        setPhone(\"\");\r\n        setPassword(\"\");\r\n    };\r\n\r\n    useOnKeyPress(HandleLogin, 'Enter');\r\n    useOnKeyPress(Clear, 'Delete');\r\n\r\n    return <div className=\"login-container\">\r\n\r\n        <div className=\"login-card\">\r\n            <div className=\"logo\">\r\n                <img src=\"./images/logo.png\" alt=\"\"/>\r\n            </div>\r\n            <div className=\"input_box\">\r\n                <input value={phone} onChange={(e) => setPhone(e.target.value)} placeholder=\"Username\" type=\"text\"/>\r\n                <input value={password} onChange={(e) => setPassword(e.target.value)} placeholder=\"Password\"\r\n                       type=\"password\"/>\r\n            </div>\r\n\r\n            <div onClick={HandleLogin} onKeyUp={() => console.log(\"enter\")} className=\"btn-login\">\r\n                Kirish\r\n            </div>\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport default LoginAdmin;","import \"./adminHome.scss\";\n\n\nconst LoaderAdmin = ()=>{\n    return <div className=\"loader-admin\">\n        <div className=\"lds-spinner\">\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n        </div>\n    </div>\n};\n\nexport default LoaderAdmin","import {useEffect, useRef, useState, useContext} from \"react\";\r\nimport {CSSTransition} from \"react-transition-group\";\r\nimport {useFormik} from \"formik\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport i18next from \"i18next\";\r\nimport axios from \"axios\";\r\nimport {\r\n    TextField,\r\n    MenuItem,\r\n    InputLabel,\r\n    FormControl,\r\n    Select,\r\n    OutlinedInput,\r\n    Checkbox,\r\n    ListItemText\r\n} from \"@mui/material\";\r\nimport \"./style.scss\"\r\nimport {MyContext} from \"../../App/App\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport LoaderAdmin from \"../loader-admin/LoaderAdmin\";\r\nimport Lightbox from 'react-image-lightbox';\r\nimport 'react-image-lightbox/style.css';\r\n\r\nconst Drivers = () => {\r\n    const {t} = useTranslation();\r\n    let value = useContext(MyContext);\r\n    const [modalShow, setModalShow] = useState({show: false, status: false});\r\n    const nodeRef = useRef(null);\r\n    const ref = useRef(null);\r\n    const [getSearchText, setGetSearchText] = useState(\"\");\r\n    const [driverPhoto, setDriverPhoto] = useState(null);\r\n    const [carInformation, setCarInformation] = useState([]);\r\n    const [driversList, setDriversList] = useState([]);\r\n    const [driverId, setDriverId] = useState(\"\");\r\n    const [reason, setReason] = useState(\"\");\r\n    const [loader, setLoader] = useState(false);\r\n\r\n    const [car_serviceId, setCarServiceId] = useState([])\r\n    const [car_categoriesId, setCarCategoriesId] = useState([])\r\n\r\n    const [regions, setRegions] = useState([])\r\n\r\n    const [luggage, setLuggage] = useState(\"male\");\r\n    const [profileImage, setProfileImage] = useState(null);\r\n    const [car_images, setCar_images] = useState([]);\r\n    const [base_car_images, setBase_Car_images] = useState([]);\r\n\r\n    const [doc_images, setDocImages] = useState([]);\r\n    const [base_doc_images, setBaseDocImages] = useState([]);\r\n\r\n    const [car_make, setCar_make] = useState([]);\r\n    const [car_model, setCar_model] = useState([]);\r\n    const [car_colors, setCar_colors] = useState([]);\r\n    const [extra_services, setExtra_services] = useState([]);\r\n    const [extra_servicesList, setExtra_servicesList] = useState([]);\r\n\r\n    const [car_categories, setCar_categories] = useState([]);\r\n    const [car_service, setCar_service] = useState([]);\r\n\r\n    const ITEM_HEIGHT = 48;\r\n    const ITEM_PADDING_TOP = 8;\r\n    const MenuProps = {\r\n        PaperProps: {\r\n            style: {\r\n                maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n                width: 250,\r\n            },\r\n        },\r\n    };\r\n\r\n    const worksPage = 100;\r\n    const [pageNumber, setPageNumber] = useState(0);\r\n    const pagesVisited = pageNumber * worksPage;\r\n\r\n    const [confirmFilter, setConfirmFilter] = useState(\"\");\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [currentImage, setCurrentImage] = useState(\"\");\r\n\r\n    const validate = (values) => {\r\n        const errors = {};\r\n\r\n        if (!values.first_name) {\r\n            errors.first_name = \"Required\";\r\n        }\r\n\r\n        if (!values.last_name) {\r\n            errors.last_name = \"Required\";\r\n        }\r\n\r\n        if (!values.phone) {\r\n            errors.phone = \"Required\";\r\n        }\r\n\r\n        if (!values.car_model) {\r\n            errors.car_model = \"Required\";\r\n        }\r\n\r\n        if (!values.car_color) {\r\n            errors.car_color = \"Required\";\r\n        }\r\n\r\n        if (!values.car_make) {\r\n            errors.car_make = \"Required\";\r\n        }\r\n\r\n        if (!values.car_number) {\r\n            errors.car_number = \"Required\";\r\n        }\r\n\r\n        if (!values.extra_services) {\r\n            errors.extra_services = \"Required\";\r\n        }\r\n\r\n        if (!values.seat_count) {\r\n            errors.seat_count = \"Required\";\r\n        }\r\n\r\n        if (!values.from_region) {\r\n            errors.from_region = \"Required\";\r\n        }\r\n\r\n        if (!values.to_region) {\r\n            errors.to_region = \"Required\";\r\n        }\r\n\r\n        return errors;\r\n    };\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            phone: \"\",\r\n            first_name: \"\",\r\n            last_name: \"\",\r\n            birth_date: \"\",\r\n            car_number: \"\",\r\n            car_color: \"\",\r\n            car_make: \"\",\r\n            car_model: \"\",\r\n            extra_services: [],\r\n            seat_count: \"\",\r\n            from_region: \"\",\r\n            to_region: \"\"\r\n        },\r\n        validate,\r\n        onSubmit: (values) => {\r\n            sendAllInfo()\r\n        },\r\n    });\r\n\r\n    useEffect(() => {\r\n        getDrivers()\r\n        axios.get(`${value.url}/dashboard/carcategory/`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setCar_categories(response.data);\r\n        })\r\n\r\n        axios.get(`${value.url}/dashboard/carservice/`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setCar_service(response.data);\r\n        })\r\n\r\n        axios.get(`${value.url}/dashboard/carmake/`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setCar_make(response.data);\r\n        })\r\n\r\n        axios.get(`${value.url}/dashboard/carcolor/`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setCar_colors(response.data);\r\n        })\r\n\r\n        axios.get(`${value.url}/dashboard/extraservices/`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setExtra_servicesList(response.data);\r\n        })\r\n\r\n        axios.get(`${value.url}/dashboard/region/`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setRegions(response.data);\r\n        })\r\n\r\n    }, []);\r\n\r\n    const getDrivers = () => {\r\n        setLoader(true);\r\n        axios.get(`${value.url}/dashboard/driver/`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setDriversList(response.data);\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        }).finally(() => {\r\n            setLoader(false);\r\n        });\r\n    }\r\n\r\n    const getCarNames = (id) => {\r\n        axios.get(`${value.url}/dashboard/carmake/${id}/`, {\r\n            headers: {\r\n                \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\r\n            }\r\n        }).then((response) => {\r\n            setCar_model(response.data);\r\n        })\r\n    }\r\n\r\n    const changePage = ({selected}) => {\r\n        setPageNumber(selected)\r\n\r\n        setTimeout(() => {\r\n            ref.current?.scrollIntoView({behavior: \"smooth\"});\r\n        }, 500);\r\n    };\r\n\r\n    const getInputPhoto = (event) => {\r\n        const file = event.target.files[0];\r\n        setProfileImage(file);\r\n    };\r\n\r\n    const sendAllInfo = () => {\r\n        const formData = new FormData();\r\n        let user = {\r\n            role: \"driver\",\r\n            first_name: formik.values.first_name,\r\n            last_name: formik.values.last_name,\r\n            phone: formik.values.phone,\r\n            gender: luggage,\r\n            is_verified: true,\r\n            is_confirmed: true\r\n        }\r\n        let driver = {\r\n            car_make: formik.values.car_make,\r\n            car_model: formik.values.car_model,\r\n            car_color: formik.values.car_color,\r\n            car_number: formik.values.car_number,\r\n            seat_count: formik.values.seat_count,\r\n            birth_date: formik.values.birth_date,\r\n            extra_services: formik.values.extra_services,\r\n            from_region: formik.values.from_region,\r\n            to_region: formik.values.to_region\r\n        }\r\n\r\n        for (let key in user) {\r\n            formData.append(key, user[key]);\r\n        }\r\n\r\n        for (let key in driver) {\r\n            if (Array.isArray(driver[key])) {\r\n                driver[key].forEach(value => {\r\n                    formData.append(`driver.${key}`, value);\r\n                });\r\n            } else {\r\n                formData.append(`driver.${key}`, driver[key]);\r\n            }\r\n        }\r\n\r\n        if (profileImage) {\r\n            formData.append('profile_image', profileImage);\r\n        }\r\n\r\n        if (!driverId) {\r\n            axios.post(`${value.url}/dashboard/driver/`, formData,\r\n                {\r\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n                }).then((response) => {\r\n                setModalShow({status: \"\", show: false})\r\n                getDrivers()\r\n                formik.resetForm();\r\n            })\r\n        }\r\n\r\n        if (driverId) {\r\n            axios.patch(`${value.url}/dashboard/driver/${driverId}/`, formData,\r\n                {\r\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n                }).then((response) => {\r\n                setModalShow({status: \"\", show: false})\r\n                getDrivers()\r\n                formik.resetForm();\r\n            })\r\n        }\r\n    }\r\n\r\n    const editInfo = (id) => {\r\n\r\n        axios.get(`${value.url}/dashboard/driver/${id}/`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            formik.setValues({\r\n                phone: response.data.user.phone,\r\n                first_name: response.data.user.first_name,\r\n                last_name: response.data.user.last_name,\r\n                birth_date: response.data.birth_date,\r\n                car_number: response.data.car_number,\r\n                car_color: response.data.car_color && response.data.car_color.id,\r\n                car_make: response.data.car_make && response.data.car_make.id,\r\n                car_model: response.data.car_model && response.data.car_model.id,\r\n                extra_services: response.data.extra_services.length > 0 ? response.data.extra_services.map(service => service.id) : [],\r\n                seat_count: response.data.seat_count,\r\n                from_region: response.data.from_region && response.data.from_region.id,\r\n                to_region: response.data.to_region && response.data.to_region.id,\r\n            });\r\n\r\n            setLuggage(response.data.user.gender)\r\n            if (response.data.car_make) {\r\n                getCarNames(response.data.car_make.id)\r\n            }\r\n        })\r\n        setDriverId(id)\r\n    }\r\n\r\n    const blockDriver = (status) => {\r\n        if (status === \"block\" && reason.trim().length > 0) {\r\n            axios.post(`${value.url}/dashboard/driver/block-driver/`,\r\n                {driver_id: driverId, reason}, {\r\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n                }).then((response) => {\r\n                setModalShow({status: \"\", show: false})\r\n                getDrivers()\r\n                setReason(\"\")\r\n            })\r\n        } else alert(\"Bloklash sababini kiriting!\")\r\n\r\n        if (status === \"unblock\") {\r\n            axios.post(`${value.url}/dashboard/driver/unblock-driver/`,\r\n                {driver_id: driverId}, {\r\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n                }).then((response) => {\r\n                setModalShow({status: \"\", show: false})\r\n                getDrivers()\r\n            })\r\n        }\r\n    }\r\n\r\n    const handleCheckboxChangeService = (serviceId) => {\r\n        setCarServiceId((prevSelected) =>\r\n            prevSelected.includes(serviceId)\r\n                ? prevSelected.filter((id) => id !== serviceId)\r\n                : [...prevSelected, serviceId]\r\n        );\r\n    };\r\n\r\n    const handleCheckboxChangeCategory = (serviceId) => {\r\n        setCarCategoriesId((prevSelected) =>\r\n            prevSelected.includes(serviceId)\r\n                ? prevSelected.filter((id) => id !== serviceId)\r\n                : [...prevSelected, serviceId]\r\n        );\r\n    };\r\n\r\n    const verify = () => {\r\n        let driver = {\r\n            driver_id: driverId,\r\n            available_services: car_serviceId,\r\n            available_categories: car_categoriesId\r\n        }\r\n\r\n        axios.post(`${value.url}/dashboard/driver/confirm-driver/`,\r\n            driver, {\r\n                headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n            }).then((response) => {\r\n            getDrivers()\r\n            setModalShow({status: \"\", show: false})\r\n        })\r\n\r\n    }\r\n\r\n    const getInformation = (id) => {\r\n        setModalShow({show: true, status: \"car-information\"});\r\n\r\n        axios.get(`${value.url}/dashboard/driver/${id}/`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setCarInformation(response.data);\r\n            console.log(response.data)\r\n        })\r\n    }\r\n\r\n    const handleAddImage = (e) => {\r\n        const file = e.target.files[0];\r\n        if (file) {\r\n            const reader = new FileReader();\r\n            reader.onloadend = () => {\r\n                setCar_images((prevImages) => [\r\n                    ...prevImages,\r\n                    {\r\n                        preview: reader.result,\r\n                        file: file\r\n                    }\r\n                ]);\r\n            };\r\n            reader.readAsDataURL(file);\r\n        }\r\n        e.target.value = null;\r\n    };\r\n\r\n    const getCarImages = (id) => {\r\n        setModalShow({show: true, status: \"car-photos\"});\r\n        setDriverId(id)\r\n        axios.post(`${value.url}/dashboard/driver/car-images/`, {driver_id: id}, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setBase_Car_images(response.data)\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    const handleDeleteImageBase = (id) => {\r\n        axios.post(`${value.url}/dashboard/driver/delete-car-image/`, {driver_car_image: id}, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            getCarImages(driverId)\r\n        })\r\n    };\r\n\r\n    const handleDeleteImage = (index) => {\r\n        setCar_images((prevImages) => prevImages.filter((_, i) => i !== index));\r\n    };\r\n\r\n    const addCar_Images = () => {\r\n        const formData = new FormData();\r\n        formData.append('driver', driverId);\r\n\r\n        car_images.forEach((image, index) => {\r\n            formData.append('car_images', image.file);\r\n        });\r\n\r\n        axios.post(`${value.url}/dashboard/driver/update-image/`, formData, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setModalShow({status: \"\", show: false})\r\n            setCar_images([])\r\n        })\r\n    }\r\n\r\n    const handleAddImageDoc = (e) => {\r\n        const file = e.target.files[0];\r\n        if (file) {\r\n            const reader = new FileReader();\r\n            reader.onloadend = () => {\r\n                setDocImages((prevImages) => [\r\n                    ...prevImages,\r\n                    {\r\n                        preview: reader.result,\r\n                        file: file\r\n                    }\r\n                ]);\r\n            };\r\n            reader.readAsDataURL(file);\r\n        }\r\n        e.target.value = null;\r\n    };\r\n\r\n    const getDocsImages = (id) => {\r\n        setModalShow({show: true, status: \"car-docs\"});\r\n        setDriverId(id)\r\n        axios.post(`${value.url}/dashboard/driver/document-images/`, {driver_id: id}, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setBaseDocImages(response.data)\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    const handleDeleteImageDocsBase = (id) => {\r\n        axios.post(`${value.url}/dashboard/driver/delete-document-image/`, {driver_document_image: id}, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            getDocsImages(driverId)\r\n        })\r\n    };\r\n\r\n    const handleDeleteImageDocs = (index) => {\r\n        setDocImages((prevImages) => prevImages.filter((_, i) => i !== index));\r\n    };\r\n\r\n    const addCar_Images_Docs = () => {\r\n        const formData = new FormData();\r\n        formData.append('driver', driverId);\r\n\r\n        doc_images.forEach((image, index) => {\r\n            formData.append('document_images', image.file);\r\n        });\r\n\r\n        axios.post(`${value.url}/dashboard/driver/update-image/`, formData, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setModalShow({status: \"\", show: false})\r\n            setCar_images([])\r\n            setDocImages([])\r\n        })\r\n    }\r\n\r\n    const delDriver = (id) => {\r\n        setLoader(true)\r\n        const isConfirmed = window.confirm(\"Rostdan ham ushbu haydovchini o‘chirmoqchimisiz?\");\r\n        if (isConfirmed) {\r\n            axios.delete(`${value.url}/dashboard/driver/${id}/`, {\r\n                headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n            }).then((response) => {\r\n                getDrivers()\r\n            }).catch((error) => {\r\n                console.log(error);\r\n            }).finally(() => {\r\n                setLoader(false);\r\n            });\r\n        } else {\r\n            setLoader(false);\r\n        }\r\n    };\r\n\r\n    const filteredDrivers = driversList.filter((item) => {\r\n        const searchText = getSearchText.toString().toLowerCase().replace(/\\s+/g, '').replace(/\\+/g, '');\r\n        const phoneNumber = item.phone?.toString().toLowerCase().replace(/\\s+/g, '').replace(/\\+/g, '');\r\n\r\n        const matchesSearch = searchText === \"\" || phoneNumber.includes(searchText);\r\n        const matchesConfirm = confirmFilter === \"\"\r\n            ? true\r\n            : item.is_confirmed === (confirmFilter === \"true\");\r\n        return matchesSearch && matchesConfirm;\r\n    });\r\n\r\n    const pageCount = Math.ceil(filteredDrivers.length / worksPage);\r\n\r\n    const productList = filteredDrivers.slice(pagesVisited, pagesVisited + worksPage).map((item, index) => {\r\n        return <tr key={index}>\r\n            <td>{index + 1}</td>\r\n            <td className=\"driver-wrapper\">\r\n                <div className=\"icon-driver\">\r\n                    <img onClick={() => {\r\n                        setModalShow({show: true, status: \"driver-photo\"});\r\n                        setDriverPhoto(item.profile_image)\r\n                    }} src={item.profile_image} alt=\"\"/>\r\n                </div>\r\n                <div className=\"text-driver\">\r\n                    <div className=\"name\">\r\n                        {item.user_name && item.user_name}\r\n                    </div>\r\n                    <div className=\"phone\">\r\n                        {item.phone && item.phone}\r\n                    </div>\r\n                </div>\r\n            </td>\r\n            <td>\r\n                {item.created_at}\r\n            </td>\r\n            <td>\r\n                {item.from_region && item.from_region.translations[i18next.language].name}\r\n                --\r\n                {item.to_region && item.to_region.translations[i18next.language].name}\r\n            </td>\r\n            <td>\r\n                {item.car_color && item.car_color.translations[i18next.language].name}&nbsp;\r\n                {item.car_make && item.car_make.translations[i18next.language].name} &nbsp;\r\n                {item.car_model && item.car_model.translations[i18next.language].name}\r\n            </td>\r\n            <td>\r\n                {item.car_number && item.car_number}\r\n            </td>\r\n            <td>\r\n                <div className=\"icon\">\r\n                    <img onClick={() => getInformation(item.id)} src=\"./images/admin/sport-car.png\" alt=\"\"/>\r\n                </div>\r\n            </td>\r\n            <td>\r\n                <div className=\"icon\">\r\n                    <img onClick={() => getCarImages(item.id)} src=\"./images/admin/car-photo.png\" alt=\"\"/>\r\n                </div>\r\n            </td>\r\n            <td>\r\n                <div className=\"icon\">\r\n                    <img onClick={() => getDocsImages(item.id)} src=\"./images/admin/document.png\" alt=\"\"/>\r\n                </div>\r\n            </td>\r\n            <td>\r\n                <div className={item.is_confirmed ? \"icon-check\" : \"icon-check disablet\"}>\r\n                    <img onClick={() => {\r\n                        setModalShow({show: true, status: \"driver-service\"});\r\n                        setDriverId(item.id)\r\n                        setCarServiceId(item.available_services)\r\n                        setCarCategoriesId(item.available_categories)\r\n                    }} src=\"./images/admin/check.png\" alt=\"\"/>\r\n                </div>\r\n            </td>\r\n            <td>\r\n                <div className={item.is_block ? \"icon-check\" : \"icon-check disablet\"}>\r\n                    <img onClick={() => {\r\n                        setModalShow({show: true, status: \"blocked\"});\r\n                        if (item.is_block) {\r\n                            setReason(item.reason)\r\n                        }\r\n                        setDriverId(item.id)\r\n                    }} src=\"./images/admin/block.png\" alt=\"block\"/>\r\n\r\n                    {item.reason && item.is_block && <div className=\"reason-block\">\r\n                        <img src=\"./images/admin/warning.png\" alt=\"\"/>\r\n                        <div className=\"text\">\r\n                            {item.reason}\r\n                        </div>\r\n                    </div>}\r\n\r\n                </div>\r\n            </td>\r\n            <td>\r\n                <div className=\"icon\">\r\n                    <img onClick={() => delDriver(item.id)} src=\"./images/admin/delete.png\" alt=\"\"/>\r\n                </div>\r\n            </td>\r\n            <td>\r\n            </td>\r\n            <div className=\"edit-icon\">\r\n                <img onClick={() => {\r\n                    setModalShow({show: true, status: \"edit-driver\"});\r\n                    editInfo(item.id)\r\n                }} src=\"./images/admin/edit-tools.png\" alt=\"\"/>\r\n            </div>\r\n        </tr>\r\n    });\r\n\r\n    return <div className=\"drivers-container\">\r\n        <CSSTransition\r\n            in={modalShow.show}\r\n            nodeRef={nodeRef}\r\n            timeout={300}\r\n            classNames=\"alert\"\r\n            unmountOnExit\r\n        >\r\n            <div className=\"modal-sloy\">\r\n                <div ref={nodeRef} className=\"modal-card\">\r\n\r\n                    {modalShow.status === \"add-driver\" && (\r\n                        <div className=\"add-driver\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img\r\n                                    onClick={() => {\r\n                                        setModalShow({status: \"\", show: false})\r\n                                        formik.resetForm();\r\n                                    }}\r\n                                    src=\"./images/admin/x.png\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"title\">Haydovchi qo'shish</div>\r\n\r\n                            <div className=\"title-form\">Haydovchi ma'lumotlari:</div>\r\n\r\n                            <div className=\"form-container\">\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides-file\">\r\n                                        <input onChange={getInputPhoto} type=\"file\"/>\r\n                                        <div className={`sloy-image ${profileImage ? \"active\" : \"\"}`}>\r\n                                            Profil rasmi\r\n                                            <img src=\"./images/admin/image.png\" alt=\"\"/>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.first_name === \"Required\"}\r\n                                            value={formik.values.first_name}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"first_name\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Ism\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.last_name === \"Required\"}\r\n                                            value={formik.values.last_name}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"last_name\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Familiya\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.phone === \"Required\"}\r\n                                            value={formik.values.phone}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"phone\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Telefon raqam\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                    <div className=\"select-sides-time\">\r\n                                        <label htmlFor=\"\">Tug'ilgan sana:</label>\r\n                                        <input\r\n                                            className={`working_time ${formik.errors.birth_date === \"Required\" ? \"working_time_required\" : \"\"}`}\r\n                                            name=\"birth_date\" onChange={formik.handleChange}\r\n                                            value={formik.values.birth_date}\r\n                                            type=\"date\"/>\r\n                                    </div>\r\n                                    <div className=\"select-sides\">\r\n                                        <div className=\"title-on\">\r\n                                            Jinsi:\r\n                                        </div>\r\n                                        <div className=\"on-of\">\r\n                                            <div onClick={() => setLuggage(\"male\")}\r\n                                                 className={`of ${luggage === \"male\" ? \"on\" : \"\"}`}>\r\n                                                Erkak\r\n                                            </div>\r\n                                            <div onClick={() => setLuggage(\"female\")}\r\n                                                 className={`of ${luggage === \"female\" ? \"on\" : \"\"}`}>\r\n                                                Ayol\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"title-form\">Avtomobil ma'lumotlari:</div>\r\n\r\n                            <div className=\"form-container\">\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Avtomobil modeli</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.car_make === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.car_make}\r\n                                                name=\"car_make\"\r\n                                                label=\"Avtomobil modeli\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {\r\n                                                    car_make.map((item, index) => {\r\n                                                        return <MenuItem onClick={() => getCarNames(item.id)}\r\n                                                                         key={index}\r\n                                                                         value={item.id}>\r\n                                                            {item.translations[i18next.language].name}\r\n                                                        </MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Avtomobil nomi</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.car_model === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.car_model}\r\n                                                name=\"car_model\"\r\n                                                label=\"Avtomobil nomi\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {\r\n                                                    car_model.map((item, index) => {\r\n                                                        return <MenuItem key={index}\r\n                                                                         value={item.id}>\r\n                                                            {item.translations[i18next.language].name}\r\n                                                        </MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.car_number === \"Required\"}\r\n                                            value={formik.values.car_number}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"car_number\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Avtomobil raqami\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"select-box \">\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Avtomobil rangi</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.car_color === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                name=\"car_color\"\r\n                                                label=\"Avtomobil rangi\"\r\n                                                value={formik.values.car_color}\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {\r\n                                                    car_colors.map((item, index) => {\r\n                                                        return <MenuItem key={index}\r\n                                                                         value={item.id}>\r\n                                                            {item.translations[i18next.language].name}\r\n                                                        </MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <TextField\r\n                                                id=\"seat_count\"\r\n                                                name=\"seat_count\"\r\n                                                label=\"O‘rindiqlar soni\"\r\n                                                type=\"number\"\r\n                                                value={formik.values.seat_count}\r\n                                                onChange={formik.handleChange}\r\n                                                error={formik.touched.seat_count && Boolean(formik.errors.seat_count)}\r\n                                                helperText={formik.touched.seat_count && formik.errors.seat_count}\r\n                                                inputProps={{min: 1}}\r\n                                                fullWidth\r\n                                                size=\"small\"\r\n                                            />\r\n                                        </FormControl>\r\n                                    </div>\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, width: \"100%\"}} className=\"selectMui\" size=\"small\">\r\n                                            <InputLabel id=\"demo-multiple-checkbox-label\">Xizmatlar</InputLabel>\r\n\r\n                                            <Select\r\n                                                error={formik.errors.extra_services === \"Required\"}\r\n                                                name=\"extra_services\"\r\n                                                labelId=\"demo-multiple-checkbox-label\"\r\n                                                id=\"demo-multiple-checkbox\"\r\n                                                multiple\r\n                                                value={formik.values.extra_services}\r\n                                                onChange={(event) => {\r\n                                                    const {value} = event.target;\r\n                                                    formik.setFieldValue(\r\n                                                        \"extra_services\",\r\n                                                        typeof value === 'string' ? value.split(',') : value\r\n                                                    );\r\n                                                }}\r\n                                                input={<OutlinedInput label=\"Xizmatlar\"/>}\r\n                                                renderValue={(selected) =>\r\n                                                    selected\r\n                                                        .map((id) => {\r\n                                                            const item = extra_servicesList.find(i => i.id === id);\r\n                                                            return item ? item.translations[i18next.language].name : '';\r\n                                                        })\r\n                                                        .join(', ')\r\n                                                }\r\n                                                MenuProps={MenuProps}\r\n                                            >\r\n                                                {extra_servicesList.map((item) => (\r\n                                                    <MenuItem key={item.id} value={item.id}>\r\n                                                        <Checkbox\r\n                                                            checked={formik.values.extra_services.includes(item.id)}\r\n                                                        />\r\n                                                        <ListItemText\r\n                                                            primary={item.translations[i18next.language].name}\r\n                                                        />\r\n                                                    </MenuItem>\r\n                                                ))}\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"title-form\">Asosan qaysi yo'nalishda harakat qilasiz:</div>\r\n                            <div className=\"form-container\">\r\n                                <div className=\"select-box start\">\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Qayerdan</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.from_region === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.from_region}\r\n                                                name=\"from_region\"\r\n                                                label=\"Qayerdan\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {\r\n                                                    regions.map((item, index) => {\r\n                                                        return <MenuItem key={index}\r\n                                                                         value={item.id}>\r\n                                                            {item.translations[i18next.language].name}\r\n                                                        </MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Qayerga</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.to_region === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.to_region}\r\n                                                name=\"to_region\"\r\n                                                label=\"Qayerga\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {\r\n                                                    regions.map((item, index) => {\r\n                                                        return <MenuItem key={index}\r\n                                                                         value={item.id}>\r\n                                                            {item.translations[i18next.language].name}\r\n                                                        </MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div onClick={() => {\r\n                                formik.handleSubmit()\r\n                            }} className=\"add-btn\">\r\n                                <img src=\"./images/admin/add.png\" alt=\"\"/>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalShow.status === \"driver-photo\" && (\r\n                        <div className=\"driver-photo\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img\r\n                                    onClick={() => setModalShow({status: \"\", show: false})}\r\n                                    src=\"./images/admin/x.png\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"photo\">\r\n                                <img src={driverPhoto} alt=\"\"/>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalShow.status === \"car-information\" && (\r\n                        <div className=\"car-information\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img onClick={() => setModalShow({status: \"\", show: false})}\r\n                                     src=\"./images/admin/x.png\"\r\n                                     alt=\"\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"title\">\r\n                                Avtomobil ma'lumotlari\r\n                            </div>\r\n                            {carInformation &&\r\n                                <div className=\"information\">\r\n                                    <div className=\"info\">\r\n                                        <div className=\"title\">Tugilgan sanasi:</div>\r\n                                        <div\r\n                                            className=\"text\">{carInformation.birth_date && carInformation.birth_date}</div>\r\n                                    </div>\r\n                                    <div className=\"info\">\r\n                                        <div className=\"title\">Jinsi:</div>\r\n                                        <div\r\n                                            className=\"text\">\r\n                                            {carInformation.user && carInformation.user.gender === \"male\" && \"Erkak\"}\r\n                                            {carInformation.user && carInformation.user.gender === \"female\" && \"Ayol\"}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"info\">\r\n                                        <div className=\"title\">Reyting:</div>\r\n                                        <div\r\n                                            className=\"text\">{carInformation.user && carInformation.user.rate}</div>\r\n                                    </div>\r\n                                    <div className=\"info\">\r\n                                        <div className=\"title\">O'rindiqlar soni:</div>\r\n                                        <div\r\n                                            className=\"text\">{carInformation.seat_count && carInformation.seat_count}</div>\r\n                                    </div>\r\n                                    <div className=\"info\">\r\n                                        <div className=\"title\">Yakunlagan buyurtmalar:</div>\r\n                                        <div\r\n                                            className=\"text\">{carInformation.user && carInformation.user.finished_orders_count}</div>\r\n                                    </div>\r\n                                    <div className=\"info\">\r\n                                        <div className=\"title\">Qo'shimcha xizmatlar:</div>\r\n                                        <div className=\"text\">\r\n                                            {carInformation.extra_services && carInformation.extra_services.map((item, index) => {\r\n                                                return <span key={index}>\r\n                                                    {item.translations[i18next.language].name},\r\n                                                </span>\r\n                                            })}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>}\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalShow.status === \"blocked\" && (\r\n                        <div className=\"blocked\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img onClick={() => {\r\n                                    setModalShow({status: \"\", show: false})\r\n                                    setReason(\"\")\r\n                                }}\r\n                                     src=\"./images/admin/x.png\"\r\n                                     alt=\"\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"title\">\r\n                                Haydovchini bloklash\r\n                            </div>\r\n\r\n                            <div className=\"reason-text\">\r\n                                <textarea value={reason} onChange={(e) => setReason(e.target.value)}\r\n                                          placeholder=\"Blok qilish sababini kiriting...\" name=\"reason\"\r\n                                          id=\"reason\"></textarea>\r\n\r\n                                <div className=\"buttons\">\r\n                                    <div onClick={() => {\r\n                                        blockDriver(\"unblock\")\r\n                                    }}\r\n                                         className=\"cancel\">Bekor qilish\r\n                                    </div>\r\n\r\n                                    <div onClick={() => {\r\n                                        blockDriver(\"block\")\r\n                                    }} className=\"success\">Bloklash\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalShow.status === \"edit-driver\" && (\r\n                        <div className=\"edit-driver\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img\r\n                                    onClick={() => {\r\n                                        setModalShow({status: \"\", show: false})\r\n                                        formik.resetForm();\r\n                                    }}\r\n                                    src=\"./images/admin/x.png\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"title\">Haydovchi malumotlarini tahrirlash</div>\r\n\r\n                            <div className=\"title-form\">Haydovchi ma'lumotlari:</div>\r\n\r\n                            <div className=\"form-container\">\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides-file\">\r\n                                        <input onChange={getInputPhoto} type=\"file\"/>\r\n                                        <div className={`sloy-image ${profileImage ? \"active\" : \"\"}`}>\r\n                                            Profil rasmi\r\n                                            <img src=\"./images/admin/image.png\" alt=\"\"/>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.first_name === \"Required\"}\r\n                                            value={formik.values.first_name}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"first_name\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Ism\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.last_name === \"Required\"}\r\n                                            value={formik.values.last_name}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"last_name\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Familiya\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.phone === \"Required\"}\r\n                                            value={formik.values.phone}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"phone\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Telefon raqam\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                    <div className=\"select-sides-time\">\r\n                                        <label htmlFor=\"\">Tug'ilgan sana:</label>\r\n                                        <input\r\n                                            className={`working_time ${formik.errors.birth_date === \"Required\" ? \"working_time_required\" : \"\"}`}\r\n                                            name=\"birth_date\" onChange={formik.handleChange}\r\n                                            value={formik.values.birth_date}\r\n                                            type=\"date\"/>\r\n                                    </div>\r\n                                    <div className=\"select-sides\">\r\n                                        <div className=\"title-on\">\r\n                                            Jinsi:\r\n                                        </div>\r\n                                        <div className=\"on-of\">\r\n                                            <div onClick={() => setLuggage(\"male\")}\r\n                                                 className={`of ${luggage === \"male\" ? \"on\" : \"\"}`}>\r\n                                                Erkak\r\n                                            </div>\r\n                                            <div onClick={() => setLuggage(\"female\")}\r\n                                                 className={`of ${luggage === \"female\" ? \"on\" : \"\"}`}>\r\n                                                Ayol\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"title-form\">Avtomobil ma'lumotlari:</div>\r\n\r\n                            <div className=\"form-container\">\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Avtomobil modeli</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.car_make === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.car_make}\r\n                                                name=\"car_make\"\r\n                                                label=\"Avtomobil modeli\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {\r\n                                                    car_make.map((item, index) => {\r\n                                                        return <MenuItem onClick={() => getCarNames(item.id)}\r\n                                                                         key={index}\r\n                                                                         value={item.id}>\r\n                                                            {item.translations[i18next.language].name}\r\n                                                        </MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Avtomobil nomi</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.car_model === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.car_model}\r\n                                                name=\"car_model\"\r\n                                                label=\"Avtomobil nomi\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {\r\n                                                    car_model.map((item, index) => {\r\n                                                        return <MenuItem key={index}\r\n                                                                         value={item.id}>\r\n                                                            {item.translations[i18next.language].name}\r\n                                                        </MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.car_number === \"Required\"}\r\n                                            value={formik.values.car_number}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"car_number\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Avtomobil raqami\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"select-box \">\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Avtomobil rangi</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.car_color === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                name=\"car_color\"\r\n                                                label=\"Avtomobil rangi\"\r\n                                                value={formik.values.car_color}\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {\r\n                                                    car_colors.map((item, index) => {\r\n                                                        return <MenuItem key={index}\r\n                                                                         value={item.id}>\r\n                                                            {item.translations[i18next.language].name}\r\n                                                        </MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <TextField\r\n                                                id=\"seat_count\"\r\n                                                name=\"seat_count\"\r\n                                                label=\"O‘rindiqlar soni\"\r\n                                                type=\"number\"\r\n                                                value={formik.values.seat_count}\r\n                                                onChange={formik.handleChange}\r\n                                                error={formik.touched.seat_count && Boolean(formik.errors.seat_count)}\r\n                                                helperText={formik.touched.seat_count && formik.errors.seat_count}\r\n                                                inputProps={{min: 1}}\r\n                                                fullWidth\r\n                                                size=\"small\"\r\n                                            />\r\n                                        </FormControl>\r\n                                    </div>\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, width: \"100%\"}} className=\"selectMui\" size=\"small\">\r\n                                            <InputLabel id=\"demo-multiple-checkbox-label\">Xizmatlar</InputLabel>\r\n\r\n                                            <Select\r\n                                                error={formik.errors.extra_services === \"Required\"}\r\n                                                name=\"extra_services\"\r\n                                                labelId=\"demo-multiple-checkbox-label\"\r\n                                                id=\"demo-multiple-checkbox\"\r\n                                                multiple\r\n                                                value={formik.values.extra_services}\r\n                                                onChange={(event) => {\r\n                                                    const {value} = event.target;\r\n                                                    formik.setFieldValue(\r\n                                                        \"extra_services\",\r\n                                                        typeof value === 'string' ? value.split(',') : value\r\n                                                    );\r\n                                                }}\r\n                                                input={<OutlinedInput label=\"Xizmatlar\"/>}\r\n                                                renderValue={(selected) =>\r\n                                                    selected\r\n                                                        .map((id) => {\r\n                                                            const item = extra_servicesList.find(i => i.id === id);\r\n                                                            return item ? item.translations[i18next.language].name : '';\r\n                                                        })\r\n                                                        .join(', ')\r\n                                                }\r\n                                                MenuProps={MenuProps}\r\n                                            >\r\n                                                {extra_servicesList.map((item) => (\r\n                                                    <MenuItem key={item.id} value={item.id}>\r\n                                                        <Checkbox\r\n                                                            checked={formik.values.extra_services.includes(item.id)}\r\n                                                        />\r\n                                                        <ListItemText\r\n                                                            primary={item.translations[i18next.language].name}\r\n                                                        />\r\n                                                    </MenuItem>\r\n                                                ))}\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"title-form\">Asosan qaysi yo'nalishda harakat qilasiz:</div>\r\n                            <div className=\"form-container\">\r\n                                <div className=\"select-box start\">\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Qayerdan</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.from_region === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.from_region}\r\n                                                name=\"from_region\"\r\n                                                label=\"Qayerdan\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {\r\n                                                    regions.map((item, index) => {\r\n                                                        return <MenuItem key={index}\r\n                                                                         value={item.id}>\r\n                                                            {item.translations[i18next.language].name}\r\n                                                        </MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Qayerga</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.to_region === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.to_region}\r\n                                                name=\"to_region\"\r\n                                                label=\"Qayerga\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {\r\n                                                    regions.map((item, index) => {\r\n                                                        return <MenuItem key={index}\r\n                                                                         value={item.id}>\r\n                                                            {item.translations[i18next.language].name}\r\n                                                        </MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div onClick={() => {\r\n                                formik.handleSubmit()\r\n                            }} className=\"add-btn\">\r\n                                <img src=\"./images/admin/checkmark.png\" alt=\"\"/>\r\n                            </div>\r\n\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalShow.status === \"driver-service\" && (\r\n                        <div className=\"driver-service\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img onClick={() => setModalShow({status: \"\", show: false})}\r\n                                     src=\"./images/admin/x.png\"\r\n                                     alt=\"\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"bottom-side\">\r\n                                <div className=\"left-side\">\r\n                                    <div className=\"title\">\r\n                                        Yo'nalish\r\n                                    </div>\r\n                                    <div className=\"form-wrapper\">\r\n                                        {\r\n                                            car_service.map((category, index) => (\r\n                                                <label key={index}>\r\n                                                    <input onChange={() => handleCheckboxChangeService(category.id)}\r\n                                                           checked={car_serviceId.includes(category.id)} type=\"checkbox\"\r\n                                                           name=\"agree\"/>\r\n                                                    {category.translations[i18next.language].name}\r\n                                                </label>\r\n                                            ))\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"right-side\">\r\n                                    <div className=\"title\">\r\n                                        Tariflar\r\n                                    </div>\r\n                                    <div className=\"form-wrapper\">\r\n                                        {\r\n                                            car_categories.map((category, index) => (\r\n                                                <label key={index}>\r\n                                                    <input onChange={() => handleCheckboxChangeCategory(category.id)}\r\n                                                           checked={car_categoriesId.includes(category.id)}\r\n                                                           type=\"checkbox\"\r\n                                                           name=\"agree\"/>\r\n                                                    {category.translations[i18next.language].name}\r\n                                                </label>\r\n                                            ))\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div onClick={verify} className=\"btn-success\">\r\n                                Tasdiqlash\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalShow.status === \"car-photos\" && (\r\n                        <div className=\"car-photos\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img onClick={() => setModalShow({status: \"\", show: false})}\r\n                                     src=\"./images/admin/x.png\"\r\n                                     alt=\"\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"title\">\r\n                                Avtomobil rasmlari\r\n                            </div>\r\n                            <div className=\"form-wrapper\">\r\n                                {base_car_images.map((image, index) => (\r\n                                    <div key={index} className=\"photo\">\r\n                                        <img onClick={() => {\r\n                                            setCurrentImage(image.image);\r\n                                            setTimeout(() => setIsOpen(true), 100);\r\n                                        }} src={image.image} alt={`car-${index}`}/>\r\n                                        <div className=\"del-icon\" onClick={() => handleDeleteImageBase(image.id)}>\r\n                                            <img src=\"./images/admin/delete.png\" alt=\"delete\"/>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                                {car_images.map((image, index) => (\r\n                                    <div key={index} className=\"photo\">\r\n                                        <img onClick={() => {\r\n                                            setCurrentImage(image.preview);\r\n                                            setTimeout(() => setIsOpen(true), 100);\r\n                                        }} src={image.preview} alt={`car-${index}`}/>\r\n                                        <div className=\"del-icon\" onClick={() => handleDeleteImage(index)}>\r\n                                            <img src=\"./images/admin/delete.png\" alt=\"delete\"/>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                                <div className=\"add-icon\">\r\n                                    <input onChange={handleAddImage} type=\"file\"/>\r\n                                    <img src=\"./images/admin/image.png\" alt=\"\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div onClick={addCar_Images} className=\"btn-success\">\r\n                                Tasdiqlash\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalShow.status === \"car-docs\" && (\r\n                        <div className=\"car-docs\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img onClick={() => setModalShow({status: \"\", show: false})}\r\n                                     src=\"./images/admin/x.png\"\r\n                                     alt=\"\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"title\">\r\n                                Xujjatlar rasmlari\r\n                            </div>\r\n                            <div className=\"form-wrapper\">\r\n                                {base_doc_images.map((image, index) => (\r\n                                    <div key={index} className=\"photo\">\r\n                                        <img onClick={() => {\r\n                                            setCurrentImage(image.image);\r\n                                            setTimeout(() => setIsOpen(true), 100);\r\n                                        }} src={image.image} alt={`car-${index}`}/>\r\n                                        <div className=\"del-icon\" onClick={() => handleDeleteImageDocsBase(image.id)}>\r\n                                            <img src=\"./images/admin/delete.png\" alt=\"delete\"/>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                                {doc_images.map((image, index) => (\r\n                                    <div key={index} className=\"photo\">\r\n                                        <img onClick={() => {\r\n                                            setCurrentImage(image.preview);\r\n                                            setTimeout(() => setIsOpen(true), 100);\r\n                                        }} src={image.preview} alt={`car-${index}`}/>\r\n                                        <div className=\"del-icon\" onClick={() => handleDeleteImageDocs(index)}>\r\n                                            <img src=\"./images/admin/delete.png\" alt=\"delete\"/>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n\r\n                                <div className=\"add-icon\">\r\n                                    <input onChange={handleAddImageDoc} type=\"file\"/>\r\n                                    <img src=\"./images/admin/image.png\" alt=\"\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div onClick={addCar_Images_Docs} className=\"btn-success\">\r\n                                Tasdiqlash\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </CSSTransition>\r\n\r\n        {isOpen && (\r\n            <Lightbox\r\n                mainSrc={currentImage}\r\n                onCloseRequest={() => setIsOpen(false)}\r\n            />\r\n        )}\r\n\r\n        <div className=\"header\">\r\n            <div className=\"left-side\">\r\n                <div className=\"search-box\">\r\n                    <img src=\"./images/admin/search.png\" alt=\"\"/>\r\n                    <input onChange={(e) => setGetSearchText(e.target.value)} placeholder=\"Telefon raqam kiriting\"\r\n                           type=\"text\"/>\r\n                </div>\r\n\r\n                <div className=\"select-sides\">\r\n                    <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                        <InputLabel id=\"confirm-filter-label\">Holat</InputLabel>\r\n                        <Select\r\n                            labelId=\"confirm-filter-label\"\r\n                            id=\"confirm-filter\"\r\n                            value={confirmFilter}\r\n                            label=\"Holat\"\r\n                            onChange={(e) => setConfirmFilter(e.target.value)}\r\n                        >\r\n                            <MenuItem value=\"\">Barchasi</MenuItem>\r\n                            <MenuItem value=\"true\">Tasdiqlangan</MenuItem>\r\n                            <MenuItem value=\"false\">Tasdiqlanmagan</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                </div>\r\n            </div>\r\n\r\n            <div onClick={() => {\r\n                setModalShow({show: true, status: \"add-driver\"});\r\n            }} className=\"add-driver-btn\">\r\n                Haydovchi qo'shish\r\n            </div>\r\n        </div>\r\n\r\n        {loader ? <LoaderAdmin/> : <div className=\"table-wrapper\">\r\n            <table>\r\n                <thead>\r\n                <tr>\r\n                    <th>№</th>\r\n                    <th>Haydovchi haqida</th>\r\n                    <th>Ro'yxatdan o'tgan sanasi</th>\r\n                    <th>Yo'nalish</th>\r\n                    <th>Mashina</th>\r\n                    <th>Mashina raqami</th>\r\n                    <th>Moshina ma'lumotlari</th>\r\n                    <th>Moshina rasmlari</th>\r\n                    <th>Dokument rasmlari</th>\r\n                    <th>Tasdiqlash</th>\r\n                    <th>Bloklash</th>\r\n                    <th>O'chirish</th>\r\n                    <th></th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {productList}\r\n                </tbody>\r\n            </table>\r\n        </div>}\r\n\r\n        <div className=\"pagination\">\r\n            {driversList.length > 100 ? <ReactPaginate\r\n                breakLabel=\"...\"\r\n                previousLabel={<img src=\"./images/admin/prev.png\" alt=\"\"/>}\r\n                nextLabel={<img src=\"./images/admin/next.png\" alt=\"\"/>}\r\n                pageCount={pageCount}\r\n                onPageChange={changePage}\r\n                containerClassName={\"paginationBttns\"}\r\n                previousLinkClassName={\"previousBttn\"}\r\n                nextLinkClassName={\"nextBttn\"}\r\n                disabledCalassName={\"paginationDisabled\"}\r\n                activeClassName={\"paginationActive\"}\r\n            /> : \"\"}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Drivers","import \"./style.scss\"\nimport {useContext, useEffect, useRef, useState} from \"react\";\nimport axios from \"axios\";\nimport {MyContext} from \"../../App/App\";\n\nconst ChatDriver = () => {\n    let value = useContext(MyContext);\n    const bodyRef = useRef(null);\n    const [chats, setChats] = useState([]);\n    const [message, setMessage] = useState();\n    const [activeCHat, setActiveChat] = useState(null);\n    const [messageText, setMessageText] = useState(\"\");\n    const [getSearchText, setGetSearchText] = useState(\"\");\n    useEffect(() => {\n        if (bodyRef.current) {\n            bodyRef.current.scrollTop = bodyRef.current.scrollHeight;\n        }\n        axios.get(`${value.url}/dashboard/admin-chat/`, {\n            headers: {\n                Authorization: `Token ${localStorage.getItem(\"token\")}`,\n            },\n        }).then((response) => {\n            setChats(response.data);\n        })\n    });\n\n    const getMessage = (chat) => {\n        setActiveChat(chat)\n        axios.get(`${value.url}/dashboard/admin-chat/${chat.id}/`, {\n            headers: {\n                Authorization: `Token ${localStorage.getItem(\"token\")}`,\n            },\n        }).then((response) => {\n            setMessage(response.data);\n        })\n    }\n\n    const sendMessage = () => {\n        let data = {room: activeCHat.id, message: messageText}\n        axios.post(`${value.url}/dashboard/admin-message/`, data, {\n            headers: {\n                Authorization: `Token ${localStorage.getItem(\"token\")}`,\n            },\n        }).then((response) => {\n            setMessageText(\"\")\n            axios.get(`${value.url}/dashboard/admin-chat/${activeCHat.id}/`, {\n                headers: {\n                    Authorization: `Token ${localStorage.getItem(\"token\")}`,\n                },\n            }).then((response) => {\n                setMessage(response.data);\n            })\n        })\n    }\n\n    const delChat = (id) => {\n        axios.delete(`${value.url}/dashboard/admin-chat/${id}/`, {\n            headers: {\n                Authorization: `Token ${localStorage.getItem(\"token\")}`,\n            },\n        }).then((response) => {\n            setActiveChat(null);\n            axios.get(`${value.url}/dashboard/admin-chat/`, {\n                headers: {\n                    Authorization: `Token ${localStorage.getItem(\"token\")}`,\n                },\n            }).then((response) => {\n                setChats(response.data);\n            })\n        })\n    }\n\n    const verify = (id) => {\n        axios.post(`${value.url}/dashboard/admin-chat/close/`,\n            {chat_id: id}, {\n                headers: {\n                    Authorization: `Token ${localStorage.getItem(\"token\")}`,\n                },\n            }).then((response) => {\n            axios.get(`${value.url}/dashboard/admin-chat/`, {\n                headers: {\n                    Authorization: `Token ${localStorage.getItem(\"token\")}`,\n                },\n            }).then((response) => {\n                setChats(response.data);\n            })\n        })\n    }\n\n    return <div className=\"chat-driver\">\n        <div className=\"left\">\n            <div className=\"header\">\n                <div className=\"search-box\">\n                    <img src=\"./images/admin/search.png\" alt=\"\"/>\n                    <input value={getSearchText} onChange={(e) => setGetSearchText(e.target.value)}\n                           placeholder=\"Telefon raqam kiriting\" type=\"text\"/>\n                </div>\n            </div>\n            <div className=\"drivers-box\">\n                {chats\n                    .filter((item) => {\n                        const searchText = getSearchText.toString().toLowerCase().replace(/\\s+/g, '').replace(/\\+/g, '');\n                        const phoneNumber = item.user_phone.toString().toLowerCase().replace(/\\s+/g, '').replace(/\\+/g, '');\n                        return searchText === \"\" || phoneNumber.includes(searchText);\n                    }).map((chat, index) => {\n                        return <div key={index}\n                                    className={`driver ${activeCHat && activeCHat.id === chat.id ? \"active\" : \"\"}`}>\n                            <div className=\"photo\">\n                                <img src=\"./images/admin/user2.png\" alt=\"\"/>\n                            </div>\n                            <div onClick={() => getMessage(chat)} className=\"left-content\">\n                                <div className=\"name\">{chat.title}</div>\n                                <div className=\"number\">{chat.user_phone}</div>\n                            </div>\n                            <div className=\"buttons\">\n\n                                <img onClick={() => verify(chat.id)} className={chat.closed ? \"closed\" : \"disabled\"}\n                                     src=\"./images/admin/check.png\"\n                                     alt=\"check\"/>\n\n                                <img onClick={() => delChat(chat.id)} src=\"./images/admin/delete.png\" alt=\"delete\"/>\n                            </div>\n                        </div>\n                    })}\n            </div>\n        </div>\n\n        {activeCHat && <div className=\"right\">\n            <div className=\"top\">\n                <div className=\"photo\">\n                    <img src=\"./images/admin/user2.png\" alt=\"\"/>\n                </div>\n                <div className=\"left-content\">\n                    <div className=\"name\">{activeCHat && activeCHat.title}</div>\n                    <div className=\"number\">{activeCHat && activeCHat.user_phone}</div>\n                </div>\n            </div>\n            <div ref={bodyRef} className=\"body\">\n                <div className=\"scroll\">\n                    {message && message.map((message, index) => (\n                        <div key={index}\n                             className={message.author && message.author.is_admin ? \"message-my\" : \"message-driver\"}>\n                            <div className=\"message\">\n                                {message.author && <div className=\"name\">\n                                    {message.author.first_name} &ensp;\n                                    {message.author.last_name}\n                                </div>}\n                                {message.message}\n                                <div className=\"time\">\n                                    {message.time}\n                                </div>\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            </div>\n            <div className=\"bottom\">\n                <input value={messageText} onChange={(e) => setMessageText(e.target.value)} placeholder=\"Xabar...\"\n                       type=\"text\"/>\n                <div onClick={sendMessage} className=\"icon-send\">\n                    <img src=\"./images/admin/message.png\" alt=\"\"/>\n                </div>\n            </div>\n        </div>}\n\n    </div>\n}\n\nexport default ChatDriver;","import {useEffect, useRef, useState, useContext} from \"react\";\r\nimport {CSSTransition} from \"react-transition-group\";\r\nimport {useFormik} from \"formik\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport axios from \"axios\";\r\nimport {TextField} from \"@mui/material\";\r\nimport \"./style.scss\"\r\nimport {MyContext} from \"../../App/App\";\r\nimport LoaderAdmin from \"../loader-admin/LoaderAdmin\";\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nconst Clients = () => {\r\n    const {t} = useTranslation();\r\n    let value = useContext(MyContext);\r\n    const [modalShow, setModalShow] = useState({show: false, status: false});\r\n    const nodeRef = useRef(null);\r\n    const ref = useRef(null);\r\n    const [luggage, setLuggage] = useState(\"male\");\r\n    const [getSearchText, setGetSearchText] = useState(\"\");\r\n    const [driverPhoto, setDriverPhoto] = useState(null);\r\n    const [driversList, setDriversList] = useState([]);\r\n    const [driverId, setDriverId] = useState(\"\");\r\n    const [reason, setReason] = useState(\"\");\r\n    const [profileImage, setProfileImage] = useState(null);\r\n    const [loader, setLoader] = useState(false);\r\n\r\n    const worksPage = 100;\r\n    const [pageNumber, setPageNumber] = useState(0);\r\n    const pagesVisited = pageNumber * worksPage;\r\n    const pageCount = Math.ceil(driversList.length / worksPage);\r\n\r\n    const validate = (values) => {\r\n        const errors = {};\r\n\r\n        if (!values.first_name) {\r\n            errors.first_name = \"Required\";\r\n        }\r\n\r\n        if (!values.last_name) {\r\n            errors.last_name = \"Required\";\r\n        }\r\n\r\n        if (!values.phone) {\r\n            errors.phone = \"Required\";\r\n        }\r\n        return errors;\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            first_name: \"\",\r\n            last_name: \"\",\r\n            phone: \"\",\r\n        },\r\n        validate,\r\n        onSubmit: (values) => {\r\n            sendAllInfo()\r\n        },\r\n    });\r\n\r\n    useEffect(() => {\r\n        getDrivers()\r\n    }, []);\r\n\r\n    const getDrivers = () => {\r\n        setLoader(true);\r\n        axios.get(`${value.url}/dashboard/client/`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setDriversList(response.data);\r\n        }).finally(() => {\r\n            setLoader(false);\r\n        });\r\n    }\r\n\r\n    const changePage = ({selected}) => {\r\n        setPageNumber(selected)\r\n\r\n        setTimeout(() => {\r\n            ref.current?.scrollIntoView({behavior: \"smooth\"});\r\n        }, 500);\r\n    };\r\n\r\n    const getInputPhoto = (event) => {\r\n        const file = event.target.files[0];\r\n        setProfileImage(file);\r\n    };\r\n\r\n    const sendAllInfo = () => {\r\n        const formData = new FormData();\r\n        let user = {\r\n            role: \"client\",\r\n            first_name: formik.values.first_name,\r\n            last_name: formik.values.last_name,\r\n            phone: formik.values.phone,\r\n            gender: luggage,\r\n        }\r\n        for (let key in user) {\r\n            formData.append(key, user[key]);\r\n        }\r\n        if (profileImage) {\r\n            formData.append('profile_image', profileImage);\r\n        }\r\n\r\n        if (!driverId) {\r\n            axios.post(`${value.url}/dashboard/client/`, formData,\r\n                {\r\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n                }).then((response) => {\r\n                setModalShow({status: \"\", show: false})\r\n                getDrivers()\r\n                formik.resetForm();\r\n            })\r\n        }\r\n\r\n        if (driverId) {\r\n            axios.patch(`${value.url}/dashboard/client/${driverId}/`, formData,\r\n                {\r\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n                }).then((response) => {\r\n                setModalShow({status: \"\", show: false})\r\n                getDrivers()\r\n                formik.resetForm();\r\n            })\r\n        }\r\n    }\r\n\r\n    const editInfo = (driver) => {\r\n        formik.setValues({\r\n            first_name: driver.first_name,\r\n            last_name: driver.last_name,\r\n            phone: driver.phone,\r\n        });\r\n        setLuggage(driver.gender)\r\n        setDriverId(driver.id)\r\n    }\r\n\r\n    const blockDriver = (status) => {\r\n        if (status === \"block\" && reason.trim().length > 0) {\r\n            axios.post(`${value.url}/dashboard/client/block-client/`,\r\n                {client_id: driverId, reason}, {\r\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n                }).then((response) => {\r\n                setModalShow({status: \"\", show: false})\r\n                getDrivers()\r\n                setReason(\"\")\r\n            })\r\n        } else alert(\"Bloklash sababini kiriting!\")\r\n\r\n        if (status === \"unblock\") {\r\n            axios.post(`${value.url}/dashboard/client/unblock-client/`,\r\n                {client_id: driverId}, {\r\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n                }).then((response) => {\r\n                setModalShow({status: \"\", show: false})\r\n                getDrivers()\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    const productList = driversList.slice(pagesVisited, pagesVisited + worksPage)\r\n        .filter((item) => {\r\n            const searchText = getSearchText.toString().toLowerCase().replace(/\\s+/g, '').replace(/\\+/g, '');\r\n            const phoneNumber = item.phone.toString().toLowerCase().replace(/\\s+/g, '').replace(/\\+/g, '');\r\n            return searchText === \"\" || phoneNumber.includes(searchText);\r\n        }).map((item, index) => {\r\n            return <tr key={index}>\r\n                <td>{index + 1}</td>\r\n                <td className=\"driver-wrapper\">\r\n                    <div className=\"icon-driver\">\r\n                        <img onClick={() => {\r\n                            setModalShow({show: true, status: \"driver-photo\"});\r\n                            setDriverPhoto(item.profile_image)\r\n                        }} src={item.profile_image} alt=\"\"/>\r\n                    </div>\r\n                    <div className=\"text-driver\">\r\n                        <div className=\"name\">\r\n                            {item.first_name} &nbsp;\r\n                            {item.last_name}\r\n                        </div>\r\n                    </div>\r\n                </td>\r\n                <td>\r\n                    {item.phone}\r\n                </td>\r\n                <td>\r\n                    {item.gender}\r\n                </td>\r\n                <td>\r\n                    <div className={item.is_block ? \"icon-check\" : \"icon-check disablet\"}>\r\n                        <img onClick={() => {\r\n                            setModalShow({show: true, status: \"blocked\"});\r\n                            if (item.is_block) {\r\n                                setReason(item.reason)\r\n                            }\r\n                            setDriverId(item.id)\r\n                        }} src=\"./images/admin/block.png\" alt=\"block\"/>\r\n\r\n                        {item.reason && item.is_block && <div className=\"reason-block\">\r\n                            <img src=\"./images/admin/warning.png\" alt=\"\"/>\r\n                            <div className=\"text\">\r\n                                {item.reason}\r\n                            </div>\r\n                        </div>}\r\n\r\n                    </div>\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <div className=\"edit-icon\">\r\n                    <img onClick={() => {\r\n                        setModalShow({show: true, status: \"edit-driver\"});\r\n                        editInfo(item)\r\n                    }} src=\"./images/admin/edit-tools.png\" alt=\"\"/>\r\n                </div>\r\n            </tr>\r\n        });\r\n\r\n    return <div className=\"clients-container\">\r\n        <CSSTransition\r\n            in={modalShow.show}\r\n            nodeRef={nodeRef}\r\n            timeout={300}\r\n            classNames=\"alert\"\r\n            unmountOnExit\r\n        >\r\n            <div className=\"modal-sloy\">\r\n                <div ref={nodeRef} className=\"modal-card\">\r\n\r\n                    {modalShow.status === \"add-driver\" && (\r\n                        <div className=\"add-driver\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img\r\n                                    onClick={() => {\r\n                                        setModalShow({status: \"\", show: false})\r\n                                        formik.resetForm();\r\n                                    }}\r\n                                    src=\"./images/admin/x.png\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"title\">Mijoz qo'shish</div>\r\n                            <div className=\"title-form\">Mijoz ma'lumotlari:</div>\r\n                            <div className=\"form-container\">\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides-file\">\r\n                                        <input onChange={getInputPhoto} type=\"file\"/>\r\n                                        <div className={`sloy-image ${profileImage ? \"active\" : \"\"}`}>\r\n                                            Profil rasmi\r\n                                            <img src=\"./images/admin/image.png\" alt=\"\"/>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.phone === \"Required\"}\r\n                                            value={formik.values.phone}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"phone\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Telefon raqam\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.first_name === \"Required\"}\r\n                                            value={formik.values.first_name}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"first_name\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Ism\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.last_name === \"Required\"}\r\n                                            value={formik.values.last_name}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"last_name\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Familiya\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <div className=\"title-on\">\r\n                                            Jinsi:\r\n                                        </div>\r\n                                        <div className=\"on-of\">\r\n                                            <div onClick={() => setLuggage(\"male\")}\r\n                                                 className={`of ${luggage === \"male\" ? \"on\" : \"\"}`}>\r\n                                                Erkak\r\n                                            </div>\r\n                                            <div onClick={() => setLuggage(\"female\")}\r\n                                                 className={`of ${luggage === \"female\" ? \"on\" : \"\"}`}>\r\n                                                Ayol\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div onClick={() => {\r\n                                formik.handleSubmit()\r\n                            }} className=\"add-btn\">\r\n                                Qo'shish\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalShow.status === \"driver-photo\" && (\r\n                        <div className=\"driver-photo\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img\r\n                                    onClick={() => setModalShow({status: \"\", show: false})}\r\n                                    src=\"./images/admin/x.png\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"photo\">\r\n                                <img src={driverPhoto} alt=\"\"/>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalShow.status === \"blocked\" && (\r\n                        <div className=\"blocked\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img onClick={() => {\r\n                                    setModalShow({status: \"\", show: false})\r\n                                    setReason(\"\")\r\n                                }}\r\n                                     src=\"./images/admin/x.png\"\r\n                                     alt=\"\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"title\">\r\n                                Haydovchini bloklash\r\n                            </div>\r\n\r\n                            <div className=\"reason-text\">\r\n                                <textarea value={reason} onChange={(e) => setReason(e.target.value)}\r\n                                          placeholder=\"Blok qilish sababini kiriting...\" name=\"reason\"\r\n                                          id=\"reason\"></textarea>\r\n\r\n                                <div className=\"buttons\">\r\n                                    <div onClick={() => {\r\n                                        blockDriver(\"unblock\")\r\n                                    }}\r\n                                         className=\"cancel\">Bekor qilish\r\n                                    </div>\r\n\r\n                                    <div onClick={() => {\r\n                                        blockDriver(\"block\")\r\n                                    }} className=\"success\">Bloklash\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalShow.status === \"edit-driver\" && (\r\n                        <div className=\"edit-driver\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img\r\n                                    onClick={() => {\r\n                                        setModalShow({status: \"\", show: false})\r\n                                        formik.resetForm();\r\n                                    }}\r\n                                    src=\"./images/admin/x.png\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"title\">Mijoz ma'lumotlarini tahrirlash</div>\r\n\r\n                            <div className=\"title-form\">Mijoz ma'lumotlari:</div>\r\n\r\n                            <div className=\"form-container\">\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides-file\">\r\n                                        <input onChange={getInputPhoto} type=\"file\"/>\r\n                                        <div className={`sloy-image ${profileImage ? \"active\" : \"\"}`}>\r\n                                            Profil rasmi\r\n                                            <img src=\"./images/admin/image.png\" alt=\"\"/>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.phone === \"Required\"}\r\n                                            value={formik.values.phone}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"phone\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Telefon raqam\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.first_name === \"Required\"}\r\n                                            value={formik.values.first_name}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"first_name\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Ism\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.last_name === \"Required\"}\r\n                                            value={formik.values.last_name}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"last_name\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Familiya\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <div className=\"title-on\">\r\n                                            Jinsi:\r\n                                        </div>\r\n                                        <div className=\"on-of\">\r\n                                            <div onClick={() => setLuggage(\"male\")}\r\n                                                 className={`of ${luggage === \"male\" ? \"on\" : \"\"}`}>\r\n                                                Erkak\r\n                                            </div>\r\n                                            <div onClick={() => setLuggage(\"female\")}\r\n                                                 className={`of ${luggage === \"female\" ? \"on\" : \"\"}`}>\r\n                                                Ayol\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div onClick={() => {\r\n                                formik.handleSubmit()\r\n                            }} className=\"add-btn\">\r\n                                Saqlash\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </CSSTransition>\r\n\r\n        <div className=\"header\">\r\n            <div className=\"search-box\">\r\n                <img src=\"./images/admin/find-person.png\" alt=\"\"/>\r\n                <input onChange={(e) => setGetSearchText(e.target.value)} placeholder=\"Telefon raqam kiriting\"\r\n                       type=\"text\"/>\r\n            </div>\r\n\r\n            <div onClick={() => {\r\n                setModalShow({show: true, status: \"add-driver\"});\r\n            }} className=\"add-driver-btn\">\r\n                Mijoz qo'shish\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <div className=\"table-wrapper\">\r\n            {loader ? <LoaderAdmin/> : <table>\r\n                <thead>\r\n                <tr>\r\n                    <th>№</th>\r\n                    <th>Mijoz haqida</th>\r\n                    <th>Telefon raqam</th>\r\n                    <th>Jinsi</th>\r\n                    <th>Bloklash</th>\r\n                    <th></th>\r\n                </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                {productList}\r\n                </tbody>\r\n            </table>}\r\n        </div>\r\n\r\n        <div className=\"pagination\">\r\n            {driversList.length > 100 ? <ReactPaginate\r\n                breakLabel=\"...\"\r\n                previousLabel={<img src=\"./images/admin/prev.png\" alt=\"\"/>}\r\n                nextLabel={<img src=\"./images/admin/next.png\" alt=\"\"/>}\r\n                pageCount={pageCount}\r\n                onPageChange={changePage}\r\n                containerClassName={\"paginationBttns\"}\r\n                previousLinkClassName={\"previousBttn\"}\r\n                nextLinkClassName={\"nextBttn\"}\r\n                disabledCalassName={\"paginationDisabled\"}\r\n                activeClassName={\"paginationActive\"}\r\n            /> : \"\"}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Clients","import \"./style.scss\"\nimport {useContext, useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {MyContext} from \"../../App/App\";\nimport i18next from \"i18next\";\nimport {useTranslation} from \"react-i18next\";\n\nconst Colors = () => {\n    const {t} = useTranslation();\n    let value = useContext(MyContext);\n    const [translations, setTranslations] = useState(\n        {\n            name_uz: \"\",\n            name_ru: \"\",\n            name_en: \"\"\n        })\n    const [colorsList, setColorsList] = useState([])\n    const [edit, setEdit] = useState(false)\n    const [editId, setEditId] = useState('')\n\n    const getData = () => {\n        axios.get(`${value.url}/dashboard/carcolor/`,{\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n        }).then((response) => {\n            setColorsList(response.data);\n        })\n    }\n\n    useEffect(() => {\n        getData()\n    }, []);\n\n    const addColor = (status) => {\n        const {name_uz, name_ru, name_en} = translations;\n\n        const isAnyNameFilled = name_uz.trim() && name_ru.trim() && name_en.trim();\n\n        if (!isAnyNameFilled) {\n            alert(\"Iltimos, rang nomini kiriting\");\n            return;\n        }\n\n        const translation_list = {\n            uz: {\n                name: name_uz.trim()\n            },\n            ru: {\n                name: name_ru.trim()\n            },\n            en: {\n                name: name_en.trim()\n            }\n        };\n\n        if (status === \"add\") {\n            axios.post(`${value.url}/dashboard/carcolor/`, {translations: translation_list},\n                {\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n                })\n                .then((response) => {\n                    setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n                    getData();\n                })\n                .catch((error) => {\n                    console.error(\"Rang qo'shishda xatolik:\", error);\n                });\n        }\n\n        if (status === \"edit\") {\n            axios.put(`${value.url}/dashboard/carcolor/${editId}/`, {translations: translation_list},\n                {\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n                })\n                .then((response) => {\n                    setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n                    getData();\n                    setEdit(false);\n                })\n                .catch((error) => {\n                    console.error(\"Rangni tahrirlashda xatolik:\", error);\n                });\n        }\n    };\n\n    const delColor = (id) => {\n        axios.delete(`${value.url}/dashboard/carcolor/${id}/`,{\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n        }).then((response) => {\n            setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n            getData()\n            setEdit(false)\n        })\n    }\n\n    const handleEdit = (color) => {\n        setEdit(true);\n        setEditId(color.id);\n        setTranslations({\n            name_uz: color.translations[\"uz\"].name || \"\",\n            name_ru: color.translations[\"ru\"].name || \"\",\n            name_en: color.translations[\"en\"].name || \"\"\n        });\n    };\n\n    return <div className=\"colors-wrapper\">\n        <div className=\"header\">\n            <div className=\"form-wrapper\">\n                <input\n                    value={translations.name_uz}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_uz: e.target.value})\n                    }\n                    placeholder=\"Rangi nomi (uz)...\"\n                    type=\"text\"\n                />\n                <input\n                    value={translations.name_en}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_en: e.target.value})\n                    }\n                    placeholder=\"Color name (en)...\"\n                    type=\"text\"\n                />\n\n                <input\n                    value={translations.name_ru}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_ru: e.target.value})\n                    }\n                    placeholder=\"Название цвета (ru)...\"\n                    type=\"text\"\n                />\n\n\n                {edit ? <div onClick={() => addColor(\"edit\")} className=\"add-color\">\n                    <img src=\"./images/admin/checkmark.png\" alt=\"\"/>\n                </div> : <div onClick={() => addColor(\"add\")} className=\"add-color\">\n                    <img src=\"./images/admin/add.png\" alt=\"\"/>\n                </div>}\n\n            </div>\n        </div>\n        <div className=\"colors-cards\">\n            <div className=\"wrapper-box\">\n                {\n                    colorsList.map((color, index) => (\n                        <div key={index} className=\"color-card\">\n                            <div className=\"name\">{color.translations[i18next.language].name}</div>\n                            <div className=\"bttons\">\n                                <div onClick={() => handleEdit(color)} className=\"btn\">\n                                    <img src=\"./images/admin/edit-tools.png\" alt=\"\"/>\n                                </div>\n\n                                <div onClick={() => delColor(color.id)} className=\"btn\">\n                                    <img src=\"./images/admin/delete.png\" alt=\"\"/>\n                                </div>\n                            </div>\n                        </div>\n                    ))\n                }\n            </div>\n        </div>\n    </div>\n}\n\nexport default Colors;","import \"./style.scss\"\nimport {useContext, useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {MyContext} from \"../../App/App\";\nimport i18next from \"i18next\";\nimport {useTranslation} from \"react-i18next\";\n\nconst CarBrand = () => {\n    const {t} = useTranslation();\n    let value = useContext(MyContext);\n    const [colorsList, setColorsList] = useState([])\n    const [edit, setEdit] = useState(false)\n    const [editId, setEditId] = useState('')\n    const [translations, setTranslations] = useState(\n        {\n            name_uz: \"\",\n            name_ru: \"\",\n            name_en: \"\"\n        })\n\n    const getData = () => {\n        axios.get(`${value.url}/dashboard/carmake/`, {\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n        }).then((response) => {\n            setColorsList(response.data);\n        })\n    }\n\n    useEffect(() => {\n        getData()\n    }, []);\n\n    const addColor = (status) => {\n        const {name_uz, name_ru, name_en} = translations;\n\n        const isAnyNameFilled = name_uz.trim() && name_ru.trim() && name_en.trim();\n\n        if (!isAnyNameFilled) {\n            alert(\"Iltimos, brend nomini kiriting\");\n            return;\n        }\n\n        const translation_list = {\n            uz: {\n                name: name_uz.trim()\n            },\n            ru: {\n                name: name_ru.trim()\n            },\n            en: {\n                name: name_en.trim()\n            }\n        };\n\n        if (status === \"add\") {\n            axios.post(`${value.url}/dashboard/carmake/`, {translations: translation_list},\n                {\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n                })\n                .then((response) => {\n                    setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n                    getData();\n                })\n                .catch((error) => {\n                    console.error(\"Brend qo'shishda xatolik:\", error);\n                });\n        }\n\n        if (status === \"edit\") {\n            axios.put(`${value.url}dashboard/carmake/${editId}/`, {translations: translation_list},\n                {\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n                })\n                .then((response) => {\n                    setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n                    getData();\n                    setEdit(false);\n                })\n                .catch((error) => {\n                    console.error(\"Brendni tahrirlashda xatolik:\", error);\n                });\n        }\n    };\n\n    const delColor = (id) => {\n        axios.delete(`${value.url}/dashboard/carmake/${id}/`, {\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n        }).then((response) => {\n            setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n            getData()\n            setEdit(false)\n        })\n    }\n\n    const handleEdit = (color) => {\n        setEdit(true);\n        setEditId(color.id);\n        setTranslations({\n            name_uz: color.translations[\"uz\"].name || \"\",\n            name_ru: color.translations[\"ru\"].name || \"\",\n            name_en: color.translations[\"en\"].name || \"\"\n        });\n    };\n\n    return <div className=\"car-brand-wrapper\">\n        <div className=\"header\">\n            <div className=\"form-wrapper\">\n                <input\n                    value={translations.name_uz}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_uz: e.target.value})\n                    }\n                    placeholder=\"Brend nomi (uz)...\"\n                    type=\"text\"\n                />\n                <input\n                    value={translations.name_en}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_en: e.target.value})\n                    }\n                    placeholder=\"Brand name (en)...\"\n                    type=\"text\"\n                />\n\n                <input\n                    value={translations.name_ru}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_ru: e.target.value})\n                    }\n                    placeholder=\"Название бренда (ru)...\"\n                    type=\"text\"\n                />\n\n\n                {edit ? <div onClick={() => addColor(\"edit\")} className=\"add-color\">\n                    <img src=\"./images/admin/checkmark.png\" alt=\"\"/>\n                </div> : <div onClick={() => addColor(\"add\")} className=\"add-color\">\n                    <img src=\"./images/admin/add.png\" alt=\"\"/>\n                </div>}\n\n            </div>\n        </div>\n        <div className=\"colors-cards\">\n            <div className=\"wrapper-box\">\n                {\n                    colorsList.map((color, index) => (\n                        <div key={index} className=\"color-card\">\n                            <div className=\"name\">{color.translations[i18next.language].name}</div>\n                            <div className=\"bttons\">\n                                <div onClick={() => handleEdit(color)} className=\"btn\">\n                                    <img src=\"./images/admin/edit-tools.png\" alt=\"\"/>\n                                </div>\n\n                                <div onClick={() => delColor(color.id)} className=\"btn\">\n                                    <img src=\"./images/admin/delete.png\" alt=\"\"/>\n                                </div>\n                            </div>\n                        </div>\n                    ))\n                }\n            </div>\n        </div>\n    </div>\n}\n\nexport default CarBrand;","import {useCallback, useEffect, useRef, useState, useMemo, useContext} from \"react\";\r\nimport {CSSTransition} from \"react-transition-group\";\r\nimport {useFormik} from \"formik\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport {\r\n    TextField,\r\n    MenuItem,\r\n    InputLabel,\r\n    FormControl,\r\n    Select\r\n} from \"@mui/material\";\r\nimport \"./style.scss\"\r\nimport axios from \"axios\";\r\nimport {MyContext} from \"../../App/App\";\r\n\r\nconst Service = () => {\r\n    let value = useContext(MyContext);\r\n    const [modalShow, setModalShow] = useState({show: false, status: false});\r\n    const nodeRef = useRef(null);\r\n    const [serviceList, setServiceList] = useState([]);\r\n    const [editId, setEditId] = useState(\"\");\r\n    const ref = useRef(null);\r\n    const [driversList, setDriversList] = useState([{}]);\r\n    const worksPage = 100;\r\n    const [pageNumber, setPageNumber] = useState(0);\r\n    const pagesVisited = pageNumber * worksPage;\r\n\r\n    const pageCount = Math.ceil(driversList.length / worksPage);\r\n\r\n    const changePage = ({selected}) => {\r\n        setPageNumber(selected)\r\n\r\n        setTimeout(() => {\r\n            ref.current?.scrollIntoView({behavior: \"smooth\"});\r\n        }, 500);\r\n    };\r\n\r\n    const validate = (values) => {\r\n        const errors = {};\r\n\r\n        if (!values.service) {\r\n            errors.service = \"Required\";\r\n        }\r\n\r\n        if (!values.includedCars) {\r\n            errors.includedCars = \"Required\";\r\n        }\r\n\r\n        if (!values.start_price) {\r\n            errors.start_price = \"Required\";\r\n        }\r\n\r\n        if (!values.price_per_km) {\r\n            errors.price_per_km = \"Required\";\r\n        }\r\n\r\n        if (!values.price_per_min) {\r\n            errors.price_per_min = \"Required\";\r\n        }\r\n\r\n        if (!values.wait_price_per_min) {\r\n            errors.wait_price_per_min = \"Required\";\r\n        }\r\n\r\n        if (!values.free_wait_time) {\r\n            errors.free_wait_time = \"Required\";\r\n        }\r\n\r\n        return errors;\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            service: \"\",\r\n            start_price: \"\",\r\n            price_per_km: \"\",\r\n            price_per_min: \"\",\r\n            wait_price_per_min: \"\",\r\n            free_wait_time: \"\",\r\n            includedCars: \"\"\r\n        },\r\n        validate,\r\n        onSubmit: (values) => {\r\n            sendAllInfo()\r\n        },\r\n    });\r\n\r\n    const sendAllInfo = () => {\r\n        let allInfo = {\r\n            service: formik.values.service,\r\n            includedCars: formik.values.includedCars,\r\n            start_price: formik.values.start_price,\r\n            price_per_km: formik.values.price_per_km,\r\n            price_per_min: formik.values.price_per_min,\r\n            wait_price_per_min: formik.values.wait_price_per_min,\r\n            free_wait_time: formik.values.free_wait_time\r\n        }\r\n\r\n        if (!editId) {\r\n            axios.post(`${value.url}/dashboard/service/`, allInfo, {\r\n                headers: {\r\n                    Authorization: `Token ${localStorage.getItem(\"token\")}`,\r\n                },\r\n            }).then((response) => {\r\n                getDrivers()\r\n                setModalShow({status: \"\", show: false})\r\n                formik.resetForm();\r\n            })\r\n        }\r\n\r\n        if (editId) {\r\n            axios.put(`${value.url}/dashboard/service/${editId}/`, allInfo,\r\n                {\r\n                    headers: {\r\n                        Authorization: `Token ${localStorage.getItem(\"token\")}`,\r\n                    },\r\n                }).then((response) => {\r\n                getDrivers()\r\n                formik.resetForm();\r\n                setModalShow({status: \"\", show: false})\r\n            })\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getDrivers()\r\n    }, []);\r\n\r\n    const delColor = (id) => {\r\n        axios.delete(`${value.url}/dashboard/service/${id}/`, {\r\n            headers: {\r\n                Authorization: `Token ${localStorage.getItem(\"token\")}`,\r\n            },\r\n        }).then((response) => {\r\n            getDrivers()\r\n        })\r\n    }\r\n\r\n    const getDrivers = () => {\r\n        axios.get(`${value.url}/dashboard/service/`, {\r\n            headers: {\r\n                Authorization: `Token ${localStorage.getItem(\"token\")}`,\r\n            },\r\n        }).then((response) => {\r\n            setServiceList(response.data);\r\n        })\r\n    }\r\n\r\n    const editValues = (service) => {\r\n        setEditId(service.id)\r\n        setModalShow({show: true, status: \"edit-driver\"});\r\n        formik.setValues({\r\n            service: service.service,\r\n            start_price: service.start_price,\r\n            price_per_km: service.price_per_km,\r\n            price_per_min: service.price_per_min,\r\n            wait_price_per_min: service.wait_price_per_min,\r\n            free_wait_time: service.free_wait_time,\r\n            includedCars: service.includedCars,\r\n        });\r\n    }\r\n\r\n    const productList = serviceList.slice(pagesVisited, pagesVisited + worksPage).map((item, index) => {\r\n        return <tr key={index}>\r\n            <td>{index + 1}</td>\r\n            <td>\r\n                {item.service}\r\n            </td>\r\n            <td>\r\n                {item.includedCars}\r\n            </td>\r\n            <td>{item.start_price}</td>\r\n            <td>{item.price_per_km}</td>\r\n            <td>{item.price_per_min}</td>\r\n            <td>{item.wait_price_per_min}</td>\r\n            <td>{item.free_wait_time}</td>\r\n            <td>\r\n                <div className=\"icon\">\r\n                    <img onClick={() => delColor(item.id)} src=\"./images/admin/delete.png\" alt=\"\"/>\r\n                </div>\r\n            </td>\r\n            <td>\r\n            </td>\r\n            <div className=\"edit-icon\">\r\n                <img onClick={() => editValues(item)} src=\"./images/admin/edit-tools.png\" alt=\"\"/>\r\n            </div>\r\n        </tr>\r\n    });\r\n\r\n    return <div className=\"service-container\">\r\n        <CSSTransition\r\n            in={modalShow.show}\r\n            nodeRef={nodeRef}\r\n            timeout={300}\r\n            classNames=\"alert\"\r\n            unmountOnExit\r\n        >\r\n            <div className=\"modal-sloy\">\r\n                <div ref={nodeRef} className=\"modal-card\">\r\n\r\n                    {modalShow.status === \"add-driver\" && (\r\n                        <div className=\"add-driver\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img\r\n                                    onClick={() => setModalShow({status: \"\", show: false})}\r\n                                    src=\"./images/admin/x.png\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"title\">Tarif qo'shish</div>\r\n\r\n                            <div className=\"title-form\">Tarif ma'lumotlari:</div>\r\n\r\n                            <div className=\"form-container\">\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Tarif nomi</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.service === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.service}\r\n                                                label=\"Tarif nomi\"\r\n                                                name=\"service\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                <MenuItem value=\"standart\">Standart</MenuItem>\r\n                                                <MenuItem value=\"bussiness\">Bussiness</MenuItem>\r\n                                                <MenuItem value=\"comfort\">Comfort</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.includedCars === \"Required\"}\r\n                                            value={formik.values.includedCars}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"includedCars\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Tarifga kiruvchi mashinalar\" variant=\"outlined\"\r\n                                            className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.start_price === \"Required\"}\r\n                                            value={formik.values.start_price}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"start_price\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Boshlash narxi\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.price_per_km === \"Required\"}\r\n                                            value={formik.values.price_per_km}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"price_per_km\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Narx (km)\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.price_per_min === \"Required\"}\r\n                                            value={formik.values.price_per_min}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"price_per_min\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Narx (min)\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.wait_price_per_min === \"Required\"}\r\n                                            value={formik.values.wait_price_per_min}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"wait_price_per_min\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Kutish uchun narx (min)\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.free_wait_time === \"Required\"}\r\n                                            value={formik.values.free_wait_time}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"free_wait_time\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Tekin kutish vaqti\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div onClick={sendAllInfo} className=\"add-btn\">\r\n                                    Tarif qo'shish\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalShow.status === \"edit-driver\" && (\r\n                        <div className=\"edit-driver\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img\r\n                                    onClick={() => setModalShow({status: \"\", show: false})}\r\n                                    src=\"./images/admin/x.png\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"title\">Tarifni tahrirlash</div>\r\n\r\n                            <div className=\"title-form\">Tarif ma'lumotlari:</div>\r\n\r\n                            <div className=\"form-container\">\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Tarif nomi</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.service === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.service}\r\n                                                label=\"Tarif nomi\"\r\n                                                name=\"service\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                <MenuItem value=\"standart\">Standart</MenuItem>\r\n                                                <MenuItem value=\"bussiness\">Bussiness</MenuItem>\r\n                                                <MenuItem value=\"comfort\">Comfort</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.includedCars === \"Required\"}\r\n                                            value={formik.values.includedCars}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"includedCars\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Tarifga kiruvchi mashinalar\" variant=\"outlined\"\r\n                                            className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.start_price === \"Required\"}\r\n                                            value={formik.values.start_price}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"start_price\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Boshlash narxi\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.price_per_km === \"Required\"}\r\n                                            value={formik.values.price_per_km}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"price_per_km\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Narx (km)\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.price_per_min === \"Required\"}\r\n                                            value={formik.values.price_per_min}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"price_per_min\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Narx (min)\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.wait_price_per_min === \"Required\"}\r\n                                            value={formik.values.wait_price_per_min}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"wait_price_per_min\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Kutish uchun narx (min)\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.free_wait_time === \"Required\"}\r\n                                            value={formik.values.free_wait_time}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"free_wait_time\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Tekin kutish vaqti\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div onClick={sendAllInfo} className=\"add-btn\">\r\n                                    Tasdiqlash\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </CSSTransition>\r\n\r\n        <div className=\"header\">\r\n            <div onClick={() => {\r\n                setModalShow({show: true, status: \"add-driver\"});\r\n            }} className=\"add-driver-btn\">\r\n                Tarif qo'shish\r\n            </div>\r\n        </div>\r\n\r\n        <table>\r\n            <thead>\r\n            <tr>\r\n                <th>№</th>\r\n                <th>Nomi</th>\r\n                <th>Moshinalar</th>\r\n                <th>Boshlash narxi</th>\r\n                <th>Narx km</th>\r\n                <th>Narx min</th>\r\n                <th>Kutish narxi min</th>\r\n                <th>Tekin kutish vaqti</th>\r\n                <th>O'chirish</th>\r\n                <th></th>\r\n            </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n            {productList}\r\n            </tbody>\r\n        </table>\r\n\r\n        <div className=\"pagination\">\r\n            {driversList.length > 100 ? <ReactPaginate\r\n                breakLabel=\"...\"\r\n                previousLabel={<img src=\"./images/admin/prev.png\" alt=\"\"/>}\r\n                nextLabel={<img src=\"./images/admin/next.png\" alt=\"\"/>}\r\n                pageCount={pageCount}\r\n                onPageChange={changePage}\r\n                containerClassName={\"paginationBttns\"}\r\n                previousLinkClassName={\"previousBttn\"}\r\n                nextLinkClassName={\"nextBttn\"}\r\n                disabledCalassName={\"paginationDisabled\"}\r\n                activeClassName={\"paginationActive\"}\r\n            /> : \"\"}\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default Service","import {useCallback, useEffect, useRef, useState, useMemo, useContext} from \"react\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport \"./style.scss\"\r\nimport axios from \"axios\";\r\nimport {MyContext} from \"../../App/App\";\r\n\r\nconst Balance = () => {\r\n    const [getSearchText, setGetSearchText] = useState(\"\");\r\n    let value = useContext(MyContext);\r\n    const ref = useRef(null);\r\n    const [driversList, setDriversList] = useState([]);\r\n    const worksPage = 100;\r\n    const [pageNumber, setPageNumber] = useState(0);\r\n    const pagesVisited = pageNumber * worksPage;\r\n\r\n    useEffect(() => {\r\n        axios.get(`${value.url}/dashboard/balance/`, {\r\n            headers: {\r\n                Authorization: `Token ${localStorage.getItem(\"token\")}`,\r\n            },\r\n        }).then((response) => {\r\n            setDriversList(response.data);\r\n            console.log(response.data);\r\n        })\r\n    }, []);\r\n\r\n    const productList = driversList.slice(pagesVisited, pagesVisited + worksPage)\r\n        .filter((item) => {\r\n            const searchText = getSearchText.toString().toLowerCase().replace(/\\s+/g, '').replace(/\\+/g, '');\r\n            const phoneNumber = item.driver_phone.toString().toLowerCase().replace(/\\s+/g, '').replace(/\\+/g, '');\r\n            return searchText === \"\" || phoneNumber.includes(searchText);\r\n        }).map((item, index) => {\r\n            return <tr key={index}>\r\n                <td>{index + 1}</td>\r\n                <td className=\"driver-wrapper\">\r\n                    <div className=\"text-driver\">\r\n                        <div\r\n                            className=\"name\">{item.driver_name}</div>\r\n                        <div className=\"phone\">\r\n                            {item.driver_phone}\r\n                        </div>\r\n                    </div>\r\n                </td>\r\n                <td>\r\n                    {item.id_number}\r\n                </td>\r\n                <td>\r\n                    {item.fund}\r\n                </td>\r\n            </tr>\r\n        });\r\n\r\n    const pageCount = Math.ceil(driversList.length / worksPage);\r\n\r\n    const changePage = ({selected}) => {\r\n        setPageNumber(selected)\r\n\r\n        setTimeout(() => {\r\n            ref.current?.scrollIntoView({behavior: \"smooth\"});\r\n        }, 500);\r\n    };\r\n\r\n    return <div className=\"balance-container\">\r\n        <div className=\"header\">\r\n            <div className=\"search-box\">\r\n                <img src=\"./images/admin/search.png\" alt=\"\"/>\r\n                <input onChange={(e) => setGetSearchText(e.target.value)} placeholder=\"Telefon raqam kiriting\"\r\n                       type=\"text\"/>\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"table-wrapper\">\r\n            <table>\r\n                <thead>\r\n                <tr>\r\n                    <th>№</th>\r\n                    <th>Haydovchi</th>\r\n                    <th>Id raqam</th>\r\n                    <th>Narx</th>\r\n                </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                {productList}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n\r\n\r\n        <div className=\"pagination\">\r\n            {driversList.length > 100 ? <ReactPaginate\r\n                breakLabel=\"...\"\r\n                previousLabel={<img src=\"./images/admin/prev.png\" alt=\"\"/>}\r\n                nextLabel={<img src=\"./images/admin/next.png\" alt=\"\"/>}\r\n                pageCount={pageCount}\r\n                onPageChange={changePage}\r\n                containerClassName={\"paginationBttns\"}\r\n                previousLinkClassName={\"previousBttn\"}\r\n                nextLinkClassName={\"nextBttn\"}\r\n                disabledCalassName={\"paginationDisabled\"}\r\n                activeClassName={\"paginationActive\"}\r\n            /> : \"\"}\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default Balance","import {useEffect, useRef, useState, useContext} from \"react\";\r\nimport \"./style.scss\"\r\nimport {CSSTransition} from \"react-transition-group\";\r\nimport axios from \"axios\";\r\nimport {MyContext} from \"../../App/App\";\r\nimport i18next from \"i18next\";\r\nimport LoaderAdmin from \"../loader-admin/LoaderAdmin\";\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nconst Orders = () => {\r\n    const {t} = useTranslation();\r\n    let value = useContext(MyContext);\r\n    const [modalShow, setModalShow] = useState({show: false, status: false});\r\n    const nodeRef = useRef(null);\r\n    const [loader, setLoader] = useState(false);\r\n\r\n    const [links, setLinks] = useState({});\r\n    const [Pages, setPages] = useState([]);\r\n    const [activeItem, setActiveItem] = useState(1);\r\n    const [orderStatus, setOrderStatus] = useState();\r\n    const [orderId, setOrderId] = useState(\"\");\r\n    const [reasonList, setReasonList] = useState([]);\r\n    const [reason, setReason] = useState(\"\");\r\n    const [driversList, setDriversList] = useState([]);\r\n    const [statistics, setStatistics] = useState([]);\r\n    const [information, setInformation] = useState([]);\r\n\r\n    const [client, setClient] = useState(\"\");\r\n    const [driver, setDriver] = useState(\"\");\r\n    const [status, setStatus] = useState(\"\");\r\n    const [direction, setDirection] = useState(\"\");\r\n    const [tarif, setTarif] = useState(\"\");\r\n    const [date, setDate] = useState(\"\");\r\n\r\n\r\n    const visiblePages = [];\r\n    const totalPages = Pages.length;\r\n\r\n    if (totalPages <= 7) {\r\n        visiblePages.push(...Pages.map((_, index) => index + 1));\r\n    } else {\r\n        visiblePages.push(1);\r\n\r\n        if (activeItem > 3) {\r\n            visiblePages.push(\"...\");\r\n        }\r\n\r\n        for (let i = Math.max(2, activeItem - 1); i <= Math.min(totalPages - 1, activeItem + 1); i++) {\r\n            visiblePages.push(i);\r\n        }\r\n\r\n        if (activeItem < totalPages - 2) {\r\n            visiblePages.push(\"...\");\r\n        }\r\n\r\n        visiblePages.push(totalPages);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getList();\r\n\r\n        axios.get(`${value.url}/dashboard/rejectreson/?admin=true`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setReasonList(response.data);\r\n        })\r\n\r\n        axios.get(`${value.url}/dashboard/order-stats/`, {\r\n            headers: {\r\n                \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\r\n            }\r\n        }).then((response) => {\r\n            setStatistics(response.data);\r\n        })\r\n\r\n    }, []);\r\n\r\n    const getList = (url = null, page = 1) => {\r\n        setLoader(true);\r\n        const main = url ? url : `${value.url}/dashboard/order/?page=${page}`;\r\n        axios.get(main, {\r\n            headers: {\r\n                \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\r\n            }\r\n        }).then((response) => {\r\n            setDriversList(response.data.results);\r\n            setLinks(response.data.links);\r\n            setPages(response.data.links.pages);\r\n            setActiveItem(page);\r\n        }).finally(() => {\r\n            setLoader(false);\r\n        });\r\n\r\n    };\r\n\r\n    const changeStatus = () => {\r\n        axios.post(`${value.url}/dashboard/order/reject-order/`, {\r\n                order_id: orderId,\r\n                reason_id: reason,\r\n                status: orderStatus\r\n            },\r\n            {\r\n                headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n            })\r\n            .then((response) => {\r\n                getList()\r\n                setModalShow({status: \"\", show: false})\r\n            })\r\n    }\r\n\r\n    const filterData = () => {\r\n        setLoader(true);\r\n        let page = 1\r\n        axios.get(`${value.url}/dashboard/order/?client_phone=${client}&driver_phone=${driver}&service_type=${direction}&category_type=${tarif}&created_date=${date}&status=${status}`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setDriversList(response.data.results);\r\n            setLinks(response.data.links);\r\n            setPages(response.data.links.pages);\r\n            setActiveItem(page);\r\n        }).finally(() => {\r\n            setLoader(false);\r\n        });\r\n    }\r\n\r\n    return <div className=\"orders-container\">\r\n        <CSSTransition\r\n            in={modalShow.show}\r\n            nodeRef={nodeRef}\r\n            timeout={300}\r\n            classNames=\"alert\"\r\n            unmountOnExit\r\n        >\r\n            <div className=\"modal-sloy\">\r\n                <div ref={nodeRef} className=\"modal-card\">\r\n\r\n                    {modalShow.status === \"car-information\" && (\r\n                        <div className=\"car-information\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img\r\n                                    onClick={() => setModalShow({status: \"\", show: false})}\r\n                                    src=\"./images/admin/x.png\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"title\">\r\n                                Qo'shimcha malumotlar\r\n                            </div>\r\n                            {console.log(information)}\r\n                            <div className=\"information\">\r\n                                <div className=\"info\">\r\n                                    <div className=\"title\">Buyurtma raqami:</div>\r\n                                    <div\r\n                                        className=\"text\">{information.id}</div>\r\n                                </div>\r\n                                <div className=\"info\">\r\n                                    <div className=\"title\">Yo'nalish:</div>\r\n                                    <div\r\n                                        className=\"text\">{information.car_service.translations[i18next.language].name}</div>\r\n                                </div>\r\n                                <div className=\"info\">\r\n                                    <div className=\"title\">Masofa:</div>\r\n                                    <div\r\n                                        className=\"text\">{information.distance}</div>\r\n                                </div>\r\n                                {\r\n                                    information.end_date && <div className=\"info\">\r\n                                        <div className=\"title\">Tugatilgan sana:</div>\r\n                                        <div className=\"text\">{information.end_date}</div>\r\n                                    </div>\r\n                                }\r\n                                <div className=\"info\">\r\n                                    <div className=\"title\">Olib ketish manzili:</div>\r\n\r\n                                    <div\r\n                                        className=\"text\">{information.drop_off_locations && information.drop_off_locations.map((item, index) => {\r\n                                        return <div key={index}> {index + 1}- manzil : {item.address} <br/></div>\r\n\r\n                                    })}</div>\r\n                                </div>\r\n                                <div className=\"info\">\r\n                                    <div className=\"title\">Yekazish manzili:</div>\r\n\r\n                                    <div\r\n                                        className=\"text\">{information.pick_up_locations && information.pick_up_locations.map((item, index) => {\r\n                                        return <div key={index}>{index + 1}- manzil : {item.address} <br/></div>\r\n\r\n                                    })}</div>\r\n                                </div>\r\n                                {\r\n                                    information.extra_services.length > 0 &&\r\n                                    <div className=\"info\">\r\n                                        <div className=\"title\">Qo'shimcha xizmatlar:</div>\r\n\r\n                                        <div\r\n                                            className=\"text\">{information.extra_services && information.extra_services.map((item, index) => {\r\n                                            return <div key={index}>{item.translations[i18next.language].name}</div>\r\n\r\n                                        })}</div>\r\n                                    </div>\r\n                                }\r\n\r\n                                <div className=\"info\">\r\n                                    <div className=\"title\">Yo'lovchilar soni:</div>\r\n                                    <div\r\n                                        className=\"text\">{information.passanger_count}</div>\r\n                                </div>\r\n\r\n                                <div className=\"info\">\r\n                                    <div className=\"title\">To'lov turi:</div>\r\n                                    <div className=\"text\">\r\n                                        {information.payment_type === \"cash\" && \"Naqt\"}\r\n                                        {information.payment_type === \"card\" && \"Karta\"}\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div className=\"info\">\r\n                                    <div className=\"title\">Olib ketish sanasi:</div>\r\n                                    <div className=\"text\">\r\n                                        {information.pick_up_date}\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                {information.car_service.service_type === \"postal\" && <div className=\"info\">\r\n                                    <div className=\"title\">To'lovni kim qiladi:</div>\r\n                                    <div\r\n                                        className=\"text\">\r\n                                        {information.payer === \"sender\" && \"Yuboruvchi\"}\r\n                                        {information.payer === \"receiver\" && \"Qabul qilovchi\"}\r\n                                    </div>\r\n                                </div>}\r\n\r\n                                {information.car_service.service_type === \"postal\" && <div className=\"info\">\r\n                                    <div className=\"title\">Qabul qlivchi telefon raqami:</div>\r\n                                    <div\r\n                                        className=\"text\">\r\n                                        {information.receiver_phone}\r\n                                    </div>\r\n                                </div>}\r\n\r\n                                {information.car_service.service_type === \"postal\" && <div className=\"info\">\r\n                                    <div className=\"title\">Yuboruvchi telefon raqami:</div>\r\n                                    <div\r\n                                        className=\"text\">\r\n                                        {information.sender_phone}\r\n                                    </div>\r\n                                </div>}\r\n\r\n                                {information.status === \"rejected\"\r\n                                    && <div className=\"info\">\r\n                                        <div className=\"title\">Bekor qilish sababi:</div>\r\n                                        <div\r\n                                            className=\"text\">\r\n                                            {information.rejected_reason.translations[i18next.language].name}\r\n                                        </div>\r\n                                    </div>}\r\n\r\n                                {information.comment_to_driver\r\n                                    && <div className=\"info\">\r\n                                        <div className=\"title\">Haydovchi uchun izoh:</div>\r\n                                        <div\r\n                                            className=\"text\">\r\n                                            {information.comment_to_driver}\r\n                                        </div>\r\n                                    </div>}\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalShow.status === \"change-status\" && (\r\n                        <div className=\"change-status\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img\r\n                                    onClick={() => setModalShow({status: \"\", show: false})}\r\n                                    src=\"./images/admin/x.png\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"title\">\r\n                                Buyurtma bosqichini tanlang\r\n                            </div>\r\n                            <div className=\"form-box\">\r\n                                <select onChange={(e) => setOrderStatus(e.target.value)} name=\"status\">\r\n                                    <option value=\"\"></option>\r\n                                    <option value=\"arrived\">Mijozga kelish</option>\r\n                                    <option value=\"picked\">Mijozni olish</option>\r\n                                    <option value=\"started\">Boshlash</option>\r\n                                    <option value=\"finished\">Yakunlash</option>\r\n                                    <option value=\"rejected\">Bekor qilish</option>\r\n                                </select>\r\n\r\n                                {orderStatus === \"rejected\" &&\r\n                                    <>\r\n                                        <label htmlFor=\"reason\">Bekor qilish sababini tanlang:</label>\r\n                                        <select onChange={(e) => setReason(e.target.value)} name=\"status\" id=\"reason\">\r\n                                            <option value=\"\"></option>\r\n                                            {reasonList.map((item, index) => (\r\n                                                <option key={index} value={item.id}>\r\n                                                    {item.translations[i18next.language].name}\r\n                                                </option>\r\n                                            ))}\r\n                                        </select>\r\n                                    </>\r\n                                }\r\n                            </div>\r\n                            <div onClick={changeStatus} className=\"success-btn\">\r\n                                Tasdiqlash\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalShow.status === \"statistic\" && (\r\n                        <div className=\"statistic\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img\r\n                                    onClick={() => setModalShow({status: \"\", show: false})}\r\n                                    src=\"./images/admin/x.png\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"title\">\r\n                                Buyurtmalar statistikasi\r\n                            </div>\r\n                            <div className=\"form-box\">\r\n                                <div className=\"statistic-box\">\r\n                                    <div className=\"name\">\r\n                                        Umumiy:\r\n                                    </div>\r\n\r\n                                    <div className=\"num\">\r\n                                        {statistics.total_orders}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"statistic-box\">\r\n                                    <div className=\"name\">\r\n                                        Yakunlangan:\r\n                                    </div>\r\n\r\n                                    <div className=\"num\">\r\n                                        {statistics.finished_orders}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"statistic-box\">\r\n                                    <div className=\"name\">\r\n                                        Faol:\r\n                                    </div>\r\n\r\n                                    <div className=\"num\">\r\n                                        {statistics.active_orders}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"statistic-box\">\r\n                                    <div className=\"name\">\r\n                                        Bekor qilingan:\r\n                                    </div>\r\n\r\n                                    <div className=\"num\">\r\n                                        {statistics.rejected_orders}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"statistic-box\">\r\n                                    <div className=\"name\">\r\n                                        Bugungi buyurtmalar soni:\r\n                                    </div>\r\n\r\n                                    <div className=\"num\">\r\n                                        {statistics.orders_today}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"statistic-box\">\r\n                                    <div className=\"name\">\r\n                                        Joriy oydagi buyurtmalar soni:\r\n                                    </div>\r\n\r\n                                    <div className=\"num\">\r\n                                        {statistics.orders_this_month}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </CSSTransition>\r\n\r\n        <div className=\"header\">\r\n            <div className=\"left-side\">\r\n                <div className=\"search-box\">\r\n                    <input value={client} onChange={(e) => setClient(e.target.value)} placeholder=\"Mijoz tel raqami\"\r\n                           type=\"text\"/>\r\n                </div>\r\n                <div className=\"search-box\">\r\n                    <input value={driver} onChange={(e) => setDriver(e.target.value)} placeholder=\"Haydovchi tel raqami\"\r\n                           type=\"text\"/>\r\n                </div>\r\n                <div className=\"search-box\">\r\n                    <label htmlFor=\"direction\">Yo'nalish:</label>\r\n                    <select value={direction} onChange={(e) => setDirection(e.target.value)} name=\"direction\"\r\n                            id=\"direction\">\r\n                        <option value=\"\"></option>\r\n                        <option value=\"regional\">\r\n                            Taxi\r\n                        </option>\r\n                        <option value=\"postal\">\r\n                            Jo'natma\r\n                        </option>\r\n                        <option value=\"minivan\">\r\n                            Miniven\r\n                        </option>\r\n                        <option value=\"travel\">\r\n                            Sayohat\r\n                        </option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"search-box\">\r\n                    <label htmlFor=\"tarif\">Tarif:</label>\r\n                    <select value={tarif} onChange={(e) => setTarif(e.target.value)} name=\"tarif\" id=\"tarif\">\r\n                        <option value=\"\"></option>\r\n                        <option value=\"standart\">\r\n                            Standart\r\n                        </option>\r\n                        <option value=\"comfort\">\r\n                            Komfort\r\n                        </option>\r\n                        <option value=\"business\">\r\n                            Biznes\r\n                        </option>\r\n                        <option value=\"delivery\">\r\n                            Jo'natma\r\n                        </option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"search-box\">\r\n                    <label htmlFor=\"status\">Status:</label>\r\n                    <select value={status} onChange={(e) => setStatus(e.target.value)} name=\"status\" id=\"status\">\r\n                        <option value=\"\"></option>\r\n                        <option value=\"rejected\">\r\n                            Bekor qilingan\r\n                        </option>\r\n                        <option value=\"started\">\r\n                            Boshlangan\r\n                        </option>\r\n                        <option value=\"arrived\">\r\n                            Mijozga keldi\r\n                        </option>\r\n                        <option value=\"picked\">\r\n                            Mijozni oldi\r\n                        </option>\r\n                        <option value=\"finished\">\r\n                            Yakunlangan\r\n                        </option>\r\n                        <option value=\"active\">\r\n                            Faol\r\n                        </option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"search-box\">\r\n                    <label htmlFor=\"date\">Sana:</label>\r\n                    <input value={date} onChange={(e) => setDate(e.target.value)} type=\"date\"/>\r\n                </div>\r\n                <div onClick={filterData} className=\"filter-btn\">\r\n                    <img src=\"./images/admin/panel.png\" alt=\"\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"header\">\r\n            <div className=\"left-side\">\r\n\r\n            </div>\r\n            <div onClick={() => setModalShow({show: true, status: \"statistic\"})} className=\"statisitcs\">\r\n                Statistika\r\n                <img src=\"./images/data-management.png\" alt=\"a\"/>\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"wrapper-table\">\r\n            {\r\n                loader ? <LoaderAdmin/> :\r\n                    <table>\r\n                        <thead>\r\n                        <tr>\r\n                            <th>№</th>\r\n                            <th>Mijoz</th>\r\n                            <th>Haydovchi</th>\r\n                            <th>Buyurtma berilgan sana</th>\r\n                            <th>Tarif</th>\r\n                            <th>Buyurtma narxi</th>\r\n                            <th>Batafsil ma'lumotlar</th>\r\n                            <th>Statusni ozgartirish</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {driversList.map((item, index) => {\r\n                            return <tr key={index}>\r\n                                <td>{index + 1}</td>\r\n                                <td>\r\n                                    <div className=\"text-driver\">\r\n                                        <div className=\"name\">\r\n                                            {item.client.first_name} &nbsp;\r\n                                            {item.client.last_name}\r\n                                        </div>\r\n                                        <div className=\"phone\">\r\n                                            {item.client.phone}\r\n                                        </div>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div className=\"text-driver\">\r\n                                        {item.driver && <>\r\n                                            <div className=\"name\">\r\n                                                {item.driver.first_name} &nbsp;\r\n                                                {item.driver.last_name}\r\n                                            </div>\r\n                                            <div className=\"phone\">\r\n                                                {item.driver.phone}\r\n                                            </div>\r\n                                        </>}\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    {item.created_at}\r\n                                </td>\r\n                                <td>\r\n                                    {item.car_category.translations[i18next.language].name}\r\n                                </td>\r\n                                <td>\r\n                                    {item.price} so'm\r\n                                </td>\r\n                                <td>\r\n                                    <div className=\"icon\">\r\n                                        <img onClick={() => {\r\n                                            setInformation(item)\r\n                                            setModalShow({show: true, status: \"car-information\"});\r\n                                        }} src=\"./images/admin/document.png\" alt=\"\"/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n\r\n                                    {item.status === \"rejected\" ? <div className=\"status-red\">\r\n                                        Bekor qilingan\r\n                                    </div> : item.status === \"finished\" ? <div className=\"status-green\">\r\n                                            Yakunlangan\r\n                                        </div> :\r\n                                        <div className=\"icon\">\r\n                                            <div className=\"status-blue\">\r\n                                                {item.status === \"active\" && \"Faol\"}\r\n                                                {item.status === \"started\" && \"Boshlandi\"}\r\n                                                {item.status === \"arrived\" && \"Mijozga keldi\"}\r\n                                                {item.status === \"picked\" && \"Mijozni oldi\"}\r\n                                            </div>\r\n                                            <img onClick={() => {\r\n                                                setOrderId(item.id)\r\n                                                setModalShow({show: true, status: \"change-status\"});\r\n                                            }} className=\"status-icon\" src=\"./images/admin/status.png\" alt=\"\"/>\r\n                                        </div>}\r\n\r\n                                </td>\r\n                            </tr>\r\n                        })}\r\n                        </tbody>\r\n                    </table>\r\n            }\r\n\r\n        </div>\r\n\r\n        <div className=\"pagination\">\r\n            <div onClick={() => {\r\n                if (activeItem > 1) {\r\n                    getList(links.previous, activeItem - 1);\r\n                }\r\n            }} className=\"prev\">\r\n                <img src=\"./images/admin/prev.png\" alt=\"Prev\"/>\r\n            </div>\r\n\r\n            {visiblePages.map((item, index) => (\r\n                <div key={index}\r\n                     onClick={() => {\r\n                         if (item !== \"...\") {\r\n                             getList(null, item);\r\n                         }\r\n                     }}\r\n                     className={`items ${activeItem === item ? \"active\" : \"\"} `}\r\n                     style={{cursor: item === \"...\" ? \"default\" : \"pointer\"}}>\r\n                    {item}\r\n                </div>\r\n            ))}\r\n\r\n            <div className=\"next\" onClick={() => {\r\n                if (activeItem < totalPages) {\r\n                    getList(links.next, activeItem + 1);\r\n                }\r\n            }}>\r\n                <img src=\"./images/admin/next.png\" alt=\"Next\"/>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default Orders","import \"./style.scss\"\nimport {useContext, useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {MyContext} from \"../../App/App\";\nimport i18next from \"i18next\";\nimport {useTranslation} from \"react-i18next\";\n\nconst CarModel = () => {\n    const {t} = useTranslation();\n    let value = useContext(MyContext);\n    const [car_make, setCar_make] = useState([]);\n    const [car_model, setCar_model] = useState([]);\n    const [carBrandId, setCarBrandId] = useState(\"\")\n\n    const [edit, setEdit] = useState(false)\n    const [editId, setEditId] = useState('')\n    const [translations, setTranslations] = useState(\n        {\n            name_uz: \"\",\n            name_ru: \"\",\n            name_en: \"\"\n        })\n\n    const getData = () => {\n        axios.get(`${value.url}/dashboard/carmake/`, {\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n        }).then((response) => {\n            setCar_make(response.data);\n        })\n    }\n\n    useEffect(() => {\n        getData()\n    }, []);\n\n    const addColor = (status) => {\n        const {name_uz, name_ru, name_en} = translations;\n\n        const isAnyNameFilled = name_uz.trim() && name_ru.trim() && name_en.trim();\n\n        if (!isAnyNameFilled) {\n            alert(\"Iltimos, rang nomini kiriting\");\n            return;\n        }\n\n        const translation_list = {\n            uz: {\n                name: name_uz.trim()\n            },\n            ru: {\n                name: name_ru.trim()\n            },\n            en: {\n                name: name_en.trim()\n            }\n        };\n\n        if (status === \"add\") {\n            axios.post(`${value.url}/dashboard/carmodel/`, {make: carBrandId, translations: translation_list},\n                {\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n                })\n                .then((response) => {\n                    setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n                    axios.get(`${value.url}/dashboard/carmake/${carBrandId}/`, {\n                        headers: {\n                            \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\n                        }\n                    }).then((response) => {\n                        setCar_model(response.data);\n                    })\n\n                })\n                .catch((error) => {\n                    console.error(\"Rang qo'shishda xatolik:\", error);\n                });\n        }\n\n        if (status === \"edit\") {\n            axios.put(`${value.url}/dashboard/carmodel/${editId}/`, {translations: translation_list},\n                {\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n                })\n                .then((response) => {\n                    setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n                    setEdit(false);\n                    axios.get(`${value.url}/dashboard/carmake/${carBrandId}/`, {\n                        headers: {\n                            \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\n                        }\n                    }).then((response) => {\n                        setCar_model(response.data);\n                    })\n\n                })\n                .catch((error) => {\n                    console.error(\"Rangni tahrirlashda xatolik:\", error);\n                });\n        }\n    };\n\n    const delColor = (id) => {\n        axios.delete(`${value.url}/dashboard/carmodel/${id}/`, {\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n        }).then((response) => {\n            setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n            axios.get(`${value.url}/dashboard/carmake/${carBrandId}/`, {\n                headers: {\n                    \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\n                }\n            }).then((response) => {\n                setCar_model(response.data);\n            })\n            setEdit(false)\n        })\n    }\n\n    const handleEdit = (color) => {\n        setEdit(true);\n        setEditId(color.id);\n        setTranslations({\n            name_uz: color.translations[\"uz\"].name || \"\",\n            name_ru: color.translations[\"ru\"].name || \"\",\n            name_en: color.translations[\"en\"].name || \"\"\n        });\n    };\n\n    const getCarNames = (e) => {\n        setCarBrandId(e.target.value)\n        axios.get(`${value.url}/dashboard/carmake/${e.target.value}/`, {\n            headers: {\n                \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\n            }\n        }).then((response) => {\n            setCar_model(response.data);\n        })\n    }\n\n    return <div className=\"car-model-wrapper\">\n        <div className=\"header\">\n            <div className=\"form-wrapper\">\n                <label htmlFor=\"\">Moshina brendini tanlang: </label>\n                <select onChange={getCarNames} name=\"car-brand\"\n                        id=\"car-brand\">\n                    <option value=\"\"></option>\n                    {car_make.map((brand) => (\n                        <option key={brand.id} value={brand.id}>\n                            {brand.translations[i18next.language].name}\n                        </option>\n                    ))}\n                </select>\n\n                <input\n                    value={translations.name_uz}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_uz: e.target.value})\n                    }\n                    placeholder=\"Avtomobil nomi (uz)...\"\n                    type=\"text\"\n                />\n\n                <input\n                    value={translations.name_en}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_en: e.target.value})\n                    }\n                    placeholder=\"Car name (en)...\"\n                    type=\"text\"\n                />\n\n                <input\n                    value={translations.name_ru}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_ru: e.target.value})\n                    }\n                    placeholder=\"Название автомобиля (ru)...\"\n                    type=\"text\"\n                />\n\n                {edit ? <div onClick={() => addColor(\"edit\")} className=\"add-color\">\n                    <img src=\"./images/admin/checkmark.png\" alt=\"\"/>\n                </div> : <div onClick={() => addColor(\"add\")} className=\"add-color\">\n                    <img src=\"./images/admin/add.png\" alt=\"\"/>\n                </div>}\n\n            </div>\n        </div>\n        <div className=\"colors-cards\">\n            <div className=\"wrapper-box\">\n                {\n                    car_model.map((color, index) => (\n                        <div key={index} className=\"color-card\">\n                            <div className=\"name\">{color.translations[i18next.language].name}</div>\n                            <div className=\"bttons\">\n                                <div onClick={() => handleEdit(color)} className=\"btn\">\n                                    <img src=\"./images/admin/edit-tools.png\" alt=\"\"/>\n                                </div>\n\n                                <div onClick={() => delColor(color.id)} className=\"btn\">\n                                    <img src=\"./images/admin/delete.png\" alt=\"\"/>\n                                </div>\n                            </div>\n                        </div>\n                    ))\n                }\n            </div>\n        </div>\n    </div>\n}\n\nexport default CarModel;","import {useEffect, useRef, useState, useMemo, useContext} from \"react\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport \"./style.scss\"\r\nimport {MyContext} from \"../../App/App\";\r\nimport axios from \"axios\";\r\n\r\nconst Payment = () => {\r\n    let value = useContext(MyContext);\r\n    const ref = useRef(null);\r\n    const [driversList, setDriversList] = useState([]);\r\n    const [getSearchText, setGetSearchText] = useState(\"\");\r\n    const worksPage = 100;\r\n    const [pageNumber, setPageNumber] = useState(0);\r\n    const pagesVisited = pageNumber * worksPage;\r\n    const [statistics, setStatistics] = useState([]);\r\n\r\n    const pageCount = Math.ceil(driversList.length / worksPage);\r\n\r\n    const changePage = ({selected}) => {\r\n        setPageNumber(selected)\r\n\r\n        setTimeout(() => {\r\n            ref.current?.scrollIntoView({behavior: \"smooth\"});\r\n        }, 500);\r\n    };\r\n\r\n    useEffect(() => {\r\n        axios.get(`${value.url}/dashboard/payment/`, {\r\n            headers: {\r\n                \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\r\n            }\r\n        }).then((response) => {\r\n            console.log(response.data);\r\n            setDriversList(response.data);\r\n        })\r\n    }, []);\r\n\r\n    const productList = driversList.slice(pagesVisited, pagesVisited + worksPage)\r\n        .filter((item) => {\r\n            const searchText = getSearchText.toString().toLowerCase().replace(/\\s+/g, '').replace(/\\+/g, '');\r\n            const phoneNumber = item.balance_id.toString().toLowerCase().replace(/\\s+/g, '').replace(/\\+/g, '');\r\n            return searchText === \"\" || phoneNumber.includes(searchText);\r\n        }).map((item, index) => {\r\n            return <tr key={index}>\r\n                <td>{index + 1}</td>\r\n\r\n                <td>\r\n                    {item.balance_id}\r\n                </td>\r\n\r\n                <td>\r\n                    {item.amount}\r\n                </td>\r\n\r\n                <td>\r\n                    {item.status}\r\n                </td>\r\n                <td>\r\n                    {item.payment_operator}\r\n                </td>\r\n\r\n                <td>\r\n                    {item.updated_at}\r\n                </td>\r\n                <td>\r\n                    {item.reason}\r\n                </td>\r\n            </tr>\r\n        });\r\n\r\n    return <div className=\"payment-container\">\r\n        <div className=\"header\">\r\n            <div className=\"search-box\">\r\n                <img src=\"./images/admin/search.png\" alt=\"\"/>\r\n                <input onChange={(e) => setGetSearchText(e.target.value)} placeholder=\"ID kiritng\" type=\"text\"/>\r\n            </div>\r\n            <div className=\"statisitcs\">\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"wrapper-table\">\r\n            <table>\r\n                <thead>\r\n                <tr>\r\n                    <th>№</th>\r\n                    <th>Balans id</th>\r\n                    <th>Miqdor</th>\r\n                    <th>Status</th>\r\n                    <th>To'lov turi</th>\r\n                    <th>To'lov sanasi</th>\r\n                    <th>Sabab</th>\r\n                </tr>\r\n\r\n                </thead>\r\n\r\n                <tbody>\r\n                {productList}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n\r\n        <div className=\"pagination\">\r\n            {driversList.length > 100 ? <ReactPaginate\r\n                breakLabel=\"...\"\r\n                previousLabel={<img src=\"./images/admin/prev.png\" alt=\"\"/>}\r\n                nextLabel={<img src=\"./images/admin/next.png\" alt=\"\"/>}\r\n                pageCount={pageCount}\r\n                onPageChange={changePage}\r\n                containerClassName={\"paginationBttns\"}\r\n                previousLinkClassName={\"previousBttn\"}\r\n                nextLinkClassName={\"nextBttn\"}\r\n                disabledCalassName={\"paginationDisabled\"}\r\n                activeClassName={\"paginationActive\"}\r\n            /> : \"\"}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Payment","import \"./style.scss\"\nimport {useContext, useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {MyContext} from \"../../App/App\";\nimport i18next from \"i18next\";\n\nconst RejectReason = () => {\n    let value = useContext(MyContext);\n    const [colorsList, setColorsList] = useState([])\n    const [edit, setEdit] = useState(false)\n    const [rejectStatus, setRejectStatus] = useState(\"\")\n    const [editId, setEditId] = useState('')\n    const [translations, setTranslations] = useState(\n        {\n            name_uz: \"\",\n            name_ru: \"\",\n            name_en: \"\"\n        })\n\n    const getData = (status) => {\n        setRejectStatus(status)\n        axios.get(`${value.url}/dashboard/rejectreson/?type=${status}`, {\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n        }).then((response) => {\n            setColorsList(response.data);\n        })\n    }\n\n    const addColor = (status) => {\n        const {name_uz, name_ru, name_en} = translations;\n\n        const isAnyNameFilled = name_uz.trim() && name_ru.trim() && name_en.trim();\n\n        if (!isAnyNameFilled) {\n            alert(\"Iltimos, rang nomini kiriting\");\n            return;\n        }\n\n        const translation_list = {\n            uz: {\n                name: name_uz.trim()\n            },\n            ru: {\n                name: name_ru.trim()\n            },\n            en: {\n                name: name_en.trim()\n            }\n        };\n\n        if (status === \"add\") {\n            axios.post(`${value.url}/dashboard/rejectreson/`, {type: rejectStatus, translations: translation_list},\n                {\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n                })\n                .then((response) => {\n                    setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n                    getData();\n                })\n                .catch((error) => {\n                    console.error(\"Rang qo'shishda xatolik:\", error);\n                });\n        }\n\n        if (status === \"edit\") {\n            axios.put(`${value.url}/dashboard/rejectreson/${editId}/`, {\n                    type: rejectStatus,\n                    translations: translation_list\n                },\n                {\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n                })\n                .then((response) => {\n                    setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n                    getData();\n                    setEdit(false);\n                })\n                .catch((error) => {\n                    console.error(\"Rangni tahrirlashda xatolik:\", error);\n                });\n        }\n    };\n\n    const delColor = (id) => {\n        axios.delete(`${value.url}/dashboard/rejectreson/${id}/`, {\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n        }).then((response) => {\n            setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n            getData()\n            setEdit(false)\n        })\n    }\n\n    const handleEdit = (color) => {\n        setEdit(true);\n        setEditId(color.id);\n        setTranslations({\n            name_uz: color.translations[\"uz\"].name || \"\",\n            name_ru: color.translations[\"ru\"].name || \"\",\n            name_en: color.translations[\"en\"].name || \"\"\n        });\n    };\n\n    return <div className=\"reject-reason-wrapper\">\n        <div className=\"header\">\n            <div className=\"form-wrapper\">\n                <label htmlFor=\"status\">Moshina brendini tanlang: </label>\n                <select onChange={(e) => getData(e.target.value)} name=\"status\"\n                        id=\"status\">\n                    <option value=\"\"></option>\n                    <option value=\"driver\">Haydovchi</option>\n                    <option value=\"client\">Mijoz</option>\n                    <option value=\"admin\">Admin</option>\n                </select>\n\n                <input\n                    value={translations.name_uz}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_uz: e.target.value})\n                    }\n                    placeholder=\"Sabab nomi (uz)...\"\n                    type=\"text\"\n                />\n                <input\n                    value={translations.name_en}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_en: e.target.value})\n                    }\n                    placeholder=\"Reason name (en)...\"\n                    type=\"text\"\n                />\n\n                <input\n                    value={translations.name_ru}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_ru: e.target.value})\n                    }\n                    placeholder=\"Название причины (ru)...\"\n                    type=\"text\"\n                />\n\n\n                {edit ? <div onClick={() => addColor(\"edit\")} className=\"add-color\">\n                    <img src=\"./images/admin/checkmark.png\" alt=\"\"/>\n                </div> : <div onClick={() => addColor(\"add\")} className=\"add-color\">\n                    <img src=\"./images/admin/add.png\" alt=\"\"/>\n                </div>}\n\n            </div>\n        </div>\n        <div className=\"colors-cards\">\n            <div className=\"wrapper-box\">\n                {\n                    colorsList.map((color, index) => (\n                        <div key={index} className=\"color-card\">\n                            <div className=\"name\">{color.translations[i18next.language].name}</div>\n                            <div className=\"bttons\">\n                                <div onClick={() => handleEdit(color)} className=\"btn\">\n                                    <img src=\"./images/admin/edit-tools.png\" alt=\"\"/>\n                                </div>\n\n                                <div onClick={() => delColor(color.id)} className=\"btn\">\n                                    <img src=\"./images/admin/delete.png\" alt=\"\"/>\n                                </div>\n                            </div>\n                        </div>\n                    ))\n                }\n            </div>\n        </div>\n    </div>\n}\n\nexport default RejectReason;","import \"./style.scss\"\nimport {useContext, useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {MyContext} from \"../../App/App\";\nimport i18next from \"i18next\";\nimport {useTranslation} from \"react-i18next\";\n\nconst ExtraServices = () => {\n    const {t} = useTranslation();\n    let value = useContext(MyContext);\n    const [colorsList, setColorsList] = useState([])\n    const [edit, setEdit] = useState(false)\n    const [editId, setEditId] = useState('')\n    const [isMain, setIsMain] = useState(false);\n    const [price, setPrice] = useState(\"\");\n    const [translations, setTranslations] = useState(\n        {\n            name_uz: \"\",\n            name_ru: \"\",\n            name_en: \"\"\n        })\n\n    const getData = () => {\n        axios.get(`${value.url}/dashboard/extraservices/`, {\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n        }).then((response) => {\n            setColorsList(response.data);\n        })\n    }\n\n    useEffect(() => {\n        getData()\n    }, []);\n\n    const addColor = (status) => {\n        const {name_uz, name_ru, name_en} = translations;\n\n        const isAnyNameFilled = name_uz.trim() && name_ru.trim() && name_en.trim();\n\n        if (!isAnyNameFilled) {\n            alert(\"Iltimos, formani toldiring\");\n            return;\n        }\n\n        const translation_list = {\n            uz: {\n                name: name_uz.trim()\n            },\n            ru: {\n                name: name_ru.trim()\n            },\n            en: {\n                name: name_en.trim()\n            }\n        };\n\n        if (status === \"add\") {\n            axios.post(`${value.url}/dashboard/extraservices/`, {\n                    is_main: isMain,\n                    price,\n                    translations: translation_list\n                },\n                {\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n                })\n                .then((response) => {\n                    setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n                    setIsMain(false);\n                    setPrice(\"\")\n                    getData();\n                })\n                .catch((error) => {\n                    console.error(\"Xizmat qo'shishda xatolik:\", error);\n                });\n        }\n\n        if (status === \"edit\") {\n            axios.put(`${value.url}/dashboard/extraservices/${editId}/`, {\n                    is_main: isMain,\n                    price,\n                    translations: translation_list\n                },\n                {\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n                })\n                .then((response) => {\n                    setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n                    getData();\n                    setEdit(false);\n                    setIsMain(false);\n                    setPrice(\"\")\n                })\n                .catch((error) => {\n                    console.error(\"Rangni tahrirlashda xatolik:\", error);\n                });\n        }\n    };\n\n    const delColor = (id) => {\n        axios.delete(`${value.url}/dashboard/extraservices/${id}/`, {\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n        }).then((response) => {\n            setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n            getData()\n            setEdit(false)\n        })\n    }\n\n    const handleEdit = (color) => {\n        setEdit(true);\n        setEditId(color.id);\n        setTranslations({\n            name_uz: color.translations[\"uz\"].name || \"\",\n            name_ru: color.translations[\"ru\"].name || \"\",\n            name_en: color.translations[\"en\"].name || \"\"\n        });\n        setIsMain(color.is_main)\n        setPrice(color.price)\n    };\n\n    const handleCheckboxChange = () => {\n        setIsMain(!isMain);\n    };\n\n    return <div className=\"extra-services-wrapper\">\n        <div className=\"header\">\n            <div className=\"form-wrapper\">\n\n                <label htmlFor=\"ismain\" className=\"ismain\">\n                    <div className=\"name\">\n                        Asosiymi?\n                    </div>\n\n                    <input\n                        type=\"checkbox\"\n                        checked={isMain}\n                        id=\"ismain\"\n                        onChange={handleCheckboxChange}\n                    />\n                </label>\n\n                <input\n                    value={price}\n                    onChange={(e) => setPrice(e.target.value)}\n                    placeholder=\"Narx\"\n                    type=\"number\"\n                />\n\n\n                <input\n                    value={translations.name_uz}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_uz: e.target.value})\n                    }\n                    placeholder=\"Xizmat nomi (uz)...\"\n                    type=\"text\"\n                />\n                <input\n                    value={translations.name_en}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_en: e.target.value})\n                    }\n                    placeholder=\"Price name (en)...\"\n                    type=\"text\"\n                />\n\n                <input\n                    value={translations.name_ru}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_ru: e.target.value})\n                    }\n                    placeholder=\"Название услуги (ru)...\"\n                    type=\"text\"\n                />\n\n\n                {edit ? <div onClick={() => addColor(\"edit\")} className=\"add-color\">\n                    <img src=\"./images/admin/checkmark.png\" alt=\"\"/>\n                </div> : <div onClick={() => addColor(\"add\")} className=\"add-color\">\n                    <img src=\"./images/admin/add.png\" alt=\"\"/>\n                </div>}\n\n            </div>\n        </div>\n        <div className=\"colors-cards\">\n            <div className=\"wrapper-box\">\n                {\n                    colorsList.map((service, index) => (\n                        <div key={index} className={`color-card ${service.is_main && \"ismain\"}`}>\n                            <div className=\"name\">{service.translations[i18next.language].name}: {service.price} so'm\n                            </div>\n                            <div className=\"bttons\">\n                                <div onClick={() => handleEdit(service)} className=\"btn\">\n                                    <img src=\"./images/admin/edit-tools.png\" alt=\"\"/>\n                                </div>\n\n                                <div onClick={() => delColor(service.id)} className=\"btn\">\n                                    <img src=\"./images/admin/delete.png\" alt=\"\"/>\n                                </div>\n                            </div>\n                        </div>\n                    ))\n                }\n            </div>\n        </div>\n    </div>\n}\n\nexport default ExtraServices;","import {useEffect, useRef, useState, useContext} from \"react\";\r\nimport {CSSTransition} from \"react-transition-group\";\r\nimport {useFormik} from \"formik\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport {\r\n    TextField,\r\n    MenuItem,\r\n    InputLabel,\r\n    FormControl,\r\n    Select\r\n} from \"@mui/material\";\r\nimport \"./style.scss\"\r\nimport axios from \"axios\";\r\nimport {MyContext} from \"../../App/App\";\r\nimport i18next from \"i18next\";\r\nimport LoaderAdmin from \"../loader-admin/LoaderAdmin\";\r\n\r\nconst Price = () => {\r\n    const [loader, setLoader] = useState(false);\r\n    let value = useContext(MyContext);\r\n    const [modalShow, setModalShow] = useState({show: false, status: false});\r\n    const nodeRef = useRef(null);\r\n    const [direction, setDirection] = useState([])\r\n    const [tarif, setTarif] = useState([]);\r\n    const [regions, setRegions] = useState([]);\r\n    const [serviceList, setServiceList] = useState([]);\r\n    const [editId, setEditId] = useState(\"\");\r\n    const ref = useRef(null);\r\n    const worksPage = 50;\r\n    const [pageNumber, setPageNumber] = useState(0);\r\n    const pagesVisited = pageNumber * worksPage;\r\n\r\n    const [from, setFrom] = useState(\"\");\r\n    const [to, setTo] = useState(\"\");\r\n    const [category, setCategory] = useState(\"\");\r\n    const [service, setService] = useState(\"\");\r\n\r\n    const changePage = ({selected}) => {\r\n        setPageNumber(selected)\r\n\r\n        setTimeout(() => {\r\n            ref.current?.scrollIntoView({behavior: \"smooth\"});\r\n        }, 500);\r\n    };\r\n\r\n    const validate = (values) => {\r\n        const errors = {};\r\n\r\n        if (!values.car_service) {\r\n            errors.car_service = \"Required\";\r\n        }\r\n\r\n        if (!values.car_category) {\r\n            errors.car_category = \"Required\";\r\n        }\r\n        if (!values.from_region) {\r\n            errors.from_region = \"Required\";\r\n        }\r\n        if (!values.to_region) {\r\n            errors.to_region = \"Required\";\r\n        }\r\n        if (!values.price) {\r\n            errors.price = \"Required\";\r\n        }\r\n\r\n        return errors;\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            car_service: \"\",\r\n            car_category: \"\",\r\n            from_region: \"\",\r\n            to_region: \"\",\r\n            price: \"\",\r\n        },\r\n        validate,\r\n        onSubmit: (values) => {\r\n            sendAllInfo()\r\n        },\r\n    });\r\n\r\n    const sendAllInfo = () => {\r\n        let allInfo = {\r\n            service: formik.values.car_service,\r\n            category: formik.values.car_category,\r\n            from_region: formik.values.from_region,\r\n            to_region: formik.values.to_region,\r\n            cost: Number(formik.values.price),\r\n        }\r\n\r\n        if (!editId) {\r\n            axios.post(`${value.url}/dashboard/price/`, allInfo, {\r\n                headers: {\r\n                    Authorization: `Token ${localStorage.getItem(\"token\")}`,\r\n                },\r\n            }).then((response) => {\r\n                getDrivers()\r\n                setModalShow({status: \"\", show: false})\r\n                formik.resetForm();\r\n            })\r\n        }\r\n\r\n        if (editId) {\r\n            axios.put(`${value.url}/dashboard/price/${editId}/`, allInfo,\r\n                {\r\n                    headers: {\r\n                        Authorization: `Token ${localStorage.getItem(\"token\")}`,\r\n                    },\r\n                }).then((response) => {\r\n                getDrivers()\r\n                setModalShow({status: \"\", show: false})\r\n                formik.resetForm();\r\n                setEditId(\"\")\r\n            })\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getDrivers()\r\n\r\n        axios.get(`${value.url}/dashboard/region/`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setRegions(response.data);\r\n        })\r\n\r\n        axios.get(`${value.url}/dashboard/carcategory/`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setTarif(response.data);\r\n        })\r\n\r\n        axios.get(`${value.url}/dashboard/carservice/`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setDirection(response.data);\r\n        })\r\n\r\n    }, []);\r\n\r\n    const delColor = (id) => {\r\n        axios.delete(`${value.url}/dashboard/price/${id}/`, {\r\n            headers: {\r\n                Authorization: `Token ${localStorage.getItem(\"token\")}`,\r\n            },\r\n        }).then((response) => {\r\n            getDrivers()\r\n        })\r\n    }\r\n\r\n    const getDrivers = () => {\r\n        setLoader(true);\r\n\r\n        axios.get(`${value.url}/dashboard/price/`, {\r\n            headers: {\r\n                Authorization: `Token ${localStorage.getItem(\"token\")}`,\r\n            },\r\n        }).then((response) => {\r\n            setServiceList(response.data);\r\n            console.log(response.data);\r\n        }).finally(() => {\r\n            setLoader(false);\r\n        });\r\n    }\r\n\r\n    const editValues = (service) => {\r\n        setEditId(service.id)\r\n        setModalShow({show: true, status: \"edit-driver\"});\r\n        formik.setValues({\r\n            car_service: service.service.id,\r\n            car_category: service.category.id,\r\n            from_region: service.from_region.id,\r\n            to_region: service.to_region.id,\r\n            price: service.cost,\r\n        });\r\n    }\r\n\r\n    const filteredList = serviceList.filter(item => {\r\n        const matchesService = service ? item.service.service_type === service : true;\r\n        const matchesCategory = category ? item.category.category_type === category : true;\r\n        const matchesFrom = from ? item.from_region.id === from : true;\r\n        const matchesTo = to ? item.to_region.id === to : true;\r\n\r\n        return matchesService && matchesCategory && matchesFrom && matchesTo;\r\n    });\r\n\r\n    const pageCount = Math.ceil(filteredList.length / worksPage);\r\n\r\n    const productList = filteredList\r\n        .slice(pagesVisited, pagesVisited + worksPage)\r\n        .map((item, index) => (\r\n            <tr key={index}>\r\n                <td>{index + 1}</td>\r\n                <td>{item.service.translations?.[i18next.language]?.name}</td>\r\n                <td>{item.category.translations?.[i18next.language]?.name}</td>\r\n                <td>{item.from_region.translations?.[i18next.language]?.name}</td>\r\n                <td>{item.to_region.translations?.[i18next.language]?.name}</td>\r\n                <td>{item.cost}</td>\r\n                <td>\r\n                    <div className=\"icon\">\r\n                        <img onClick={() => delColor(item.id)} src=\"./images/admin/delete.png\" alt=\"\"/>\r\n                    </div>\r\n                </td>\r\n                <td></td>\r\n                <div className=\"edit-icon\">\r\n                    <img onClick={() => editValues(item)} src=\"./images/admin/edit-tools.png\" alt=\"\"/>\r\n                </div>\r\n            </tr>\r\n        ));\r\n\r\n    return <div className=\"price-container\">\r\n        <CSSTransition\r\n            in={modalShow.show}\r\n            nodeRef={nodeRef}\r\n            timeout={300}\r\n            classNames=\"alert\"\r\n            unmountOnExit\r\n        >\r\n            <div className=\"modal-sloy\">\r\n                <div ref={nodeRef} className=\"modal-card\">\r\n\r\n                    {modalShow.status === \"add-driver\" && (\r\n                        <div className=\"add-driver\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img\r\n                                    onClick={() => {\r\n                                        setModalShow({status: \"\", show: false})\r\n                                        formik.resetForm()\r\n                                    }}\r\n                                    src=\"./images/admin/x.png\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"title\">Narx qo'shish</div>\r\n\r\n                            <div className=\"form-container\">\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Yo'nalish</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.car_service === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.car_service}\r\n                                                label=\"Yo'nalish\"\r\n                                                name=\"car_service\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {direction.map((item, index) => (\r\n                                                    <MenuItem key={index} value={item.id}>\r\n                                                        {item.translations[i18next.language].name}\r\n                                                    </MenuItem>\r\n                                                ))}\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Tarif</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.car_category === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.car_category}\r\n                                                label=\"Tarif\"\r\n                                                name=\"car_category\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {tarif.map((item, index) => (\r\n                                                    <MenuItem key={index} value={item.id}>\r\n                                                        {item.translations[i18next.language].name}\r\n                                                    </MenuItem>\r\n                                                ))}\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Qayerdan</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.from_region === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.from_region}\r\n                                                label=\"Qayerdan\"\r\n                                                name=\"from_region\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {\r\n                                                    regions.map((item, index) => {\r\n                                                        return <MenuItem key={index}\r\n                                                                         value={item.id}>\r\n                                                            {item.translations[i18next.language].name}\r\n                                                        </MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Qayerga</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.to_region === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.to_region}\r\n                                                label=\"Qayerga\"\r\n                                                name=\"to_region\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {\r\n                                                    regions.map((item, index) => {\r\n                                                        return <MenuItem key={index}\r\n                                                                         value={item.id}>\r\n                                                            {item.translations[i18next.language].name}\r\n                                                        </MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.price === \"Required\"}\r\n                                            value={formik.values.price}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"price\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Narxi\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div onClick={sendAllInfo} className=\"add-btn\">\r\n                                    Narx qo'shish\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalShow.status === \"edit-driver\" && (\r\n                        <div className=\"add-driver\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img\r\n                                    onClick={() =>{\r\n                                        setModalShow({status: \"\", show: false})\r\n                                        formik.resetForm();\r\n                                        setEditId(\"\")\r\n                                    }}\r\n                                    src=\"./images/admin/x.png\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"title\">Narxni tahrirlash</div>\r\n\r\n                            <div className=\"form-container\">\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Yo'nalish</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.car_service === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.car_service}\r\n                                                label=\"Yo'nalish\"\r\n                                                name=\"car_service\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {direction.map((item, index) => (\r\n                                                    <MenuItem key={index} value={item.id}>\r\n                                                        {item.translations[i18next.language].name}\r\n                                                    </MenuItem>\r\n                                                ))}\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Tarif</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.car_category === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.car_category}\r\n                                                label=\"Tarif\"\r\n                                                name=\"car_category\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {tarif.map((item, index) => (\r\n                                                    <MenuItem key={index} value={item.id}>\r\n                                                        {item.translations[i18next.language].name}\r\n                                                    </MenuItem>\r\n                                                ))}\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Qayerdan</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.from_region === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.from_region}\r\n                                                label=\"Qayerdan\"\r\n                                                name=\"from_region\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {\r\n                                                    regions.map((item, index) => {\r\n                                                        return <MenuItem key={index}\r\n                                                                         value={item.id}>\r\n                                                            {item.translations[i18next.language].name}\r\n                                                        </MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Qayerga</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.to_region === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.to_region}\r\n                                                label=\"Qayerga\"\r\n                                                name=\"to_region\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {\r\n                                                    regions.map((item, index) => {\r\n                                                        return <MenuItem key={index}\r\n                                                                         value={item.id}>\r\n                                                            {item.translations[i18next.language].name}\r\n                                                        </MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.price === \"Required\"}\r\n                                            value={formik.values.price}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"price\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Narxi\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div onClick={sendAllInfo} className=\"add-btn\">\r\n                                    Saqlash\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                </div>\r\n            </div>\r\n        </CSSTransition>\r\n\r\n        <div className=\"header\">\r\n            <div className=\"filter-form\">\r\n                <div className=\"select-sides\">\r\n                    <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                        <InputLabel id=\"demo-select-large-label\">Yo'nalish</InputLabel>\r\n                        <Select\r\n                            labelid=\"demo-select-small-label\"\r\n                            id=\"demo-select-small\"\r\n                            value={service}\r\n                            label=\"Qayerga\"\r\n                            name=\"service\"\r\n                            onChange={(e) => setService(e.target.value)}\r\n                        >\r\n                            {direction.map((item, index) => (\r\n                                <MenuItem key={index} value={item.service_type}>\r\n                                    {item.translations[i18next.language].name}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                </div>\r\n\r\n                <div className=\"select-sides\">\r\n                    <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                        <InputLabel id=\"demo-select-large-label\">Tarif</InputLabel>\r\n                        <Select\r\n                            labelid=\"demo-select-small-label\"\r\n                            id=\"demo-select-small\"\r\n                            value={category}\r\n                            label=\"Tarif\"\r\n                            name=\"car_category\"\r\n                            onChange={(e) => setCategory(e.target.value)}\r\n                        >\r\n                            {tarif.map((item, index) => (\r\n                                <MenuItem key={index} value={item.category_type}>\r\n                                    {item.translations[i18next.language].name}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                </div>\r\n\r\n                <div className=\"select-sides\">\r\n                    <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                        <InputLabel id=\"demo-select-large-label\">Qayerdan</InputLabel>\r\n                        <Select\r\n                            labelid=\"demo-select-small-label\"\r\n                            id=\"demo-select-small\"\r\n                            value={from}\r\n                            label=\"Qayerdan\"\r\n                            name=\"from\"\r\n                            onChange={(e) => setFrom(e.target.value)}\r\n                        >\r\n                            {\r\n                                regions.map((item, index) => {\r\n                                    return <MenuItem key={index}\r\n                                                     value={item.id}>\r\n                                        {item.translations[i18next.language].name}\r\n                                    </MenuItem>\r\n                                })\r\n                            }\r\n                        </Select>\r\n                    </FormControl>\r\n                </div>\r\n\r\n                <div className=\"select-sides\">\r\n                    <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                        <InputLabel id=\"demo-select-large-label\">Qayerga</InputLabel>\r\n                        <Select\r\n                            labelid=\"demo-select-small-label\"\r\n                            id=\"demo-select-small\"\r\n                            value={to}\r\n                            label=\"Qayerga\"\r\n                            name=\"to\"\r\n                            onChange={(e) => setTo(e.target.value)}\r\n                        >\r\n                            {\r\n                                regions.map((item, index) => {\r\n                                    return <MenuItem key={index}\r\n                                                     value={item.id}>\r\n                                        {item.translations[i18next.language].name}\r\n                                    </MenuItem>\r\n                                })\r\n                            }\r\n                        </Select>\r\n                    </FormControl>\r\n                </div>\r\n            </div>\r\n\r\n            <div onClick={() => {\r\n                setModalShow({show: true, status: \"add-driver\"});\r\n            }} className=\"add-driver-btn\">\r\n                Narx qo'shish\r\n            </div>\r\n        </div>\r\n\r\n        {loader ? <LoaderAdmin/> : <div className=\"table-wrapper\">\r\n            <table>\r\n                <thead>\r\n                <tr>\r\n                    <th>№</th>\r\n                    <th>Yo'nalish</th>\r\n                    <th>Tarif</th>\r\n                    <th>Qayerdan</th>\r\n                    <th>Qayerga</th>\r\n                    <th>Narx</th>\r\n                    <th>O'chirish</th>\r\n                    <th></th>\r\n                </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                {productList}\r\n                </tbody>\r\n            </table>\r\n        </div>}\r\n\r\n        <div className=\"pagination\">\r\n            {serviceList.length > 50 ? <ReactPaginate\r\n                breakLabel=\"...\"\r\n                previousLabel={<img src=\"./images/admin/prev.png\" alt=\"\"/>}\r\n                nextLabel={<img src=\"./images/admin/next.png\" alt=\"\"/>}\r\n                pageCount={pageCount}\r\n                onPageChange={changePage}\r\n                containerClassName={\"paginationBttns\"}\r\n                previousLinkClassName={\"previousBttn\"}\r\n                nextLinkClassName={\"nextBttn\"}\r\n                disabledCalassName={\"paginationDisabled\"}\r\n                activeClassName={\"paginationActive\"}\r\n            /> : \"\"}\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default Price","\r\nimport MainHome from \"./components/admin/admin home/MainHome\";\r\nimport Admin from \"./components/admin/Admin/Admin\";\r\nimport LoginAdmin from \"./components/login/LoginAdmin\";\r\nimport Drivers from \"./components/admin/drivers/Drivers\";\r\nimport ChatDriver from \"./components/admin/chat/ChatDriver\";\r\nimport Clients from \"./components/admin/clients/Clients\";\r\nimport Colors from \"./components/admin/colors/Colors\";\r\nimport CarBrand from \"./components/admin/car-brend/CarBrand\";\r\nimport Service from \"./components/admin/service/Service\";\r\nimport Balance from \"./components/admin/balance/Balance\";\r\nimport Orders from \"./components/admin/orders/Orders\";\r\nimport CarModel from \"./components/admin/car-model/CarModel\";\r\nimport Payment from \"./components/admin/payment/Payment\";\r\nimport RejectReason from \"./components/admin/reject-reason/RejectReason\";\r\nimport ExtraServices from \"./components/admin/extra-services/ExtraServices\";\r\nimport Price from \"./components/admin/price/Price\";\r\n\r\nexport const publicRoutes = [\r\n    {\r\n        path: \"/\",\r\n        element: <LoginAdmin/>\r\n    }];\r\n\r\nexport const adminRoutes = [\r\n    {\r\n        path: \"/*\",\r\n        element: <Admin/>\r\n    },\r\n];\r\n\r\nexport const adminPageRoutes = [\r\n    {\r\n        path: \"/\",\r\n        element: <MainHome/>\r\n    },\r\n    {\r\n        path: \"/drivers\",\r\n        element: <Drivers/>\r\n    },\r\n    {\r\n        path: \"/clients\",\r\n        element: <Clients/>\r\n    },\r\n    {\r\n        path: \"/chat-drivers\",\r\n        element: <ChatDriver/>\r\n    },\r\n    {\r\n        path: \"/colors\",\r\n        element: <Colors/>\r\n    },\r\n    {\r\n        path: \"/car-brands\",\r\n        element: <CarBrand/>\r\n    },\r\n    {\r\n        path: \"/car-models\",\r\n        element: <CarModel/>\r\n    },\r\n    {\r\n        path: \"/service\",\r\n        element: <Service/>\r\n    },\r\n    {\r\n        path: \"/balance\",\r\n        element: <Balance/>\r\n    },\r\n    {\r\n        path: \"/orders\",\r\n        element: <Orders/>\r\n    },\r\n    {\r\n        path: \"/payment\",\r\n        element: <Payment/>\r\n    },\r\n    {\r\n        path: \"/reject-reason\",\r\n        element: <RejectReason/>\r\n    },\r\n    {\r\n        path: \"/extra-services\",\r\n        element: <ExtraServices/>\r\n    },\r\n\r\n    {\r\n        path: \"/price\",\r\n        element: <Price/>\r\n    },\r\n\r\n];","import \"./not-found.scss\"\r\n\r\nconst NotFound = () => {\r\n    return <div className=\"not-found-wrapper\">\r\n        <div className=\"sloy\">\r\n            <div className=\"text1\">\r\n                <div className=\"error\">\r\n                    error 404\r\n                </div>\r\n                <div className=\"text\">\r\n                    Page not found\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport default NotFound","import React, {useMemo, useState, createContext} from \"react\";\r\nimport {Routes, Route} from \"react-router-dom\";\r\nimport {adminRoutes, publicRoutes} from \"../../rootes\";\r\nimport NotFound from \"../notFound/NotFound\";\r\n\r\nexport const MyContext = createContext();\r\n\r\nfunction App() {\r\n    const [url, setUrl] = useState('https://api.adataxi.uz');\r\n\r\n    const admin = useMemo(() => localStorage.getItem('admin'), []);\r\n\r\n    const routes = useMemo(() => {\r\n        if (admin) return adminRoutes;\r\n        return publicRoutes\r\n    }, [admin]);\r\n\r\n    return (\r\n        <>\r\n            <MyContext.Provider value={{\r\n                url\r\n            }}>\r\n                <Routes>\r\n                    {\r\n                        routes.map((route, index) => (\r\n                            <Route key={index} {...route} />\r\n                        ))\r\n                    }\r\n                    <Route path={'*'} element={<NotFound/>}/>\r\n                </Routes>\r\n\r\n            </MyContext.Provider>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;"],"names":["Loader","_jsx","_Fragment","children","className","MainHome","statisitc","setStatisitc","useState","sockedContext","setSockedContext","locationsList","setLocationsList","center","setCenter","useEffect","localStorage","getItem","websocket","W3CWebSocket","concat","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","lat","lng","axios","get","then","response","data","onmessage","event","_data$message","JSON","parse","message","code","removeItem","window","location","pathname","action","isLoaded","useLoadScript","googleMapsApiKey","options","useMemo","disableDefaultUI","clickableIcons","_jsxs","src","alt","drivers","clients","avilable_drivers","rides","GoogleMap","zoom","mapContainerClassName","MarkerF","icon","url","scaledSize","width","height","Admin","t","useTranslation","useContext","MyContext","navigate","useNavigate","adminMenu","setAdminMenu","language","name","country_code","onClick","img","map","item","index","NavLink","to","_ref","isActive","Dropdown","Toggle","variant","id","loading","i18next","Menu","_ref2","Item","setItem","changeLanguage","confirm","Routes","adminPageRoutes","route","Route","_objectSpread","useOnKeyPress","callback","targetKey","keyPressHandler","key","addEventListener","removeEventListener","LoginAdmin","value","phone","setPhone","password","setPassword","HandleLogin","trim","length","user","username","post","token","catch","error","status","alert","Clear","onChange","e","target","placeholder","type","onKeyUp","console","log","LoaderAdmin","Drivers","modalShow","setModalShow","show","nodeRef","useRef","ref","getSearchText","setGetSearchText","driverPhoto","setDriverPhoto","carInformation","setCarInformation","driversList","setDriversList","driverId","setDriverId","reason","setReason","loader","setLoader","car_serviceId","setCarServiceId","car_categoriesId","setCarCategoriesId","regions","setRegions","luggage","setLuggage","profileImage","setProfileImage","car_images","setCar_images","base_car_images","setBase_Car_images","doc_images","setDocImages","base_doc_images","setBaseDocImages","car_make","setCar_make","car_model","setCar_model","car_colors","setCar_colors","extra_services","setExtra_services","extra_servicesList","setExtra_servicesList","car_categories","setCar_categories","car_service","setCar_service","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","pageNumber","setPageNumber","pagesVisited","confirmFilter","setConfirmFilter","isOpen","setIsOpen","currentImage","setCurrentImage","formik","useFormik","initialValues","first_name","last_name","birth_date","car_number","car_color","seat_count","from_region","to_region","validate","values","errors","onSubmit","sendAllInfo","getDrivers","headers","finally","getCarNames","getInputPhoto","file","files","formData","FormData","role","gender","is_verified","is_confirmed","driver","append","Array","isArray","forEach","resetForm","patch","blockDriver","driver_id","getCarImages","getDocsImages","filteredDrivers","filter","_item$phone","searchText","toString","toLowerCase","replace","phoneNumber","matchesSearch","includes","matchesConfirm","pageCount","Math","ceil","productList","slice","profile_image","user_name","created_at","translations","getInformation","available_services","available_categories","is_block","delDriver","delete","setValues","service","CSSTransition","in","timeout","classNames","unmountOnExit","TextField","handleChange","sx","m","minWidth","size","label","htmlFor","FormControl","InputLabel","Select","labelid","MenuItem","touched","Boolean","helperText","inputProps","min","fullWidth","labelId","multiple","setFieldValue","split","input","OutlinedInput","renderValue","selected","find","i","join","Checkbox","checked","ListItemText","primary","handleSubmit","rate","finished_orders_count","category","handleCheckboxChangeService","serviceId","prevSelected","handleCheckboxChangeCategory","verify","image","setTimeout","handleDeleteImageBase","driver_car_image","preview","prevImages","_","handleDeleteImage","reader","FileReader","onloadend","result","readAsDataURL","addCar_Images","handleDeleteImageDocsBase","driver_document_image","handleDeleteImageDocs","addCar_Images_Docs","Lightbox","mainSrc","onCloseRequest","ReactPaginate","breakLabel","previousLabel","nextLabel","onPageChange","_ref$current","current","scrollIntoView","behavior","containerClassName","previousLinkClassName","nextLinkClassName","disabledCalassName","activeClassName","ChatDriver","bodyRef","chats","setChats","setMessage","activeCHat","setActiveChat","messageText","setMessageText","scrollTop","scrollHeight","Authorization","user_phone","chat","getMessage","title","chat_id","closed","delChat","author","is_admin","time","sendMessage","room","Clients","client_id","Colors","setTranslations","name_uz","name_ru","name_en","colorsList","setColorsList","edit","setEdit","editId","setEditId","getData","addColor","translation_list","uz","ru","en","put","color","handleEdit","delColor","CarBrand","Service","serviceList","setServiceList","start_price","price_per_km","price_per_min","wait_price_per_min","free_wait_time","includedCars","allInfo","editValues","Balance","driver_phone","driver_name","id_number","fund","Orders","links","setLinks","Pages","setPages","activeItem","setActiveItem","orderStatus","setOrderStatus","orderId","setOrderId","reasonList","setReasonList","statistics","setStatistics","information","setInformation","client","setClient","setDriver","setStatus","direction","setDirection","tarif","setTarif","date","setDate","visiblePages","totalPages","push","max","getList","arguments","undefined","page","main","results","pages","distance","end_date","drop_off_locations","address","pick_up_locations","passanger_count","payment_type","pick_up_date","service_type","payer","receiver_phone","sender_phone","rejected_reason","comment_to_driver","changeStatus","order_id","reason_id","total_orders","finished_orders","active_orders","rejected_orders","orders_today","orders_this_month","filterData","car_category","price","previous","cursor","next","CarModel","carBrandId","setCarBrandId","make","brand","Payment","balance_id","amount","payment_operator","updated_at","RejectReason","rejectStatus","setRejectStatus","ExtraServices","isMain","setIsMain","setPrice","is_main","handleCheckboxChange","Price","from","setFrom","setTo","setCategory","setService","cost","Number","filteredList","matchesService","matchesCategory","category_type","matchesFrom","matchesTo","_item$service$transla","_item$service$transla2","_item$category$transl","_item$category$transl2","_item$from_region$tra","_item$from_region$tra2","_item$to_region$trans","_item$to_region$trans2","publicRoutes","path","element","adminRoutes","NotFound","createContext","setUrl","admin","routes","Provider"],"sourceRoot":""}
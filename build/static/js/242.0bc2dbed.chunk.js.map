{"version":3,"file":"static/js/242.0bc2dbed.chunk.js","mappings":"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","sources":["components/admin/admin home/loader/Loader.jsx","components/admin/admin home/MainHome.jsx","components/admin/Admin/Admin.jsx","components/login/useOnKeyPress.js","components/login/LoginAdmin.jsx","components/admin/loader-admin/LoaderAdmin.js","components/admin/drivers/Drivers.jsx","components/admin/chat/ChatDriver.jsx","components/admin/clients/Clients.jsx","components/admin/colors/Colors.jsx","components/admin/car-brend/CarBrand.jsx","components/admin/service/Service.jsx","components/admin/balance/Balance.jsx","components/admin/orders/Orders.jsx","components/admin/car-model/CarModel.jsx","components/admin/payment/Payment.jsx","components/admin/reject-reason/RejectReason.jsx","components/admin/extra-services/ExtraServices.jsx","components/admin/price/Price.jsx","rootes.jsx","components/notFound/NotFound.jsx","components/App/App.js"],"sourcesContent":["import \"./loader.scss\";\r\n\r\nconst Loader = () => {\r\n    return <>\r\n        <div className=\"spinner-container\">\r\n            <div className=\"sloy\">\r\n                <span className=\"loader\"></span>\r\n            </div>\r\n\r\n        </div>\r\n    </>\r\n};\r\n\r\nexport default Loader;","import \"./adminHome.scss\"\r\nimport {useEffect, useMemo, useState} from \"react\"\r\nimport {GoogleMap, useLoadScript, MarkerF, InfoWindow} from \"@react-google-maps/api\";\r\nimport Loader from \"./loader/Loader\";\r\nimport axios from \"axios\";\r\nimport {w3cwebsocket as W3CWebSocket} from \"websocket\";\r\n\r\nconst API_KEY = \"AIzaSyBEN2azIRg6YCHa-tV8yAEUJoHsn__fRBM\";\r\n\r\nconst MainHome = () => {\r\n    const [statisitc, setStatisitc] = useState([]);\r\n    const [sockedContext, setSockedContext] = useState(null);\r\n    const [locationsList, setLocationsList] = useState([]);\r\n    const [center, setCenter] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (!localStorage.getItem(\"token\")) return;\r\n\r\n        const websocket = new W3CWebSocket(`wss://api.adataxi.uz/ws/driver/?token=${localStorage.getItem(\"token\")}`);\r\n        setSockedContext(websocket);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        navigator.geolocation.getCurrentPosition((position) => {\r\n            const {latitude, longitude} = position.coords;\r\n            let locMy = {lat: latitude, lng: longitude};\r\n            setCenter(locMy);\r\n        });\r\n\r\n\r\n        axios.get(`https://api.adataxi.uz/api/v1/site/statistics/`).then((response) => {\r\n            setStatisitc(response.data[0])\r\n        })\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (!sockedContext) return;\r\n        sockedContext.onmessage = (event) => {\r\n            const data = JSON.parse(event.data);\r\n            if (data.message?.code === -35) {\r\n                localStorage.removeItem(\"token\");\r\n                localStorage.removeItem(\"userId\");\r\n                window.location.pathname = \"/\";\r\n                return;\r\n            }\r\n\r\n            if (data.action === \"driver_location\") {\r\n                setLocationsList(data.message)\r\n            }\r\n\r\n            console.log(data)\r\n\r\n        };\r\n\r\n\r\n    }, [sockedContext]);\r\n\r\n    const {isLoaded} = useLoadScript({\r\n        googleMapsApiKey: API_KEY\r\n    });\r\n\r\n    const options = useMemo(() => (\r\n        {\r\n            disableDefaultUI: false,\r\n            clickableIcons: false\r\n        }), []);\r\n\r\n    const [selectedLocation, setSelectedLocation] = useState(null);\r\n\r\n    const onMarkerClick = (location) => {\r\n        setSelectedLocation(location);\r\n    };\r\n\r\n    const onCloseClick = () => {\r\n        setSelectedLocation(null);\r\n    };\r\n\r\n    if (!isLoaded) return <Loader/>;\r\n\r\n    const icon = {url: './images/admin/driver-icon.png', scaledSize: {width: 45, height: 45}};\r\n\r\n    return <div className=\"admin-home-container\">\r\n\r\n        <div className=\"header-side\">\r\n            <div className=\"statistic-card\">\r\n                <div className=\"icon\">\r\n                    <img src=\"./images/admin/driver.png\" alt=\"\"/>\r\n                </div>\r\n                <div className=\"title\">Haydovchilar soni:</div>\r\n                <div className=\"count\">{statisitc.drivers}</div>\r\n            </div>\r\n            <div className=\"statistic-card\">\r\n                <div className=\"icon\">\r\n                    <img src=\"./images/admin/user.png\" alt=\"\"/>\r\n                </div>\r\n                <div className=\"title\">Mijozlar soni:</div>\r\n                <div className=\"count\">{statisitc.clients}</div>\r\n            </div>\r\n            <div className=\"statistic-card\">\r\n                <div className=\"icon\">\r\n                    <img src=\"./images/admin/handshake.png\" alt=\"\"/>\r\n                </div>\r\n                <div className=\"title\">To'liq ro'yxatdan o'tgan haydovchilar:</div>\r\n                <div className=\"count\">{statisitc.avilable_drivers}</div>\r\n            </div>\r\n            <div className=\"statistic-card\">\r\n                <div className=\"icon\">\r\n                    <img src=\"./images/admin/shopping-list.png\" alt=\"\"/>\r\n                </div>\r\n                <div className=\"title\">Yakunlangan soni:</div>\r\n                <div className=\"count\">{statisitc.rides}</div>\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"map\">\r\n            <GoogleMap\r\n                zoom={5}\r\n                center={center}\r\n                options={options}\r\n                mapContainerClassName=\"map-container\">\r\n\r\n                {locationsList.map((item, index) => (\r\n                    <MarkerF\r\n                        key={index}\r\n                        position={{lat: item.latitude, lng: item.longitude}}\r\n                        icon={icon}\r\n                        onClick={() => onMarkerClick(item)}\r\n                    />\r\n                ))}\r\n\r\n                {selectedLocation && (\r\n                    <InfoWindow\r\n                        position={{\r\n                            lat: Number(selectedLocation.latitude),\r\n                            lng: Number(selectedLocation.longitude)\r\n                        }}\r\n                        onCloseClick={onCloseClick}\r\n                    >\r\n                        <div className=\"info-box\">\r\n                            <div className=\"info-text\">\r\n                                <span>Moshina raqam:</span>\r\n                                {selectedLocation.car_number} <br/>\r\n                                <span>Tel raqam:</span>\r\n                                {selectedLocation.phone_number}\r\n                            </div>\r\n                        </div>\r\n                    </InfoWindow>\r\n                )}\r\n\r\n\r\n\r\n            </GoogleMap>\r\n        </div>\r\n    </div>\r\n};\r\n\r\n\r\nexport default MainHome","import {useState, useEffect, useContext} from \"react\";\r\nimport {useNavigate, Route, Routes, NavLink} from \"react-router-dom\";\r\nimport \"./admin.scss\"\r\nimport {adminPageRoutes} from \"../../../rootes\";\r\nimport {MyContext} from \"../../App/App\";\r\nimport i18next from \"i18next\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\n\r\nconst Admin = () => {\r\n    const {t} = useTranslation();\r\n    let value = useContext(MyContext);\r\n    const navigate = useNavigate();\r\n    const [adminMenu, setAdminMenu] = useState(false)\r\n\r\n    const menues = [\r\n        {\r\n            name: \"Dashboard\",\r\n            url: \"/\",\r\n            img: \"../images/admin/dashboard.png\"\r\n        },\r\n        {\r\n            name: \"Haydovchilar\",\r\n            url: \"/drivers\",\r\n            img: \"../images/admin/driver.png\"\r\n        },\r\n        {\r\n            name: \"Mijozlar\",\r\n            url: \"/clients\",\r\n            img: \"../images/admin/user.png\"\r\n        },\r\n        {\r\n            name: \"Buyurtmalar\",\r\n            url: \"/orders\",\r\n            img: \"../images/admin/shopping-list.png\"\r\n        },\r\n        {\r\n            name: \"Moshina brendi\",\r\n            url: \"/car-brands\",\r\n            img: \"../images/admin/car.png\"\r\n        },\r\n        {\r\n            name: \"Moshina modeli\",\r\n            url: \"/car-models\",\r\n            img: \"../images/admin/car.png\"\r\n        },\r\n        {\r\n            name: \"Ranglar\",\r\n            url: \"/colors\",\r\n            img: \"../images/admin/palette.png\"\r\n        },\r\n        {\r\n            name: \"Narxlar\",\r\n            url: \"/price\",\r\n            img: \"../images/admin/price-list.png\"\r\n        },\r\n        {\r\n            name: \"Qo'shimcha xizmatlar\",\r\n            url: \"/extra-services\",\r\n            img: \"../images/admin/technical-service.png\"\r\n        },\r\n        {\r\n            name: \"Bekor qilish sababi\",\r\n            url: \"/reject-reason\",\r\n            img: \"../images/admin/rejected.png\"\r\n        },\r\n\r\n        // {\r\n        //     name: \"Tariflar\",\r\n        //     url: \"/service\",\r\n        //     img: \"../images/admin/list.png\"\r\n        // },\r\n\r\n        {\r\n            name: \"Balans\",\r\n            url: \"/balance\",\r\n            img: \"../images/admin/wallet.png\"\r\n        },\r\n        {\r\n            name: \"To'lov tizimi\",\r\n            url: \"/payment\",\r\n            img: \"../images/admin/credit-card.png\"\r\n        },\r\n    ];\r\n\r\n    useEffect(() => {\r\n        // axios.get(`${value.url}dashboard/home/`, {\r\n        //     headers: {\r\n        //         \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\r\n        //     }\r\n        // }).then((response) => {\r\n        //     setStatisticsCount(response.data)\r\n        //     setCountPrice(response.data.balance)\r\n        // }).catch((error) => {\r\n        //     if (error.response.statusText == \"Unauthorized\") {\r\n        //         window.location.pathname = \"/\";\r\n        //         localStorage.removeItem(\"token\");\r\n        //     }\r\n        // });\r\n    }, []);\r\n\r\n    const language = [\r\n        {\r\n            code: \"uz\",\r\n            name: \"O'zbek tili\",\r\n            country_code: \"uz\",\r\n        },\r\n        {\r\n            code: \"en\",\r\n            name: \"English language\",\r\n            country_code: \"en\",\r\n        },\r\n        {\r\n            code: \"ru\",\r\n            name: \"Pусский язык\",\r\n            country_code: \"ru\",\r\n        },\r\n    ];\r\n    const changeLanguage = (code) => {\r\n        localStorage.setItem(\"lng\", code);\r\n        i18next.changeLanguage(code);\r\n    };\r\n\r\n    const logOut = () => {\r\n        const isConfirmed = window.confirm(\"Rostdan ham profildan chiqmoqchimisz?\");\r\n        if (isConfirmed) {\r\n            window.location.pathname = \"/\";\r\n            localStorage.removeItem(\"admin\")\r\n            localStorage.removeItem(\"token\")\r\n        }\r\n    }\r\n\r\n    return <div className=\"admin-home\">\r\n        <div className={`left-box ${adminMenu ? \"\" : \"hide-left\"}`}>\r\n\r\n            <div className={`logo ${adminMenu ? \"\" : \"hide-logo\"}`}>\r\n                <img onClick={() => navigate('/')} src=\"../images/logo2.png\" alt=\"\"/>\r\n            </div>\r\n\r\n            <div className=\"admin-navbar\">\r\n                {\r\n                    menues.map((item, index) => {\r\n                        return <NavLink to={item.url} key={index}\r\n                                        className={`nav-item ${({isActive}) => isActive ? \"active\" : \"\"}`}>\r\n                            <img src={item.img} alt=\"\"/>\r\n                            {adminMenu ? <span>{item.name}</span> : \"\"}\r\n                        </NavLink>\r\n                    })\r\n                }\r\n            </div>\r\n\r\n            <div onClick={() => setAdminMenu(!adminMenu)} className={`circle ${adminMenu ? \"\" : \"circle-rotate\"}`}>\r\n                <img src=\"../images/admin/previous.png\" alt=\"\"/>\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <div className={`right-box ${adminMenu ? \"\" : \"show-right\"}`}>\r\n            <div className=\"top-box\">\r\n                <div className=\"languge\">\r\n                    <Dropdown>\r\n                        <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                            <img className=\"globe\" src=\"./images/globe-alt.webp\" alt=\"language\" loading=\"lazy\"/>\r\n                            <div className=\"name\">\r\n                                {language.map((item, index) => {\r\n                                    return (\r\n                                        <div key={index}>\r\n                                            {i18next.language === item.code ? item.name : \"\"}\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n\r\n                            {language.map(({code, name, country_code}) => (\r\n                                <Dropdown.Item key={country_code}\r\n                                               onClick={() => changeLanguage(code)}>{name}</Dropdown.Item>\r\n                            ))}\r\n\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </div>\r\n                <div className=\"title\">\r\n                    <img src=\"./images/logo.png\" alt=\"\"/>\r\n                </div>\r\n                <div className=\"icons\">\r\n                    <div onClick={() => logOut()} className=\"exit\"><img src=\"./images/admin/logout.png\" alt=\"\"/></div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"bottom-box\">\r\n                <Routes>\r\n                    {\r\n                        adminPageRoutes.map((route, index) => (\r\n                            <Route key={index} {...route} />\r\n                        ))\r\n                    }\r\n                </Routes>\r\n            </div>\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport default Admin","import {useEffect} from \"react\";\n\nexport const useOnKeyPress = (callback,targetKey) =>{\n    useEffect(()=>{\n        const keyPressHandler = (event)=>{\n            if (event.key === targetKey){\n                callback()\n            }\n        };\n\n        window.addEventListener('keydown',keyPressHandler);\n        return () =>{\n            window.removeEventListener('keydown', keyPressHandler)\n        }\n    },[callback, targetKey]);\n};","import {useContext, useEffect, useState} from \"react\";\r\nimport \"./style.scss\";\r\nimport axios from \"axios\";\r\nimport {MyContext} from \"../App/App\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {useOnKeyPress} from \"./useOnKeyPress\";\r\n\r\nconst LoginAdmin = () => {\r\n    let value = useContext(MyContext);\r\n    const navigate = useNavigate();\r\n    const [phone, setPhone] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const HandleLogin = () => {\r\n        if (phone.trim().length > 0 && password.trim().length > 0) {\r\n            let user = {\r\n                username: phone,\r\n                password\r\n            };\r\n            axios.post(`${value.url}/dashboard/login/`, user).then((response) => {\r\n                localStorage.setItem(\"admin\", response.data.user)\r\n                localStorage.setItem(\"token\", response.data.token);\r\n                window.location.pathname = '/';\r\n                localStorage.setItem(\"lng\", \"uz\")\r\n            }).catch((error) => {\r\n                if (error.response.status === 404) alert(\"Bu foydalanuvchi topilmadi\");\r\n            });\r\n\r\n        } else alert(\"Formani to'ldiring\")\r\n\r\n    };\r\n\r\n    const Clear = () => {\r\n        setPhone(\"\");\r\n        setPassword(\"\");\r\n    };\r\n\r\n    useOnKeyPress(HandleLogin, 'Enter');\r\n    useOnKeyPress(Clear, 'Delete');\r\n\r\n    return <div className=\"login-container\">\r\n\r\n        <div className=\"login-card\">\r\n            <div className=\"logo\">\r\n                <img src=\"./images/logo.png\" alt=\"\"/>\r\n            </div>\r\n            <div className=\"input_box\">\r\n                <input value={phone} onChange={(e) => setPhone(e.target.value)} placeholder=\"Username\" type=\"text\"/>\r\n                <input value={password} onChange={(e) => setPassword(e.target.value)} placeholder=\"Password\"\r\n                       type=\"password\"/>\r\n            </div>\r\n\r\n            <div onClick={HandleLogin} onKeyUp={() => console.log(\"enter\")} className=\"btn-login\">\r\n                Kirish\r\n            </div>\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport default LoginAdmin;","import \"./adminHome.scss\";\n\n\nconst LoaderAdmin = ()=>{\n    return <div className=\"loader-admin\">\n        <div className=\"lds-spinner\">\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n        </div>\n    </div>\n};\n\nexport default LoaderAdmin","import {useEffect, useRef, useState, useContext} from \"react\";\r\nimport {CSSTransition} from \"react-transition-group\";\r\nimport {useFormik} from \"formik\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport i18next from \"i18next\";\r\nimport axios from \"axios\";\r\nimport {\r\n    TextField,\r\n    MenuItem,\r\n    InputLabel,\r\n    FormControl,\r\n    Select,\r\n    OutlinedInput,\r\n    Checkbox,\r\n    ListItemText\r\n} from \"@mui/material\";\r\nimport \"./style.scss\"\r\nimport {MyContext} from \"../../App/App\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport LoaderAdmin from \"../loader-admin/LoaderAdmin\";\r\nimport Lightbox from 'react-image-lightbox';\r\nimport 'react-image-lightbox/style.css';\r\n\r\nconst Drivers = () => {\r\n    const {t} = useTranslation();\r\n    let value = useContext(MyContext);\r\n    const [modalShow, setModalShow] = useState({show: false, status: false});\r\n    const nodeRef = useRef(null);\r\n    const ref = useRef(null);\r\n    const [getSearchText, setGetSearchText] = useState(\"\");\r\n    const [driverPhoto, setDriverPhoto] = useState(null);\r\n    const [carInformation, setCarInformation] = useState([]);\r\n    const [driversList, setDriversList] = useState([]);\r\n    const [driverId, setDriverId] = useState(\"\");\r\n    const [reason, setReason] = useState(\"\");\r\n    const [loader, setLoader] = useState(false);\r\n\r\n    const [car_serviceId, setCarServiceId] = useState([])\r\n    const [car_categoriesId, setCarCategoriesId] = useState([])\r\n\r\n    const [regions, setRegions] = useState([])\r\n\r\n    const [luggage, setLuggage] = useState(\"male\");\r\n    const [profileImage, setProfileImage] = useState(null);\r\n    const [car_images, setCar_images] = useState([]);\r\n    const [base_car_images, setBase_Car_images] = useState([]);\r\n\r\n    const [doc_images, setDocImages] = useState([]);\r\n    const [base_doc_images, setBaseDocImages] = useState([]);\r\n\r\n    const [car_make, setCar_make] = useState([]);\r\n    const [car_model, setCar_model] = useState([]);\r\n    const [car_colors, setCar_colors] = useState([]);\r\n    const [extra_services, setExtra_services] = useState([]);\r\n    const [extra_servicesList, setExtra_servicesList] = useState([]);\r\n\r\n    const [car_categories, setCar_categories] = useState([]);\r\n    const [car_service, setCar_service] = useState([]);\r\n\r\n    const ITEM_HEIGHT = 48;\r\n    const ITEM_PADDING_TOP = 8;\r\n    const MenuProps = {\r\n        PaperProps: {\r\n            style: {\r\n                maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n                width: 250,\r\n            },\r\n        },\r\n    };\r\n\r\n    const worksPage = 100;\r\n    const [pageNumber, setPageNumber] = useState(0);\r\n    const pagesVisited = pageNumber * worksPage;\r\n\r\n    const [confirmFilter, setConfirmFilter] = useState(\"\");\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [currentImage, setCurrentImage] = useState(\"\");\r\n\r\n    const validate = (values) => {\r\n        const errors = {};\r\n\r\n        if (!values.first_name) {\r\n            errors.first_name = \"Required\";\r\n        }\r\n\r\n        if (!values.last_name) {\r\n            errors.last_name = \"Required\";\r\n        }\r\n\r\n        if (!values.phone) {\r\n            errors.phone = \"Required\";\r\n        }\r\n\r\n        if (!values.car_model) {\r\n            errors.car_model = \"Required\";\r\n        }\r\n\r\n        if (!values.car_color) {\r\n            errors.car_color = \"Required\";\r\n        }\r\n\r\n        if (!values.car_make) {\r\n            errors.car_make = \"Required\";\r\n        }\r\n\r\n        if (!values.car_number) {\r\n            errors.car_number = \"Required\";\r\n        }\r\n\r\n        if (!values.extra_services) {\r\n            errors.extra_services = \"Required\";\r\n        }\r\n\r\n        if (!values.seat_count) {\r\n            errors.seat_count = \"Required\";\r\n        }\r\n\r\n        if (!values.from_region) {\r\n            errors.from_region = \"Required\";\r\n        }\r\n\r\n        if (!values.to_region) {\r\n            errors.to_region = \"Required\";\r\n        }\r\n\r\n        return errors;\r\n    };\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            phone: \"\",\r\n            first_name: \"\",\r\n            last_name: \"\",\r\n            birth_date: \"\",\r\n            car_number: \"\",\r\n            car_color: \"\",\r\n            car_make: \"\",\r\n            car_model: \"\",\r\n            extra_services: [],\r\n            seat_count: \"\",\r\n            from_region: \"\",\r\n            to_region: \"\"\r\n        },\r\n        validate,\r\n        onSubmit: (values) => {\r\n            sendAllInfo()\r\n        },\r\n    });\r\n\r\n    useEffect(() => {\r\n        getDrivers()\r\n        axios.get(`${value.url}/dashboard/carcategory/`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setCar_categories(response.data);\r\n        })\r\n\r\n        axios.get(`${value.url}/dashboard/carservice/`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setCar_service(response.data);\r\n        })\r\n\r\n        axios.get(`${value.url}/dashboard/carmake/`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setCar_make(response.data);\r\n        })\r\n\r\n        axios.get(`${value.url}/dashboard/carcolor/`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setCar_colors(response.data);\r\n        })\r\n\r\n        axios.get(`${value.url}/dashboard/extraservices/`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setExtra_servicesList(response.data);\r\n        })\r\n\r\n        axios.get(`${value.url}/dashboard/region/`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setRegions(response.data);\r\n        })\r\n\r\n    }, []);\r\n\r\n    const getDrivers = () => {\r\n        setLoader(true);\r\n        axios.get(`${value.url}/dashboard/driver/`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setDriversList(response.data);\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        }).finally(() => {\r\n            setLoader(false);\r\n        });\r\n    }\r\n\r\n    const getCarNames = (id) => {\r\n        axios.get(`${value.url}/dashboard/carmake/${id}/`, {\r\n            headers: {\r\n                \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\r\n            }\r\n        }).then((response) => {\r\n            setCar_model(response.data);\r\n        })\r\n    }\r\n\r\n    const changePage = ({selected}) => {\r\n        setPageNumber(selected)\r\n\r\n        setTimeout(() => {\r\n            ref.current?.scrollIntoView({behavior: \"smooth\"});\r\n        }, 500);\r\n    };\r\n\r\n    const getInputPhoto = (event) => {\r\n        const file = event.target.files[0];\r\n        setProfileImage(file);\r\n    };\r\n\r\n    const sendAllInfo = () => {\r\n        const formData = new FormData();\r\n        let user = {\r\n            role: \"driver\",\r\n            first_name: formik.values.first_name,\r\n            last_name: formik.values.last_name,\r\n            phone: formik.values.phone,\r\n            gender: luggage,\r\n            is_verified: true,\r\n            is_confirmed: true\r\n        }\r\n        let driver = {\r\n            car_make: formik.values.car_make,\r\n            car_model: formik.values.car_model,\r\n            car_color: formik.values.car_color,\r\n            car_number: formik.values.car_number,\r\n            seat_count: formik.values.seat_count,\r\n            birth_date: formik.values.birth_date,\r\n            extra_services: formik.values.extra_services,\r\n            from_region: formik.values.from_region,\r\n            to_region: formik.values.to_region\r\n        }\r\n\r\n        for (let key in user) {\r\n            formData.append(key, user[key]);\r\n        }\r\n\r\n        for (let key in driver) {\r\n            if (Array.isArray(driver[key])) {\r\n                driver[key].forEach(value => {\r\n                    formData.append(`driver.${key}`, value);\r\n                });\r\n            } else {\r\n                formData.append(`driver.${key}`, driver[key]);\r\n            }\r\n        }\r\n\r\n        if (profileImage) {\r\n            formData.append('profile_image', profileImage);\r\n        }\r\n\r\n        if (!driverId) {\r\n            axios.post(`${value.url}/dashboard/driver/`, formData,\r\n                {\r\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n                }).then((response) => {\r\n                setModalShow({status: \"\", show: false})\r\n                getDrivers()\r\n                formik.resetForm();\r\n            })\r\n        }\r\n\r\n        if (driverId) {\r\n            axios.patch(`${value.url}/dashboard/driver/${driverId}/`, formData,\r\n                {\r\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n                }).then((response) => {\r\n                setModalShow({status: \"\", show: false})\r\n                getDrivers()\r\n                formik.resetForm();\r\n            })\r\n        }\r\n    }\r\n\r\n    const editInfo = (id) => {\r\n\r\n        axios.get(`${value.url}/dashboard/driver/${id}/`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            formik.setValues({\r\n                phone: response.data.user.phone,\r\n                first_name: response.data.user.first_name,\r\n                last_name: response.data.user.last_name,\r\n                birth_date: response.data.birth_date,\r\n                car_number: response.data.car_number,\r\n                car_color: response.data.car_color && response.data.car_color.id,\r\n                car_make: response.data.car_make && response.data.car_make.id,\r\n                car_model: response.data.car_model && response.data.car_model.id,\r\n                extra_services: response.data.extra_services.length > 0 ? response.data.extra_services.map(service => service.id) : [],\r\n                seat_count: response.data.seat_count,\r\n                from_region: response.data.from_region && response.data.from_region.id,\r\n                to_region: response.data.to_region && response.data.to_region.id,\r\n            });\r\n\r\n            setLuggage(response.data.user.gender)\r\n            if (response.data.car_make) {\r\n                getCarNames(response.data.car_make.id)\r\n            }\r\n        })\r\n        setDriverId(id)\r\n    }\r\n\r\n    const blockDriver = (status) => {\r\n        if (status === \"block\" && reason.trim().length > 0) {\r\n            axios.post(`${value.url}/dashboard/driver/block-driver/`,\r\n                {driver_id: driverId, reason}, {\r\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n                }).then((response) => {\r\n                setModalShow({status: \"\", show: false})\r\n                getDrivers()\r\n                setReason(\"\")\r\n            })\r\n        } else alert(\"Bloklash sababini kiriting!\")\r\n\r\n        if (status === \"unblock\") {\r\n            axios.post(`${value.url}/dashboard/driver/unblock-driver/`,\r\n                {driver_id: driverId}, {\r\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n                }).then((response) => {\r\n                setModalShow({status: \"\", show: false})\r\n                getDrivers()\r\n            })\r\n        }\r\n    }\r\n\r\n    const handleCheckboxChangeService = (serviceId) => {\r\n        setCarServiceId((prevSelected) =>\r\n            prevSelected.includes(serviceId)\r\n                ? prevSelected.filter((id) => id !== serviceId)\r\n                : [...prevSelected, serviceId]\r\n        );\r\n    };\r\n\r\n    const handleCheckboxChangeCategory = (serviceId) => {\r\n        setCarCategoriesId((prevSelected) =>\r\n            prevSelected.includes(serviceId)\r\n                ? prevSelected.filter((id) => id !== serviceId)\r\n                : [...prevSelected, serviceId]\r\n        );\r\n    };\r\n\r\n    const verify = () => {\r\n        let driver = {\r\n            driver_id: driverId,\r\n            available_services: car_serviceId,\r\n            available_categories: car_categoriesId\r\n        }\r\n\r\n        axios.post(`${value.url}/dashboard/driver/confirm-driver/`,\r\n            driver, {\r\n                headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n            }).then((response) => {\r\n            getDrivers()\r\n            setModalShow({status: \"\", show: false})\r\n        })\r\n\r\n    }\r\n\r\n    const getInformation = (id) => {\r\n        setModalShow({show: true, status: \"car-information\"});\r\n\r\n        axios.get(`${value.url}/dashboard/driver/${id}/`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setCarInformation(response.data);\r\n            console.log(response.data)\r\n        })\r\n    }\r\n\r\n    const handleAddImage = (e) => {\r\n        const file = e.target.files[0];\r\n        if (file) {\r\n            const reader = new FileReader();\r\n            reader.onloadend = () => {\r\n                setCar_images((prevImages) => [\r\n                    ...prevImages,\r\n                    {\r\n                        preview: reader.result,\r\n                        file: file\r\n                    }\r\n                ]);\r\n            };\r\n            reader.readAsDataURL(file);\r\n        }\r\n        e.target.value = null;\r\n    };\r\n\r\n    const getCarImages = (id) => {\r\n        setModalShow({show: true, status: \"car-photos\"});\r\n        setDriverId(id)\r\n        axios.post(`${value.url}/dashboard/driver/car-images/`, {driver_id: id}, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setBase_Car_images(response.data)\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    const handleDeleteImageBase = (id) => {\r\n        axios.post(`${value.url}/dashboard/driver/delete-car-image/`, {driver_car_image: id}, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            getCarImages(driverId)\r\n        })\r\n    };\r\n\r\n    const handleDeleteImage = (index) => {\r\n        setCar_images((prevImages) => prevImages.filter((_, i) => i !== index));\r\n    };\r\n\r\n    const addCar_Images = () => {\r\n        const formData = new FormData();\r\n        formData.append('driver', driverId);\r\n\r\n        car_images.forEach((image, index) => {\r\n            formData.append('car_images', image.file);\r\n        });\r\n\r\n        axios.post(`${value.url}/dashboard/driver/update-image/`, formData, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setModalShow({status: \"\", show: false})\r\n            setCar_images([])\r\n        })\r\n    }\r\n\r\n    const handleAddImageDoc = (e) => {\r\n        const file = e.target.files[0];\r\n        if (file) {\r\n            const reader = new FileReader();\r\n            reader.onloadend = () => {\r\n                setDocImages((prevImages) => [\r\n                    ...prevImages,\r\n                    {\r\n                        preview: reader.result,\r\n                        file: file\r\n                    }\r\n                ]);\r\n            };\r\n            reader.readAsDataURL(file);\r\n        }\r\n        e.target.value = null;\r\n    };\r\n\r\n    const getDocsImages = (id) => {\r\n        setModalShow({show: true, status: \"car-docs\"});\r\n        setDriverId(id)\r\n        axios.post(`${value.url}/dashboard/driver/document-images/`, {driver_id: id}, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setBaseDocImages(response.data)\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    const handleDeleteImageDocsBase = (id) => {\r\n        axios.post(`${value.url}/dashboard/driver/delete-document-image/`, {driver_document_image: id}, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            getDocsImages(driverId)\r\n        })\r\n    };\r\n\r\n    const handleDeleteImageDocs = (index) => {\r\n        setDocImages((prevImages) => prevImages.filter((_, i) => i !== index));\r\n    };\r\n\r\n    const addCar_Images_Docs = () => {\r\n        const formData = new FormData();\r\n        formData.append('driver', driverId);\r\n\r\n        doc_images.forEach((image, index) => {\r\n            formData.append('document_images', image.file);\r\n        });\r\n\r\n        axios.post(`${value.url}/dashboard/driver/update-image/`, formData, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setModalShow({status: \"\", show: false})\r\n            setCar_images([])\r\n            setDocImages([])\r\n        })\r\n    }\r\n\r\n    const delDriver = (id) => {\r\n        setLoader(true)\r\n        const isConfirmed = window.confirm(\"Rostdan ham ushbu haydovchini o‘chirmoqchimisiz?\");\r\n        if (isConfirmed) {\r\n            axios.delete(`${value.url}/dashboard/driver/${id}/`, {\r\n                headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n            }).then((response) => {\r\n                getDrivers()\r\n            }).catch((error) => {\r\n                console.log(error);\r\n            }).finally(() => {\r\n                setLoader(false);\r\n            });\r\n        } else {\r\n            setLoader(false);\r\n        }\r\n    };\r\n\r\n    const filteredDrivers = driversList.filter((item) => {\r\n        const searchText = getSearchText.toString().toLowerCase().replace(/\\s+/g, '').replace(/\\+/g, '');\r\n        const phoneNumber = item.phone?.toString().toLowerCase().replace(/\\s+/g, '').replace(/\\+/g, '');\r\n\r\n        const matchesSearch = searchText === \"\" || phoneNumber.includes(searchText);\r\n        const matchesConfirm = confirmFilter === \"\"\r\n            ? true\r\n            : item.is_confirmed === (confirmFilter === \"true\");\r\n        return matchesSearch && matchesConfirm;\r\n    });\r\n\r\n    const pageCount = Math.ceil(filteredDrivers.length / worksPage);\r\n\r\n    const productList = filteredDrivers.slice(pagesVisited, pagesVisited + worksPage).map((item, index) => {\r\n        return <tr key={index}>\r\n            <td>{index + 1}</td>\r\n            <td className=\"driver-wrapper\">\r\n                <div className=\"icon-driver\">\r\n                    <img onClick={() => {\r\n                        setModalShow({show: true, status: \"driver-photo\"});\r\n                        setDriverPhoto(item.profile_image)\r\n                    }} src={item.profile_image} alt=\"\"/>\r\n                </div>\r\n                <div className=\"text-driver\">\r\n                    <div className=\"name\">\r\n                        {item.user_name && item.user_name}\r\n                    </div>\r\n                    <div className=\"phone\">\r\n                        {item.phone && item.phone}\r\n                    </div>\r\n                </div>\r\n            </td>\r\n            <td>\r\n                {item.created_at}\r\n            </td>\r\n            <td>\r\n                {item.from_region && item.from_region.translations[i18next.language].name}\r\n                --\r\n                {item.to_region && item.to_region.translations[i18next.language].name}\r\n            </td>\r\n            <td>\r\n                {item.car_color && item.car_color.translations[i18next.language].name}&nbsp;\r\n                {item.car_make && item.car_make.translations[i18next.language].name} &nbsp;\r\n                {item.car_model && item.car_model.translations[i18next.language].name}\r\n            </td>\r\n            <td>\r\n                {item.car_number && item.car_number}\r\n            </td>\r\n            <td>\r\n                <div className=\"icon\">\r\n                    <img onClick={() => getInformation(item.id)} src=\"./images/admin/sport-car.png\" alt=\"\"/>\r\n                </div>\r\n            </td>\r\n            <td>\r\n                <div className=\"icon\">\r\n                    <img onClick={() => getCarImages(item.id)} src=\"./images/admin/car-photo.png\" alt=\"\"/>\r\n                </div>\r\n            </td>\r\n            <td>\r\n                <div className=\"icon\">\r\n                    <img onClick={() => getDocsImages(item.id)} src=\"./images/admin/document.png\" alt=\"\"/>\r\n                </div>\r\n            </td>\r\n            <td>\r\n                <div className={item.is_confirmed ? \"icon-check\" : \"icon-check disablet\"}>\r\n                    <img onClick={() => {\r\n                        setModalShow({show: true, status: \"driver-service\"});\r\n                        setDriverId(item.id)\r\n                        setCarServiceId(item.available_services)\r\n                        setCarCategoriesId(item.available_categories)\r\n                    }} src=\"./images/admin/check.png\" alt=\"\"/>\r\n                </div>\r\n            </td>\r\n            <td>\r\n                <div className={item.is_block ? \"icon-check\" : \"icon-check disablet\"}>\r\n                    <img onClick={() => {\r\n                        setModalShow({show: true, status: \"blocked\"});\r\n                        if (item.is_block) {\r\n                            setReason(item.reason)\r\n                        }\r\n                        setDriverId(item.id)\r\n                    }} src=\"./images/admin/block.png\" alt=\"block\"/>\r\n\r\n                    {item.reason && item.is_block && <div className=\"reason-block\">\r\n                        <img src=\"./images/admin/warning.png\" alt=\"\"/>\r\n                        <div className=\"text\">\r\n                            {item.reason}\r\n                        </div>\r\n                    </div>}\r\n\r\n                </div>\r\n            </td>\r\n            <td>\r\n                <div className=\"icon\">\r\n                    <img onClick={() => delDriver(item.id)} src=\"./images/admin/delete.png\" alt=\"\"/>\r\n                </div>\r\n            </td>\r\n            <td>\r\n            </td>\r\n            <div className=\"edit-icon\">\r\n                <img onClick={() => {\r\n                    setModalShow({show: true, status: \"edit-driver\"});\r\n                    editInfo(item.id)\r\n                }} src=\"./images/admin/edit-tools.png\" alt=\"\"/>\r\n            </div>\r\n        </tr>\r\n    });\r\n\r\n    return <div className=\"drivers-container\">\r\n        <CSSTransition\r\n            in={modalShow.show}\r\n            nodeRef={nodeRef}\r\n            timeout={300}\r\n            classNames=\"alert\"\r\n            unmountOnExit\r\n        >\r\n            <div className=\"modal-sloy\">\r\n                <div ref={nodeRef} className=\"modal-card\">\r\n\r\n                    {modalShow.status === \"add-driver\" && (\r\n                        <div className=\"add-driver\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img\r\n                                    onClick={() => {\r\n                                        setModalShow({status: \"\", show: false})\r\n                                        formik.resetForm();\r\n                                    }}\r\n                                    src=\"./images/admin/x.png\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"title\">Haydovchi qo'shish</div>\r\n\r\n                            <div className=\"title-form\">Haydovchi ma'lumotlari:</div>\r\n\r\n                            <div className=\"form-container\">\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides-file\">\r\n                                        <input onChange={getInputPhoto} type=\"file\"/>\r\n                                        <div className={`sloy-image ${profileImage ? \"active\" : \"\"}`}>\r\n                                            Profil rasmi\r\n                                            <img src=\"./images/admin/image.png\" alt=\"\"/>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.first_name === \"Required\"}\r\n                                            value={formik.values.first_name}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"first_name\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Ism\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.last_name === \"Required\"}\r\n                                            value={formik.values.last_name}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"last_name\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Familiya\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.phone === \"Required\"}\r\n                                            value={formik.values.phone}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"phone\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Telefon raqam\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                    <div className=\"select-sides-time\">\r\n                                        <label htmlFor=\"\">Tug'ilgan sana:</label>\r\n                                        <input\r\n                                            className={`working_time ${formik.errors.birth_date === \"Required\" ? \"working_time_required\" : \"\"}`}\r\n                                            name=\"birth_date\" onChange={formik.handleChange}\r\n                                            value={formik.values.birth_date}\r\n                                            type=\"date\"/>\r\n                                    </div>\r\n                                    <div className=\"select-sides\">\r\n                                        <div className=\"title-on\">\r\n                                            Jinsi:\r\n                                        </div>\r\n                                        <div className=\"on-of\">\r\n                                            <div onClick={() => setLuggage(\"male\")}\r\n                                                 className={`of ${luggage === \"male\" ? \"on\" : \"\"}`}>\r\n                                                Erkak\r\n                                            </div>\r\n                                            <div onClick={() => setLuggage(\"female\")}\r\n                                                 className={`of ${luggage === \"female\" ? \"on\" : \"\"}`}>\r\n                                                Ayol\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"title-form\">Avtomobil ma'lumotlari:</div>\r\n\r\n                            <div className=\"form-container\">\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Avtomobil modeli</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.car_make === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.car_make}\r\n                                                name=\"car_make\"\r\n                                                label=\"Avtomobil modeli\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {\r\n                                                    car_make.map((item, index) => {\r\n                                                        return <MenuItem onClick={() => getCarNames(item.id)}\r\n                                                                         key={index}\r\n                                                                         value={item.id}>\r\n                                                            {item.translations[i18next.language].name}\r\n                                                        </MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Avtomobil nomi</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.car_model === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.car_model}\r\n                                                name=\"car_model\"\r\n                                                label=\"Avtomobil nomi\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {\r\n                                                    car_model.map((item, index) => {\r\n                                                        return <MenuItem key={index}\r\n                                                                         value={item.id}>\r\n                                                            {item.translations[i18next.language].name}\r\n                                                        </MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.car_number === \"Required\"}\r\n                                            value={formik.values.car_number}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"car_number\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Avtomobil raqami\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"select-box \">\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Avtomobil rangi</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.car_color === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                name=\"car_color\"\r\n                                                label=\"Avtomobil rangi\"\r\n                                                value={formik.values.car_color}\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {\r\n                                                    car_colors.map((item, index) => {\r\n                                                        return <MenuItem key={index}\r\n                                                                         value={item.id}>\r\n                                                            {item.translations[i18next.language].name}\r\n                                                        </MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <TextField\r\n                                                id=\"seat_count\"\r\n                                                name=\"seat_count\"\r\n                                                label=\"O‘rindiqlar soni\"\r\n                                                type=\"number\"\r\n                                                value={formik.values.seat_count}\r\n                                                onChange={formik.handleChange}\r\n                                                error={formik.touched.seat_count && Boolean(formik.errors.seat_count)}\r\n                                                helperText={formik.touched.seat_count && formik.errors.seat_count}\r\n                                                inputProps={{min: 1}}\r\n                                                fullWidth\r\n                                                size=\"small\"\r\n                                            />\r\n                                        </FormControl>\r\n                                    </div>\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, width: \"100%\"}} className=\"selectMui\" size=\"small\">\r\n                                            <InputLabel id=\"demo-multiple-checkbox-label\">Xizmatlar</InputLabel>\r\n\r\n                                            <Select\r\n                                                error={formik.errors.extra_services === \"Required\"}\r\n                                                name=\"extra_services\"\r\n                                                labelId=\"demo-multiple-checkbox-label\"\r\n                                                id=\"demo-multiple-checkbox\"\r\n                                                multiple\r\n                                                value={formik.values.extra_services}\r\n                                                onChange={(event) => {\r\n                                                    const {value} = event.target;\r\n                                                    formik.setFieldValue(\r\n                                                        \"extra_services\",\r\n                                                        typeof value === 'string' ? value.split(',') : value\r\n                                                    );\r\n                                                }}\r\n                                                input={<OutlinedInput label=\"Xizmatlar\"/>}\r\n                                                renderValue={(selected) =>\r\n                                                    selected\r\n                                                        .map((id) => {\r\n                                                            const item = extra_servicesList.find(i => i.id === id);\r\n                                                            return item ? item.translations[i18next.language].name : '';\r\n                                                        })\r\n                                                        .join(', ')\r\n                                                }\r\n                                                MenuProps={MenuProps}\r\n                                            >\r\n                                                {extra_servicesList.map((item) => (\r\n                                                    <MenuItem key={item.id} value={item.id}>\r\n                                                        <Checkbox\r\n                                                            checked={formik.values.extra_services.includes(item.id)}\r\n                                                        />\r\n                                                        <ListItemText\r\n                                                            primary={item.translations[i18next.language].name}\r\n                                                        />\r\n                                                    </MenuItem>\r\n                                                ))}\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"title-form\">Asosan qaysi yo'nalishda harakat qilasiz:</div>\r\n                            <div className=\"form-container\">\r\n                                <div className=\"select-box start\">\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Qayerdan</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.from_region === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.from_region}\r\n                                                name=\"from_region\"\r\n                                                label=\"Qayerdan\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {\r\n                                                    regions.map((item, index) => {\r\n                                                        return <MenuItem key={index}\r\n                                                                         value={item.id}>\r\n                                                            {item.translations[i18next.language].name}\r\n                                                        </MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Qayerga</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.to_region === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.to_region}\r\n                                                name=\"to_region\"\r\n                                                label=\"Qayerga\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {\r\n                                                    regions.map((item, index) => {\r\n                                                        return <MenuItem key={index}\r\n                                                                         value={item.id}>\r\n                                                            {item.translations[i18next.language].name}\r\n                                                        </MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div onClick={() => {\r\n                                formik.handleSubmit()\r\n                            }} className=\"add-btn\">\r\n                                <img src=\"./images/admin/add.png\" alt=\"\"/>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalShow.status === \"driver-photo\" && (\r\n                        <div className=\"driver-photo\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img\r\n                                    onClick={() => setModalShow({status: \"\", show: false})}\r\n                                    src=\"./images/admin/x.png\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"photo\">\r\n                                <img src={driverPhoto} alt=\"\"/>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalShow.status === \"car-information\" && (\r\n                        <div className=\"car-information\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img onClick={() => setModalShow({status: \"\", show: false})}\r\n                                     src=\"./images/admin/x.png\"\r\n                                     alt=\"\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"title\">\r\n                                Avtomobil ma'lumotlari\r\n                            </div>\r\n                            {carInformation &&\r\n                                <div className=\"information\">\r\n                                    <div className=\"info\">\r\n                                        <div className=\"title\">Tugilgan sanasi:</div>\r\n                                        <div\r\n                                            className=\"text\">{carInformation.birth_date && carInformation.birth_date}</div>\r\n                                    </div>\r\n                                    <div className=\"info\">\r\n                                        <div className=\"title\">Jinsi:</div>\r\n                                        <div\r\n                                            className=\"text\">\r\n                                            {carInformation.user && carInformation.user.gender === \"male\" && \"Erkak\"}\r\n                                            {carInformation.user && carInformation.user.gender === \"female\" && \"Ayol\"}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"info\">\r\n                                        <div className=\"title\">Reyting:</div>\r\n                                        <div\r\n                                            className=\"text\">{carInformation.user && carInformation.user.rate}</div>\r\n                                    </div>\r\n                                    <div className=\"info\">\r\n                                        <div className=\"title\">O'rindiqlar soni:</div>\r\n                                        <div\r\n                                            className=\"text\">{carInformation.seat_count && carInformation.seat_count}</div>\r\n                                    </div>\r\n                                    <div className=\"info\">\r\n                                        <div className=\"title\">Yakunlagan buyurtmalar:</div>\r\n                                        <div\r\n                                            className=\"text\">{carInformation.user && carInformation.user.finished_orders_count}</div>\r\n                                    </div>\r\n                                    <div className=\"info\">\r\n                                        <div className=\"title\">Qo'shimcha xizmatlar:</div>\r\n                                        <div className=\"text\">\r\n                                            {carInformation.extra_services && carInformation.extra_services.map((item, index) => {\r\n                                                return <span key={index}>\r\n                                                    {item.translations[i18next.language].name},\r\n                                                </span>\r\n                                            })}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>}\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalShow.status === \"blocked\" && (\r\n                        <div className=\"blocked\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img onClick={() => {\r\n                                    setModalShow({status: \"\", show: false})\r\n                                    setReason(\"\")\r\n                                }}\r\n                                     src=\"./images/admin/x.png\"\r\n                                     alt=\"\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"title\">\r\n                                Haydovchini bloklash\r\n                            </div>\r\n\r\n                            <div className=\"reason-text\">\r\n                                <textarea value={reason} onChange={(e) => setReason(e.target.value)}\r\n                                          placeholder=\"Blok qilish sababini kiriting...\" name=\"reason\"\r\n                                          id=\"reason\"></textarea>\r\n\r\n                                <div className=\"buttons\">\r\n                                    <div onClick={() => {\r\n                                        blockDriver(\"unblock\")\r\n                                    }}\r\n                                         className=\"cancel\">Bekor qilish\r\n                                    </div>\r\n\r\n                                    <div onClick={() => {\r\n                                        blockDriver(\"block\")\r\n                                    }} className=\"success\">Bloklash\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalShow.status === \"edit-driver\" && (\r\n                        <div className=\"edit-driver\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img\r\n                                    onClick={() => {\r\n                                        setModalShow({status: \"\", show: false})\r\n                                        formik.resetForm();\r\n                                    }}\r\n                                    src=\"./images/admin/x.png\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"title\">Haydovchi malumotlarini tahrirlash</div>\r\n\r\n                            <div className=\"title-form\">Haydovchi ma'lumotlari:</div>\r\n\r\n                            <div className=\"form-container\">\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides-file\">\r\n                                        <input onChange={getInputPhoto} type=\"file\"/>\r\n                                        <div className={`sloy-image ${profileImage ? \"active\" : \"\"}`}>\r\n                                            Profil rasmi\r\n                                            <img src=\"./images/admin/image.png\" alt=\"\"/>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.first_name === \"Required\"}\r\n                                            value={formik.values.first_name}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"first_name\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Ism\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.last_name === \"Required\"}\r\n                                            value={formik.values.last_name}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"last_name\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Familiya\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.phone === \"Required\"}\r\n                                            value={formik.values.phone}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"phone\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Telefon raqam\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                    <div className=\"select-sides-time\">\r\n                                        <label htmlFor=\"\">Tug'ilgan sana:</label>\r\n                                        <input\r\n                                            className={`working_time ${formik.errors.birth_date === \"Required\" ? \"working_time_required\" : \"\"}`}\r\n                                            name=\"birth_date\" onChange={formik.handleChange}\r\n                                            value={formik.values.birth_date}\r\n                                            type=\"date\"/>\r\n                                    </div>\r\n                                    <div className=\"select-sides\">\r\n                                        <div className=\"title-on\">\r\n                                            Jinsi:\r\n                                        </div>\r\n                                        <div className=\"on-of\">\r\n                                            <div onClick={() => setLuggage(\"male\")}\r\n                                                 className={`of ${luggage === \"male\" ? \"on\" : \"\"}`}>\r\n                                                Erkak\r\n                                            </div>\r\n                                            <div onClick={() => setLuggage(\"female\")}\r\n                                                 className={`of ${luggage === \"female\" ? \"on\" : \"\"}`}>\r\n                                                Ayol\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"title-form\">Avtomobil ma'lumotlari:</div>\r\n\r\n                            <div className=\"form-container\">\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Avtomobil modeli</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.car_make === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.car_make}\r\n                                                name=\"car_make\"\r\n                                                label=\"Avtomobil modeli\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {\r\n                                                    car_make.map((item, index) => {\r\n                                                        return <MenuItem onClick={() => getCarNames(item.id)}\r\n                                                                         key={index}\r\n                                                                         value={item.id}>\r\n                                                            {item.translations[i18next.language].name}\r\n                                                        </MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Avtomobil nomi</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.car_model === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.car_model}\r\n                                                name=\"car_model\"\r\n                                                label=\"Avtomobil nomi\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {\r\n                                                    car_model.map((item, index) => {\r\n                                                        return <MenuItem key={index}\r\n                                                                         value={item.id}>\r\n                                                            {item.translations[i18next.language].name}\r\n                                                        </MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.car_number === \"Required\"}\r\n                                            value={formik.values.car_number}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"car_number\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Avtomobil raqami\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"select-box \">\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Avtomobil rangi</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.car_color === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                name=\"car_color\"\r\n                                                label=\"Avtomobil rangi\"\r\n                                                value={formik.values.car_color}\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {\r\n                                                    car_colors.map((item, index) => {\r\n                                                        return <MenuItem key={index}\r\n                                                                         value={item.id}>\r\n                                                            {item.translations[i18next.language].name}\r\n                                                        </MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <TextField\r\n                                                id=\"seat_count\"\r\n                                                name=\"seat_count\"\r\n                                                label=\"O‘rindiqlar soni\"\r\n                                                type=\"number\"\r\n                                                value={formik.values.seat_count}\r\n                                                onChange={formik.handleChange}\r\n                                                error={formik.touched.seat_count && Boolean(formik.errors.seat_count)}\r\n                                                helperText={formik.touched.seat_count && formik.errors.seat_count}\r\n                                                inputProps={{min: 1}}\r\n                                                fullWidth\r\n                                                size=\"small\"\r\n                                            />\r\n                                        </FormControl>\r\n                                    </div>\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, width: \"100%\"}} className=\"selectMui\" size=\"small\">\r\n                                            <InputLabel id=\"demo-multiple-checkbox-label\">Xizmatlar</InputLabel>\r\n\r\n                                            <Select\r\n                                                error={formik.errors.extra_services === \"Required\"}\r\n                                                name=\"extra_services\"\r\n                                                labelId=\"demo-multiple-checkbox-label\"\r\n                                                id=\"demo-multiple-checkbox\"\r\n                                                multiple\r\n                                                value={formik.values.extra_services}\r\n                                                onChange={(event) => {\r\n                                                    const {value} = event.target;\r\n                                                    formik.setFieldValue(\r\n                                                        \"extra_services\",\r\n                                                        typeof value === 'string' ? value.split(',') : value\r\n                                                    );\r\n                                                }}\r\n                                                input={<OutlinedInput label=\"Xizmatlar\"/>}\r\n                                                renderValue={(selected) =>\r\n                                                    selected\r\n                                                        .map((id) => {\r\n                                                            const item = extra_servicesList.find(i => i.id === id);\r\n                                                            return item ? item.translations[i18next.language].name : '';\r\n                                                        })\r\n                                                        .join(', ')\r\n                                                }\r\n                                                MenuProps={MenuProps}\r\n                                            >\r\n                                                {extra_servicesList.map((item) => (\r\n                                                    <MenuItem key={item.id} value={item.id}>\r\n                                                        <Checkbox\r\n                                                            checked={formik.values.extra_services.includes(item.id)}\r\n                                                        />\r\n                                                        <ListItemText\r\n                                                            primary={item.translations[i18next.language].name}\r\n                                                        />\r\n                                                    </MenuItem>\r\n                                                ))}\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"title-form\">Asosan qaysi yo'nalishda harakat qilasiz:</div>\r\n                            <div className=\"form-container\">\r\n                                <div className=\"select-box start\">\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Qayerdan</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.from_region === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.from_region}\r\n                                                name=\"from_region\"\r\n                                                label=\"Qayerdan\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {\r\n                                                    regions.map((item, index) => {\r\n                                                        return <MenuItem key={index}\r\n                                                                         value={item.id}>\r\n                                                            {item.translations[i18next.language].name}\r\n                                                        </MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Qayerga</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.to_region === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.to_region}\r\n                                                name=\"to_region\"\r\n                                                label=\"Qayerga\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {\r\n                                                    regions.map((item, index) => {\r\n                                                        return <MenuItem key={index}\r\n                                                                         value={item.id}>\r\n                                                            {item.translations[i18next.language].name}\r\n                                                        </MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div onClick={() => {\r\n                                formik.handleSubmit()\r\n                            }} className=\"add-btn\">\r\n                                <img src=\"./images/admin/checkmark.png\" alt=\"\"/>\r\n                            </div>\r\n\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalShow.status === \"driver-service\" && (\r\n                        <div className=\"driver-service\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img onClick={() => setModalShow({status: \"\", show: false})}\r\n                                     src=\"./images/admin/x.png\"\r\n                                     alt=\"\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"bottom-side\">\r\n                                <div className=\"left-side\">\r\n                                    <div className=\"title\">\r\n                                        Yo'nalish\r\n                                    </div>\r\n                                    <div className=\"form-wrapper\">\r\n                                        {\r\n                                            car_service.map((category, index) => (\r\n                                                <label key={index}>\r\n                                                    <input onChange={() => handleCheckboxChangeService(category.id)}\r\n                                                           checked={car_serviceId.includes(category.id)} type=\"checkbox\"\r\n                                                           name=\"agree\"/>\r\n                                                    {category.translations[i18next.language].name}\r\n                                                </label>\r\n                                            ))\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"right-side\">\r\n                                    <div className=\"title\">\r\n                                        Tariflar\r\n                                    </div>\r\n                                    <div className=\"form-wrapper\">\r\n                                        {\r\n                                            car_categories.map((category, index) => (\r\n                                                <label key={index}>\r\n                                                    <input onChange={() => handleCheckboxChangeCategory(category.id)}\r\n                                                           checked={car_categoriesId.includes(category.id)}\r\n                                                           type=\"checkbox\"\r\n                                                           name=\"agree\"/>\r\n                                                    {category.translations[i18next.language].name}\r\n                                                </label>\r\n                                            ))\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div onClick={verify} className=\"btn-success\">\r\n                                Tasdiqlash\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalShow.status === \"car-photos\" && (\r\n                        <div className=\"car-photos\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img onClick={() => setModalShow({status: \"\", show: false})}\r\n                                     src=\"./images/admin/x.png\"\r\n                                     alt=\"\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"title\">\r\n                                Avtomobil rasmlari\r\n                            </div>\r\n                            <div className=\"form-wrapper\">\r\n                                {base_car_images.map((image, index) => (\r\n                                    <div key={index} className=\"photo\">\r\n                                        <img onClick={() => {\r\n                                            setCurrentImage(image.image);\r\n                                            setTimeout(() => setIsOpen(true), 100);\r\n                                        }} src={image.image} alt={`car-${index}`}/>\r\n                                        <div className=\"del-icon\" onClick={() => handleDeleteImageBase(image.id)}>\r\n                                            <img src=\"./images/admin/delete.png\" alt=\"delete\"/>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                                {car_images.map((image, index) => (\r\n                                    <div key={index} className=\"photo\">\r\n                                        <img onClick={() => {\r\n                                            setCurrentImage(image.preview);\r\n                                            setTimeout(() => setIsOpen(true), 100);\r\n                                        }} src={image.preview} alt={`car-${index}`}/>\r\n                                        <div className=\"del-icon\" onClick={() => handleDeleteImage(index)}>\r\n                                            <img src=\"./images/admin/delete.png\" alt=\"delete\"/>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                                <div className=\"add-icon\">\r\n                                    <input onChange={handleAddImage} type=\"file\"/>\r\n                                    <img src=\"./images/admin/image.png\" alt=\"\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div onClick={addCar_Images} className=\"btn-success\">\r\n                                Tasdiqlash\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalShow.status === \"car-docs\" && (\r\n                        <div className=\"car-docs\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img onClick={() => setModalShow({status: \"\", show: false})}\r\n                                     src=\"./images/admin/x.png\"\r\n                                     alt=\"\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"title\">\r\n                                Xujjatlar rasmlari\r\n                            </div>\r\n                            <div className=\"form-wrapper\">\r\n                                {base_doc_images.map((image, index) => (\r\n                                    <div key={index} className=\"photo\">\r\n                                        <img onClick={() => {\r\n                                            setCurrentImage(image.image);\r\n                                            setTimeout(() => setIsOpen(true), 100);\r\n                                        }} src={image.image} alt={`car-${index}`}/>\r\n                                        <div className=\"del-icon\" onClick={() => handleDeleteImageDocsBase(image.id)}>\r\n                                            <img src=\"./images/admin/delete.png\" alt=\"delete\"/>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                                {doc_images.map((image, index) => (\r\n                                    <div key={index} className=\"photo\">\r\n                                        <img onClick={() => {\r\n                                            setCurrentImage(image.preview);\r\n                                            setTimeout(() => setIsOpen(true), 100);\r\n                                        }} src={image.preview} alt={`car-${index}`}/>\r\n                                        <div className=\"del-icon\" onClick={() => handleDeleteImageDocs(index)}>\r\n                                            <img src=\"./images/admin/delete.png\" alt=\"delete\"/>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n\r\n                                <div className=\"add-icon\">\r\n                                    <input onChange={handleAddImageDoc} type=\"file\"/>\r\n                                    <img src=\"./images/admin/image.png\" alt=\"\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div onClick={addCar_Images_Docs} className=\"btn-success\">\r\n                                Tasdiqlash\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </CSSTransition>\r\n\r\n        {isOpen && (\r\n            <Lightbox\r\n                mainSrc={currentImage}\r\n                onCloseRequest={() => setIsOpen(false)}\r\n            />\r\n        )}\r\n\r\n        <div className=\"header\">\r\n            <div className=\"left-side\">\r\n                <div className=\"search-box\">\r\n                    <img src=\"./images/admin/search.png\" alt=\"\"/>\r\n                    <input onChange={(e) => setGetSearchText(e.target.value)} placeholder=\"Telefon raqam kiriting\"\r\n                           type=\"text\"/>\r\n                </div>\r\n\r\n                <div className=\"select-sides\">\r\n                    <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                        <InputLabel id=\"confirm-filter-label\">Holat</InputLabel>\r\n                        <Select\r\n                            labelId=\"confirm-filter-label\"\r\n                            id=\"confirm-filter\"\r\n                            value={confirmFilter}\r\n                            label=\"Holat\"\r\n                            onChange={(e) => setConfirmFilter(e.target.value)}\r\n                        >\r\n                            <MenuItem value=\"\">Barchasi</MenuItem>\r\n                            <MenuItem value=\"true\">Tasdiqlangan</MenuItem>\r\n                            <MenuItem value=\"false\">Tasdiqlanmagan</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                </div>\r\n            </div>\r\n\r\n            <div onClick={() => {\r\n                setModalShow({show: true, status: \"add-driver\"});\r\n            }} className=\"add-driver-btn\">\r\n                Haydovchi qo'shish\r\n            </div>\r\n        </div>\r\n\r\n        {loader ? <LoaderAdmin/> : <div className=\"table-wrapper\">\r\n            <table>\r\n                <thead>\r\n                <tr>\r\n                    <th>№</th>\r\n                    <th>Haydovchi haqida</th>\r\n                    <th>Ro'yxatdan o'tgan sanasi</th>\r\n                    <th>Yo'nalish</th>\r\n                    <th>Mashina</th>\r\n                    <th>Mashina raqami</th>\r\n                    <th>Moshina ma'lumotlari</th>\r\n                    <th>Moshina rasmlari</th>\r\n                    <th>Dokument rasmlari</th>\r\n                    <th>Tasdiqlash</th>\r\n                    <th>Bloklash</th>\r\n                    <th>O'chirish</th>\r\n                    <th></th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {productList}\r\n                </tbody>\r\n            </table>\r\n        </div>}\r\n\r\n        <div className=\"pagination\">\r\n            {driversList.length > 100 ? <ReactPaginate\r\n                breakLabel=\"...\"\r\n                previousLabel={<img src=\"./images/admin/prev.png\" alt=\"\"/>}\r\n                nextLabel={<img src=\"./images/admin/next.png\" alt=\"\"/>}\r\n                pageCount={pageCount}\r\n                onPageChange={changePage}\r\n                containerClassName={\"paginationBttns\"}\r\n                previousLinkClassName={\"previousBttn\"}\r\n                nextLinkClassName={\"nextBttn\"}\r\n                disabledCalassName={\"paginationDisabled\"}\r\n                activeClassName={\"paginationActive\"}\r\n            /> : \"\"}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Drivers","import \"./style.scss\"\nimport {useContext, useEffect, useRef, useState} from \"react\";\nimport axios from \"axios\";\nimport {MyContext} from \"../../App/App\";\n\nconst ChatDriver = () => {\n    let value = useContext(MyContext);\n    const bodyRef = useRef(null);\n    const [chats, setChats] = useState([]);\n    const [message, setMessage] = useState();\n    const [activeCHat, setActiveChat] = useState(null);\n    const [messageText, setMessageText] = useState(\"\");\n    const [getSearchText, setGetSearchText] = useState(\"\");\n    useEffect(() => {\n        if (bodyRef.current) {\n            bodyRef.current.scrollTop = bodyRef.current.scrollHeight;\n        }\n        axios.get(`${value.url}/dashboard/admin-chat/`, {\n            headers: {\n                Authorization: `Token ${localStorage.getItem(\"token\")}`,\n            },\n        }).then((response) => {\n            setChats(response.data);\n        })\n    });\n\n    const getMessage = (chat) => {\n        setActiveChat(chat)\n        axios.get(`${value.url}/dashboard/admin-chat/${chat.id}/`, {\n            headers: {\n                Authorization: `Token ${localStorage.getItem(\"token\")}`,\n            },\n        }).then((response) => {\n            setMessage(response.data);\n        })\n    }\n\n    const sendMessage = () => {\n        let data = {room: activeCHat.id, message: messageText}\n        axios.post(`${value.url}/dashboard/admin-message/`, data, {\n            headers: {\n                Authorization: `Token ${localStorage.getItem(\"token\")}`,\n            },\n        }).then((response) => {\n            setMessageText(\"\")\n            axios.get(`${value.url}/dashboard/admin-chat/${activeCHat.id}/`, {\n                headers: {\n                    Authorization: `Token ${localStorage.getItem(\"token\")}`,\n                },\n            }).then((response) => {\n                setMessage(response.data);\n            })\n        })\n    }\n\n    const delChat = (id) => {\n        axios.delete(`${value.url}/dashboard/admin-chat/${id}/`, {\n            headers: {\n                Authorization: `Token ${localStorage.getItem(\"token\")}`,\n            },\n        }).then((response) => {\n            setActiveChat(null);\n            axios.get(`${value.url}/dashboard/admin-chat/`, {\n                headers: {\n                    Authorization: `Token ${localStorage.getItem(\"token\")}`,\n                },\n            }).then((response) => {\n                setChats(response.data);\n            })\n        })\n    }\n\n    const verify = (id) => {\n        axios.post(`${value.url}/dashboard/admin-chat/close/`,\n            {chat_id: id}, {\n                headers: {\n                    Authorization: `Token ${localStorage.getItem(\"token\")}`,\n                },\n            }).then((response) => {\n            axios.get(`${value.url}/dashboard/admin-chat/`, {\n                headers: {\n                    Authorization: `Token ${localStorage.getItem(\"token\")}`,\n                },\n            }).then((response) => {\n                setChats(response.data);\n            })\n        })\n    }\n\n    return <div className=\"chat-driver\">\n        <div className=\"left\">\n            <div className=\"header\">\n                <div className=\"search-box\">\n                    <img src=\"./images/admin/search.png\" alt=\"\"/>\n                    <input value={getSearchText} onChange={(e) => setGetSearchText(e.target.value)}\n                           placeholder=\"Telefon raqam kiriting\" type=\"text\"/>\n                </div>\n            </div>\n            <div className=\"drivers-box\">\n                {chats\n                    .filter((item) => {\n                        const searchText = getSearchText.toString().toLowerCase().replace(/\\s+/g, '').replace(/\\+/g, '');\n                        const phoneNumber = item.user_phone.toString().toLowerCase().replace(/\\s+/g, '').replace(/\\+/g, '');\n                        return searchText === \"\" || phoneNumber.includes(searchText);\n                    }).map((chat, index) => {\n                        return <div key={index}\n                                    className={`driver ${activeCHat && activeCHat.id === chat.id ? \"active\" : \"\"}`}>\n                            <div className=\"photo\">\n                                <img src=\"./images/admin/user2.png\" alt=\"\"/>\n                            </div>\n                            <div onClick={() => getMessage(chat)} className=\"left-content\">\n                                <div className=\"name\">{chat.title}</div>\n                                <div className=\"number\">{chat.user_phone}</div>\n                            </div>\n                            <div className=\"buttons\">\n\n                                <img onClick={() => verify(chat.id)} className={chat.closed ? \"closed\" : \"disabled\"}\n                                     src=\"./images/admin/check.png\"\n                                     alt=\"check\"/>\n\n                                <img onClick={() => delChat(chat.id)} src=\"./images/admin/delete.png\" alt=\"delete\"/>\n                            </div>\n                        </div>\n                    })}\n            </div>\n        </div>\n\n        {activeCHat && <div className=\"right\">\n            <div className=\"top\">\n                <div className=\"photo\">\n                    <img src=\"./images/admin/user2.png\" alt=\"\"/>\n                </div>\n                <div className=\"left-content\">\n                    <div className=\"name\">{activeCHat && activeCHat.title}</div>\n                    <div className=\"number\">{activeCHat && activeCHat.user_phone}</div>\n                </div>\n            </div>\n            <div ref={bodyRef} className=\"body\">\n                <div className=\"scroll\">\n                    {message && message.map((message, index) => (\n                        <div key={index}\n                             className={message.author && message.author.is_admin ? \"message-my\" : \"message-driver\"}>\n                            <div className=\"message\">\n                                {message.author && <div className=\"name\">\n                                    {message.author.first_name} &ensp;\n                                    {message.author.last_name}\n                                </div>}\n                                {message.message}\n                                <div className=\"time\">\n                                    {message.time}\n                                </div>\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            </div>\n            <div className=\"bottom\">\n                <input value={messageText} onChange={(e) => setMessageText(e.target.value)} placeholder=\"Xabar...\"\n                       type=\"text\"/>\n                <div onClick={sendMessage} className=\"icon-send\">\n                    <img src=\"./images/admin/message.png\" alt=\"\"/>\n                </div>\n            </div>\n        </div>}\n\n    </div>\n}\n\nexport default ChatDriver;","import {useEffect, useRef, useState, useContext} from \"react\";\r\nimport {CSSTransition} from \"react-transition-group\";\r\nimport {useFormik} from \"formik\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport axios from \"axios\";\r\nimport {TextField} from \"@mui/material\";\r\nimport \"./style.scss\"\r\nimport {MyContext} from \"../../App/App\";\r\nimport LoaderAdmin from \"../loader-admin/LoaderAdmin\";\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nconst Clients = () => {\r\n    const {t} = useTranslation();\r\n    let value = useContext(MyContext);\r\n    const [modalShow, setModalShow] = useState({show: false, status: false});\r\n    const nodeRef = useRef(null);\r\n    const ref = useRef(null);\r\n    const [luggage, setLuggage] = useState(\"male\");\r\n    const [getSearchText, setGetSearchText] = useState(\"\");\r\n    const [driverPhoto, setDriverPhoto] = useState(null);\r\n    const [driversList, setDriversList] = useState([]);\r\n    const [driverId, setDriverId] = useState(\"\");\r\n    const [reason, setReason] = useState(\"\");\r\n    const [profileImage, setProfileImage] = useState(null);\r\n    const [loader, setLoader] = useState(false);\r\n\r\n    const worksPage = 100;\r\n    const [pageNumber, setPageNumber] = useState(0);\r\n    const pagesVisited = pageNumber * worksPage;\r\n    const pageCount = Math.ceil(driversList.length / worksPage);\r\n\r\n    const validate = (values) => {\r\n        const errors = {};\r\n\r\n        if (!values.first_name) {\r\n            errors.first_name = \"Required\";\r\n        }\r\n\r\n        if (!values.last_name) {\r\n            errors.last_name = \"Required\";\r\n        }\r\n\r\n        if (!values.phone) {\r\n            errors.phone = \"Required\";\r\n        }\r\n        return errors;\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            first_name: \"\",\r\n            last_name: \"\",\r\n            phone: \"\",\r\n        },\r\n        validate,\r\n        onSubmit: (values) => {\r\n            sendAllInfo()\r\n        },\r\n    });\r\n\r\n    useEffect(() => {\r\n        getDrivers()\r\n    }, []);\r\n\r\n    const getDrivers = () => {\r\n        setLoader(true);\r\n        axios.get(`${value.url}/dashboard/client/`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setDriversList(response.data);\r\n        }).finally(() => {\r\n            setLoader(false);\r\n        });\r\n    }\r\n\r\n    const changePage = ({selected}) => {\r\n        setPageNumber(selected)\r\n\r\n        setTimeout(() => {\r\n            ref.current?.scrollIntoView({behavior: \"smooth\"});\r\n        }, 500);\r\n    };\r\n\r\n    const getInputPhoto = (event) => {\r\n        const file = event.target.files[0];\r\n        setProfileImage(file);\r\n    };\r\n\r\n    const sendAllInfo = () => {\r\n        const formData = new FormData();\r\n        let user = {\r\n            role: \"client\",\r\n            first_name: formik.values.first_name,\r\n            last_name: formik.values.last_name,\r\n            phone: formik.values.phone,\r\n            gender: luggage,\r\n        }\r\n        for (let key in user) {\r\n            formData.append(key, user[key]);\r\n        }\r\n        if (profileImage) {\r\n            formData.append('profile_image', profileImage);\r\n        }\r\n\r\n        if (!driverId) {\r\n            axios.post(`${value.url}/dashboard/client/`, formData,\r\n                {\r\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n                }).then((response) => {\r\n                setModalShow({status: \"\", show: false})\r\n                getDrivers()\r\n                formik.resetForm();\r\n            })\r\n        }\r\n\r\n        if (driverId) {\r\n            axios.patch(`${value.url}/dashboard/client/${driverId}/`, formData,\r\n                {\r\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n                }).then((response) => {\r\n                setModalShow({status: \"\", show: false})\r\n                getDrivers()\r\n                formik.resetForm();\r\n            })\r\n        }\r\n    }\r\n\r\n    const editInfo = (driver) => {\r\n        formik.setValues({\r\n            first_name: driver.first_name,\r\n            last_name: driver.last_name,\r\n            phone: driver.phone,\r\n        });\r\n        setLuggage(driver.gender)\r\n        setDriverId(driver.id)\r\n    }\r\n\r\n    const blockDriver = (status) => {\r\n        if (status === \"block\" && reason.trim().length > 0) {\r\n            axios.post(`${value.url}/dashboard/client/block-client/`,\r\n                {client_id: driverId, reason}, {\r\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n                }).then((response) => {\r\n                setModalShow({status: \"\", show: false})\r\n                getDrivers()\r\n                setReason(\"\")\r\n            })\r\n        } else alert(\"Bloklash sababini kiriting!\")\r\n\r\n        if (status === \"unblock\") {\r\n            axios.post(`${value.url}/dashboard/client/unblock-client/`,\r\n                {client_id: driverId}, {\r\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n                }).then((response) => {\r\n                setModalShow({status: \"\", show: false})\r\n                getDrivers()\r\n            })\r\n        }\r\n    }\r\n\r\n    const productList = driversList.slice(pagesVisited, pagesVisited + worksPage)\r\n        .filter((item) => {\r\n            const searchText = getSearchText.toString().toLowerCase().replace(/\\s+/g, '').replace(/\\+/g, '');\r\n            const phoneNumber = item.phone.toString().toLowerCase().replace(/\\s+/g, '').replace(/\\+/g, '');\r\n            return searchText === \"\" || phoneNumber.includes(searchText);\r\n        }).map((item, index) => {\r\n            return <tr key={index}>\r\n                <td>{index + 1}</td>\r\n                <td className=\"driver-wrapper\">\r\n                    <div className=\"icon-driver\">\r\n                        <img onClick={() => {\r\n                            setModalShow({show: true, status: \"driver-photo\"});\r\n                            setDriverPhoto(item.profile_image)\r\n                        }} src={item.profile_image} alt=\"\"/>\r\n                    </div>\r\n                    <div className=\"text-driver\">\r\n                        <div className=\"name\">\r\n                            {item.first_name} &nbsp;\r\n                            {item.last_name}\r\n                        </div>\r\n                    </div>\r\n                </td>\r\n                <td>\r\n                    {item.phone}\r\n                </td>\r\n                <td>\r\n                    {item.gender}\r\n                </td>\r\n                <td>\r\n                    <div className={item.is_block ? \"icon-check\" : \"icon-check disablet\"}>\r\n                        <img onClick={() => {\r\n                            setModalShow({show: true, status: \"blocked\"});\r\n                            if (item.is_block) {\r\n                                setReason(item.reason)\r\n                            }\r\n                            setDriverId(item.id)\r\n                        }} src=\"./images/admin/block.png\" alt=\"block\"/>\r\n\r\n                        {item.reason && item.is_block && <div className=\"reason-block\">\r\n                            <img src=\"./images/admin/warning.png\" alt=\"\"/>\r\n                            <div className=\"text\">\r\n                                {item.reason}\r\n                            </div>\r\n                        </div>}\r\n\r\n                    </div>\r\n                </td>\r\n                <td>\r\n                    <div className=\"icon\">\r\n                        <img onClick={() => delDriver(item.id)} src=\"./images/admin/delete.png\" alt=\"\"/>\r\n                    </div>\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <div className=\"edit-icon\">\r\n                    <img onClick={() => {\r\n                        setModalShow({show: true, status: \"edit-driver\"});\r\n                        editInfo(item)\r\n                    }} src=\"./images/admin/edit-tools.png\" alt=\"\"/>\r\n                </div>\r\n            </tr>\r\n        });\r\n\r\n    const delDriver = (id) => {\r\n        setLoader(true)\r\n        const isConfirmed = window.confirm(\"Rostdan ham ushbu mijozni o‘chirmoqchimisiz?\");\r\n        if (isConfirmed) {\r\n            axios.delete(`${value.url}/dashboard/client/${id}/`, {\r\n                headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n            }).then((response) => {\r\n                getDrivers()\r\n            }).catch((error) => {\r\n                console.log(error);\r\n            }).finally(() => {\r\n                setLoader(false);\r\n            });\r\n        } else {\r\n            setLoader(false);\r\n        }\r\n    };\r\n\r\n    return <div className=\"clients-container\">\r\n        <CSSTransition\r\n            in={modalShow.show}\r\n            nodeRef={nodeRef}\r\n            timeout={300}\r\n            classNames=\"alert\"\r\n            unmountOnExit\r\n        >\r\n            <div className=\"modal-sloy\">\r\n                <div ref={nodeRef} className=\"modal-card\">\r\n\r\n                    {modalShow.status === \"add-driver\" && (\r\n                        <div className=\"add-driver\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img\r\n                                    onClick={() => {\r\n                                        setModalShow({status: \"\", show: false})\r\n                                        formik.resetForm();\r\n                                    }}\r\n                                    src=\"./images/admin/x.png\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"title\">Mijoz qo'shish</div>\r\n                            <div className=\"title-form\">Mijoz ma'lumotlari:</div>\r\n                            <div className=\"form-container\">\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides-file\">\r\n                                        <input onChange={getInputPhoto} type=\"file\"/>\r\n                                        <div className={`sloy-image ${profileImage ? \"active\" : \"\"}`}>\r\n                                            Profil rasmi\r\n                                            <img src=\"./images/admin/image.png\" alt=\"\"/>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.phone === \"Required\"}\r\n                                            value={formik.values.phone}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"phone\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Telefon raqam\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.first_name === \"Required\"}\r\n                                            value={formik.values.first_name}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"first_name\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Ism\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.last_name === \"Required\"}\r\n                                            value={formik.values.last_name}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"last_name\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Familiya\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <div className=\"title-on\">\r\n                                            Jinsi:\r\n                                        </div>\r\n                                        <div className=\"on-of\">\r\n                                            <div onClick={() => setLuggage(\"male\")}\r\n                                                 className={`of ${luggage === \"male\" ? \"on\" : \"\"}`}>\r\n                                                Erkak\r\n                                            </div>\r\n                                            <div onClick={() => setLuggage(\"female\")}\r\n                                                 className={`of ${luggage === \"female\" ? \"on\" : \"\"}`}>\r\n                                                Ayol\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div onClick={() => {\r\n                                formik.handleSubmit()\r\n                            }} className=\"add-btn\">\r\n                                Qo'shish\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalShow.status === \"driver-photo\" && (\r\n                        <div className=\"driver-photo\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img\r\n                                    onClick={() => setModalShow({status: \"\", show: false})}\r\n                                    src=\"./images/admin/x.png\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"photo\">\r\n                                <img src={driverPhoto} alt=\"\"/>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalShow.status === \"blocked\" && (\r\n                        <div className=\"blocked\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img onClick={() => {\r\n                                    setModalShow({status: \"\", show: false})\r\n                                    setReason(\"\")\r\n                                }}\r\n                                     src=\"./images/admin/x.png\"\r\n                                     alt=\"\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"title\">\r\n                                Haydovchini bloklash\r\n                            </div>\r\n\r\n                            <div className=\"reason-text\">\r\n                                <textarea value={reason} onChange={(e) => setReason(e.target.value)}\r\n                                          placeholder=\"Blok qilish sababini kiriting...\" name=\"reason\"\r\n                                          id=\"reason\"></textarea>\r\n\r\n                                <div className=\"buttons\">\r\n                                    <div onClick={() => {\r\n                                        blockDriver(\"unblock\")\r\n                                    }}\r\n                                         className=\"cancel\">Bekor qilish\r\n                                    </div>\r\n\r\n                                    <div onClick={() => {\r\n                                        blockDriver(\"block\")\r\n                                    }} className=\"success\">Bloklash\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalShow.status === \"edit-driver\" && (\r\n                        <div className=\"edit-driver\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img\r\n                                    onClick={() => {\r\n                                        setModalShow({status: \"\", show: false})\r\n                                        formik.resetForm();\r\n                                    }}\r\n                                    src=\"./images/admin/x.png\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"title\">Mijoz ma'lumotlarini tahrirlash</div>\r\n\r\n                            <div className=\"title-form\">Mijoz ma'lumotlari:</div>\r\n\r\n                            <div className=\"form-container\">\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides-file\">\r\n                                        <input onChange={getInputPhoto} type=\"file\"/>\r\n                                        <div className={`sloy-image ${profileImage ? \"active\" : \"\"}`}>\r\n                                            Profil rasmi\r\n                                            <img src=\"./images/admin/image.png\" alt=\"\"/>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.phone === \"Required\"}\r\n                                            value={formik.values.phone}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"phone\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Telefon raqam\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.first_name === \"Required\"}\r\n                                            value={formik.values.first_name}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"first_name\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Ism\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.last_name === \"Required\"}\r\n                                            value={formik.values.last_name}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"last_name\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Familiya\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <div className=\"title-on\">\r\n                                            Jinsi:\r\n                                        </div>\r\n                                        <div className=\"on-of\">\r\n                                            <div onClick={() => setLuggage(\"male\")}\r\n                                                 className={`of ${luggage === \"male\" ? \"on\" : \"\"}`}>\r\n                                                Erkak\r\n                                            </div>\r\n                                            <div onClick={() => setLuggage(\"female\")}\r\n                                                 className={`of ${luggage === \"female\" ? \"on\" : \"\"}`}>\r\n                                                Ayol\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div onClick={() => {\r\n                                formik.handleSubmit()\r\n                            }} className=\"add-btn\">\r\n                                Saqlash\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </CSSTransition>\r\n\r\n        <div className=\"header\">\r\n            <div className=\"search-box\">\r\n                <img src=\"./images/admin/find-person.png\" alt=\"\"/>\r\n                <input onChange={(e) => setGetSearchText(e.target.value)} placeholder=\"Telefon raqam kiriting\"\r\n                       type=\"text\"/>\r\n            </div>\r\n\r\n            <div onClick={() => {\r\n                setModalShow({show: true, status: \"add-driver\"});\r\n            }} className=\"add-driver-btn\">\r\n                Mijoz qo'shish\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <div className=\"table-wrapper\">\r\n            {loader ? <LoaderAdmin/> : <table>\r\n                <thead>\r\n                <tr>\r\n                    <th>№</th>\r\n                    <th>Mijoz haqida</th>\r\n                    <th>Telefon raqam</th>\r\n                    <th>Jinsi</th>\r\n                    <th>Bloklash</th>\r\n                    <th>O'chirish</th>\r\n                    <th></th>\r\n                </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                {productList}\r\n                </tbody>\r\n            </table>}\r\n        </div>\r\n\r\n        <div className=\"pagination\">\r\n            {driversList.length > 100 ? <ReactPaginate\r\n                breakLabel=\"...\"\r\n                previousLabel={<img src=\"./images/admin/prev.png\" alt=\"\"/>}\r\n                nextLabel={<img src=\"./images/admin/next.png\" alt=\"\"/>}\r\n                pageCount={pageCount}\r\n                onPageChange={changePage}\r\n                containerClassName={\"paginationBttns\"}\r\n                previousLinkClassName={\"previousBttn\"}\r\n                nextLinkClassName={\"nextBttn\"}\r\n                disabledCalassName={\"paginationDisabled\"}\r\n                activeClassName={\"paginationActive\"}\r\n            /> : \"\"}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Clients","import \"./style.scss\"\nimport {useContext, useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {MyContext} from \"../../App/App\";\nimport i18next from \"i18next\";\nimport {useTranslation} from \"react-i18next\";\n\nconst Colors = () => {\n    const {t} = useTranslation();\n    let value = useContext(MyContext);\n    const [translations, setTranslations] = useState(\n        {\n            name_uz: \"\",\n            name_ru: \"\",\n            name_en: \"\"\n        })\n    const [colorsList, setColorsList] = useState([])\n    const [edit, setEdit] = useState(false)\n    const [editId, setEditId] = useState('')\n\n    const getData = () => {\n        axios.get(`${value.url}/dashboard/carcolor/`,{\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n        }).then((response) => {\n            setColorsList(response.data);\n        })\n    }\n\n    useEffect(() => {\n        getData()\n    }, []);\n\n    const addColor = (status) => {\n        const {name_uz, name_ru, name_en} = translations;\n\n        const isAnyNameFilled = name_uz.trim() && name_ru.trim() && name_en.trim();\n\n        if (!isAnyNameFilled) {\n            alert(\"Iltimos, rang nomini kiriting\");\n            return;\n        }\n\n        const translation_list = {\n            uz: {\n                name: name_uz.trim()\n            },\n            ru: {\n                name: name_ru.trim()\n            },\n            en: {\n                name: name_en.trim()\n            }\n        };\n\n        if (status === \"add\") {\n            axios.post(`${value.url}/dashboard/carcolor/`, {translations: translation_list},\n                {\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n                })\n                .then((response) => {\n                    setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n                    getData();\n                })\n                .catch((error) => {\n                    console.error(\"Rang qo'shishda xatolik:\", error);\n                });\n        }\n\n        if (status === \"edit\") {\n            axios.put(`${value.url}/dashboard/carcolor/${editId}/`, {translations: translation_list},\n                {\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n                })\n                .then((response) => {\n                    setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n                    getData();\n                    setEdit(false);\n                })\n                .catch((error) => {\n                    console.error(\"Rangni tahrirlashda xatolik:\", error);\n                });\n        }\n    };\n\n    const delColor = (id) => {\n        axios.delete(`${value.url}/dashboard/carcolor/${id}/`,{\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n        }).then((response) => {\n            setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n            getData()\n            setEdit(false)\n        })\n    }\n\n    const handleEdit = (color) => {\n        setEdit(true);\n        setEditId(color.id);\n        setTranslations({\n            name_uz: color.translations[\"uz\"].name || \"\",\n            name_ru: color.translations[\"ru\"].name || \"\",\n            name_en: color.translations[\"en\"].name || \"\"\n        });\n    };\n\n    return <div className=\"colors-wrapper\">\n        <div className=\"header\">\n            <div className=\"form-wrapper\">\n                <input\n                    value={translations.name_uz}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_uz: e.target.value})\n                    }\n                    placeholder=\"Rangi nomi (uz)...\"\n                    type=\"text\"\n                />\n                <input\n                    value={translations.name_en}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_en: e.target.value})\n                    }\n                    placeholder=\"Color name (en)...\"\n                    type=\"text\"\n                />\n\n                <input\n                    value={translations.name_ru}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_ru: e.target.value})\n                    }\n                    placeholder=\"Название цвета (ru)...\"\n                    type=\"text\"\n                />\n\n\n                {edit ? <div onClick={() => addColor(\"edit\")} className=\"add-color\">\n                    <img src=\"./images/admin/checkmark.png\" alt=\"\"/>\n                </div> : <div onClick={() => addColor(\"add\")} className=\"add-color\">\n                    <img src=\"./images/admin/add.png\" alt=\"\"/>\n                </div>}\n\n            </div>\n        </div>\n        <div className=\"colors-cards\">\n            <div className=\"wrapper-box\">\n                {\n                    colorsList.map((color, index) => (\n                        <div key={index} className=\"color-card\">\n                            <div className=\"name\">{color.translations[i18next.language].name}</div>\n                            <div className=\"bttons\">\n                                <div onClick={() => handleEdit(color)} className=\"btn\">\n                                    <img src=\"./images/admin/edit-tools.png\" alt=\"\"/>\n                                </div>\n\n                                <div onClick={() => delColor(color.id)} className=\"btn\">\n                                    <img src=\"./images/admin/delete.png\" alt=\"\"/>\n                                </div>\n                            </div>\n                        </div>\n                    ))\n                }\n            </div>\n        </div>\n    </div>\n}\n\nexport default Colors;","import \"./style.scss\"\nimport {useContext, useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {MyContext} from \"../../App/App\";\nimport i18next from \"i18next\";\nimport {useTranslation} from \"react-i18next\";\n\nconst CarBrand = () => {\n    const {t} = useTranslation();\n    let value = useContext(MyContext);\n    const [colorsList, setColorsList] = useState([])\n    const [edit, setEdit] = useState(false)\n    const [editId, setEditId] = useState('')\n    const [translations, setTranslations] = useState(\n        {\n            name_uz: \"\",\n            name_ru: \"\",\n            name_en: \"\"\n        })\n\n    const getData = () => {\n        axios.get(`${value.url}/dashboard/carmake/`, {\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n        }).then((response) => {\n            setColorsList(response.data);\n        })\n    }\n\n    useEffect(() => {\n        getData()\n    }, []);\n\n    const addColor = (status) => {\n        const {name_uz, name_ru, name_en} = translations;\n\n        const isAnyNameFilled = name_uz.trim() && name_ru.trim() && name_en.trim();\n\n        if (!isAnyNameFilled) {\n            alert(\"Iltimos, brend nomini kiriting\");\n            return;\n        }\n\n        const translation_list = {\n            uz: {\n                name: name_uz.trim()\n            },\n            ru: {\n                name: name_ru.trim()\n            },\n            en: {\n                name: name_en.trim()\n            }\n        };\n\n        if (status === \"add\") {\n            axios.post(`${value.url}/dashboard/carmake/`, {translations: translation_list},\n                {\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n                })\n                .then((response) => {\n                    setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n                    getData();\n                })\n                .catch((error) => {\n                    console.error(\"Brend qo'shishda xatolik:\", error);\n                });\n        }\n\n        if (status === \"edit\") {\n            axios.put(`${value.url}dashboard/carmake/${editId}/`, {translations: translation_list},\n                {\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n                })\n                .then((response) => {\n                    setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n                    getData();\n                    setEdit(false);\n                })\n                .catch((error) => {\n                    console.error(\"Brendni tahrirlashda xatolik:\", error);\n                });\n        }\n    };\n\n    const delColor = (id) => {\n        axios.delete(`${value.url}/dashboard/carmake/${id}/`, {\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n        }).then((response) => {\n            setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n            getData()\n            setEdit(false)\n        })\n    }\n\n    const handleEdit = (color) => {\n        setEdit(true);\n        setEditId(color.id);\n        setTranslations({\n            name_uz: color.translations[\"uz\"].name || \"\",\n            name_ru: color.translations[\"ru\"].name || \"\",\n            name_en: color.translations[\"en\"].name || \"\"\n        });\n    };\n\n    return <div className=\"car-brand-wrapper\">\n        <div className=\"header\">\n            <div className=\"form-wrapper\">\n                <input\n                    value={translations.name_uz}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_uz: e.target.value})\n                    }\n                    placeholder=\"Brend nomi (uz)...\"\n                    type=\"text\"\n                />\n                <input\n                    value={translations.name_en}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_en: e.target.value})\n                    }\n                    placeholder=\"Brand name (en)...\"\n                    type=\"text\"\n                />\n\n                <input\n                    value={translations.name_ru}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_ru: e.target.value})\n                    }\n                    placeholder=\"Название бренда (ru)...\"\n                    type=\"text\"\n                />\n\n\n                {edit ? <div onClick={() => addColor(\"edit\")} className=\"add-color\">\n                    <img src=\"./images/admin/checkmark.png\" alt=\"\"/>\n                </div> : <div onClick={() => addColor(\"add\")} className=\"add-color\">\n                    <img src=\"./images/admin/add.png\" alt=\"\"/>\n                </div>}\n\n            </div>\n        </div>\n        <div className=\"colors-cards\">\n            <div className=\"wrapper-box\">\n                {\n                    colorsList.map((color, index) => (\n                        <div key={index} className=\"color-card\">\n                            <div className=\"name\">{color.translations[i18next.language].name}</div>\n                            <div className=\"bttons\">\n                                <div onClick={() => handleEdit(color)} className=\"btn\">\n                                    <img src=\"./images/admin/edit-tools.png\" alt=\"\"/>\n                                </div>\n\n                                <div onClick={() => delColor(color.id)} className=\"btn\">\n                                    <img src=\"./images/admin/delete.png\" alt=\"\"/>\n                                </div>\n                            </div>\n                        </div>\n                    ))\n                }\n            </div>\n        </div>\n    </div>\n}\n\nexport default CarBrand;","import {useCallback, useEffect, useRef, useState, useMemo, useContext} from \"react\";\r\nimport {CSSTransition} from \"react-transition-group\";\r\nimport {useFormik} from \"formik\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport {\r\n    TextField,\r\n    MenuItem,\r\n    InputLabel,\r\n    FormControl,\r\n    Select\r\n} from \"@mui/material\";\r\nimport \"./style.scss\"\r\nimport axios from \"axios\";\r\nimport {MyContext} from \"../../App/App\";\r\n\r\nconst Service = () => {\r\n    let value = useContext(MyContext);\r\n    const [modalShow, setModalShow] = useState({show: false, status: false});\r\n    const nodeRef = useRef(null);\r\n    const [serviceList, setServiceList] = useState([]);\r\n    const [editId, setEditId] = useState(\"\");\r\n    const ref = useRef(null);\r\n    const [driversList, setDriversList] = useState([{}]);\r\n    const worksPage = 100;\r\n    const [pageNumber, setPageNumber] = useState(0);\r\n    const pagesVisited = pageNumber * worksPage;\r\n\r\n    const pageCount = Math.ceil(driversList.length / worksPage);\r\n\r\n    const changePage = ({selected}) => {\r\n        setPageNumber(selected)\r\n\r\n        setTimeout(() => {\r\n            ref.current?.scrollIntoView({behavior: \"smooth\"});\r\n        }, 500);\r\n    };\r\n\r\n    const validate = (values) => {\r\n        const errors = {};\r\n\r\n        if (!values.service) {\r\n            errors.service = \"Required\";\r\n        }\r\n\r\n        if (!values.includedCars) {\r\n            errors.includedCars = \"Required\";\r\n        }\r\n\r\n        if (!values.start_price) {\r\n            errors.start_price = \"Required\";\r\n        }\r\n\r\n        if (!values.price_per_km) {\r\n            errors.price_per_km = \"Required\";\r\n        }\r\n\r\n        if (!values.price_per_min) {\r\n            errors.price_per_min = \"Required\";\r\n        }\r\n\r\n        if (!values.wait_price_per_min) {\r\n            errors.wait_price_per_min = \"Required\";\r\n        }\r\n\r\n        if (!values.free_wait_time) {\r\n            errors.free_wait_time = \"Required\";\r\n        }\r\n\r\n        return errors;\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            service: \"\",\r\n            start_price: \"\",\r\n            price_per_km: \"\",\r\n            price_per_min: \"\",\r\n            wait_price_per_min: \"\",\r\n            free_wait_time: \"\",\r\n            includedCars: \"\"\r\n        },\r\n        validate,\r\n        onSubmit: (values) => {\r\n            sendAllInfo()\r\n        },\r\n    });\r\n\r\n    const sendAllInfo = () => {\r\n        let allInfo = {\r\n            service: formik.values.service,\r\n            includedCars: formik.values.includedCars,\r\n            start_price: formik.values.start_price,\r\n            price_per_km: formik.values.price_per_km,\r\n            price_per_min: formik.values.price_per_min,\r\n            wait_price_per_min: formik.values.wait_price_per_min,\r\n            free_wait_time: formik.values.free_wait_time\r\n        }\r\n\r\n        if (!editId) {\r\n            axios.post(`${value.url}/dashboard/service/`, allInfo, {\r\n                headers: {\r\n                    Authorization: `Token ${localStorage.getItem(\"token\")}`,\r\n                },\r\n            }).then((response) => {\r\n                getDrivers()\r\n                setModalShow({status: \"\", show: false})\r\n                formik.resetForm();\r\n            })\r\n        }\r\n\r\n        if (editId) {\r\n            axios.put(`${value.url}/dashboard/service/${editId}/`, allInfo,\r\n                {\r\n                    headers: {\r\n                        Authorization: `Token ${localStorage.getItem(\"token\")}`,\r\n                    },\r\n                }).then((response) => {\r\n                getDrivers()\r\n                formik.resetForm();\r\n                setModalShow({status: \"\", show: false})\r\n            })\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getDrivers()\r\n    }, []);\r\n\r\n    const delColor = (id) => {\r\n        axios.delete(`${value.url}/dashboard/service/${id}/`, {\r\n            headers: {\r\n                Authorization: `Token ${localStorage.getItem(\"token\")}`,\r\n            },\r\n        }).then((response) => {\r\n            getDrivers()\r\n        })\r\n    }\r\n\r\n    const getDrivers = () => {\r\n        axios.get(`${value.url}/dashboard/service/`, {\r\n            headers: {\r\n                Authorization: `Token ${localStorage.getItem(\"token\")}`,\r\n            },\r\n        }).then((response) => {\r\n            setServiceList(response.data);\r\n        })\r\n    }\r\n\r\n    const editValues = (service) => {\r\n        setEditId(service.id)\r\n        setModalShow({show: true, status: \"edit-driver\"});\r\n        formik.setValues({\r\n            service: service.service,\r\n            start_price: service.start_price,\r\n            price_per_km: service.price_per_km,\r\n            price_per_min: service.price_per_min,\r\n            wait_price_per_min: service.wait_price_per_min,\r\n            free_wait_time: service.free_wait_time,\r\n            includedCars: service.includedCars,\r\n        });\r\n    }\r\n\r\n    const productList = serviceList.slice(pagesVisited, pagesVisited + worksPage).map((item, index) => {\r\n        return <tr key={index}>\r\n            <td>{index + 1}</td>\r\n            <td>\r\n                {item.service}\r\n            </td>\r\n            <td>\r\n                {item.includedCars}\r\n            </td>\r\n            <td>{item.start_price}</td>\r\n            <td>{item.price_per_km}</td>\r\n            <td>{item.price_per_min}</td>\r\n            <td>{item.wait_price_per_min}</td>\r\n            <td>{item.free_wait_time}</td>\r\n            <td>\r\n                <div className=\"icon\">\r\n                    <img onClick={() => delColor(item.id)} src=\"./images/admin/delete.png\" alt=\"\"/>\r\n                </div>\r\n            </td>\r\n            <td>\r\n            </td>\r\n            <div className=\"edit-icon\">\r\n                <img onClick={() => editValues(item)} src=\"./images/admin/edit-tools.png\" alt=\"\"/>\r\n            </div>\r\n        </tr>\r\n    });\r\n\r\n    return <div className=\"service-container\">\r\n        <CSSTransition\r\n            in={modalShow.show}\r\n            nodeRef={nodeRef}\r\n            timeout={300}\r\n            classNames=\"alert\"\r\n            unmountOnExit\r\n        >\r\n            <div className=\"modal-sloy\">\r\n                <div ref={nodeRef} className=\"modal-card\">\r\n\r\n                    {modalShow.status === \"add-driver\" && (\r\n                        <div className=\"add-driver\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img\r\n                                    onClick={() => setModalShow({status: \"\", show: false})}\r\n                                    src=\"./images/admin/x.png\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"title\">Tarif qo'shish</div>\r\n\r\n                            <div className=\"title-form\">Tarif ma'lumotlari:</div>\r\n\r\n                            <div className=\"form-container\">\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Tarif nomi</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.service === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.service}\r\n                                                label=\"Tarif nomi\"\r\n                                                name=\"service\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                <MenuItem value=\"standart\">Standart</MenuItem>\r\n                                                <MenuItem value=\"bussiness\">Bussiness</MenuItem>\r\n                                                <MenuItem value=\"comfort\">Comfort</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.includedCars === \"Required\"}\r\n                                            value={formik.values.includedCars}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"includedCars\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Tarifga kiruvchi mashinalar\" variant=\"outlined\"\r\n                                            className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.start_price === \"Required\"}\r\n                                            value={formik.values.start_price}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"start_price\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Boshlash narxi\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.price_per_km === \"Required\"}\r\n                                            value={formik.values.price_per_km}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"price_per_km\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Narx (km)\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.price_per_min === \"Required\"}\r\n                                            value={formik.values.price_per_min}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"price_per_min\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Narx (min)\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.wait_price_per_min === \"Required\"}\r\n                                            value={formik.values.wait_price_per_min}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"wait_price_per_min\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Kutish uchun narx (min)\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.free_wait_time === \"Required\"}\r\n                                            value={formik.values.free_wait_time}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"free_wait_time\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Tekin kutish vaqti\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div onClick={sendAllInfo} className=\"add-btn\">\r\n                                    Tarif qo'shish\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalShow.status === \"edit-driver\" && (\r\n                        <div className=\"edit-driver\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img\r\n                                    onClick={() => setModalShow({status: \"\", show: false})}\r\n                                    src=\"./images/admin/x.png\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"title\">Tarifni tahrirlash</div>\r\n\r\n                            <div className=\"title-form\">Tarif ma'lumotlari:</div>\r\n\r\n                            <div className=\"form-container\">\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Tarif nomi</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.service === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.service}\r\n                                                label=\"Tarif nomi\"\r\n                                                name=\"service\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                <MenuItem value=\"standart\">Standart</MenuItem>\r\n                                                <MenuItem value=\"bussiness\">Bussiness</MenuItem>\r\n                                                <MenuItem value=\"comfort\">Comfort</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.includedCars === \"Required\"}\r\n                                            value={formik.values.includedCars}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"includedCars\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Tarifga kiruvchi mashinalar\" variant=\"outlined\"\r\n                                            className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.start_price === \"Required\"}\r\n                                            value={formik.values.start_price}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"start_price\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Boshlash narxi\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.price_per_km === \"Required\"}\r\n                                            value={formik.values.price_per_km}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"price_per_km\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Narx (km)\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.price_per_min === \"Required\"}\r\n                                            value={formik.values.price_per_min}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"price_per_min\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Narx (min)\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.wait_price_per_min === \"Required\"}\r\n                                            value={formik.values.wait_price_per_min}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"wait_price_per_min\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Kutish uchun narx (min)\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.free_wait_time === \"Required\"}\r\n                                            value={formik.values.free_wait_time}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"free_wait_time\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Tekin kutish vaqti\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div onClick={sendAllInfo} className=\"add-btn\">\r\n                                    Tasdiqlash\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </CSSTransition>\r\n\r\n        <div className=\"header\">\r\n            <div onClick={() => {\r\n                setModalShow({show: true, status: \"add-driver\"});\r\n            }} className=\"add-driver-btn\">\r\n                Tarif qo'shish\r\n            </div>\r\n        </div>\r\n\r\n        <table>\r\n            <thead>\r\n            <tr>\r\n                <th>№</th>\r\n                <th>Nomi</th>\r\n                <th>Moshinalar</th>\r\n                <th>Boshlash narxi</th>\r\n                <th>Narx km</th>\r\n                <th>Narx min</th>\r\n                <th>Kutish narxi min</th>\r\n                <th>Tekin kutish vaqti</th>\r\n                <th>O'chirish</th>\r\n                <th></th>\r\n            </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n            {productList}\r\n            </tbody>\r\n        </table>\r\n\r\n        <div className=\"pagination\">\r\n            {driversList.length > 100 ? <ReactPaginate\r\n                breakLabel=\"...\"\r\n                previousLabel={<img src=\"./images/admin/prev.png\" alt=\"\"/>}\r\n                nextLabel={<img src=\"./images/admin/next.png\" alt=\"\"/>}\r\n                pageCount={pageCount}\r\n                onPageChange={changePage}\r\n                containerClassName={\"paginationBttns\"}\r\n                previousLinkClassName={\"previousBttn\"}\r\n                nextLinkClassName={\"nextBttn\"}\r\n                disabledCalassName={\"paginationDisabled\"}\r\n                activeClassName={\"paginationActive\"}\r\n            /> : \"\"}\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default Service","import {useCallback, useEffect, useRef, useState, useMemo, useContext} from \"react\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport \"./style.scss\"\r\nimport axios from \"axios\";\r\nimport {MyContext} from \"../../App/App\";\r\n\r\nconst Balance = () => {\r\n    const [getSearchText, setGetSearchText] = useState(\"\");\r\n    let value = useContext(MyContext);\r\n    const ref = useRef(null);\r\n    const [driversList, setDriversList] = useState([]);\r\n    const worksPage = 100;\r\n    const [pageNumber, setPageNumber] = useState(0);\r\n    const pagesVisited = pageNumber * worksPage;\r\n\r\n    useEffect(() => {\r\n        axios.get(`${value.url}/dashboard/balance/`, {\r\n            headers: {\r\n                Authorization: `Token ${localStorage.getItem(\"token\")}`,\r\n            },\r\n        }).then((response) => {\r\n            setDriversList(response.data);\r\n            console.log(response.data);\r\n        })\r\n    }, []);\r\n\r\n    const productList = driversList.slice(pagesVisited, pagesVisited + worksPage)\r\n        .filter((item) => {\r\n            const searchText = getSearchText.toString().toLowerCase().replace(/\\s+/g, '').replace(/\\+/g, '');\r\n            const phoneNumber = item.driver_phone?.toString().toLowerCase().replace(/\\s+/g, '').replace(/\\+/g, '');\r\n            return searchText === \"\" || phoneNumber.includes(searchText);\r\n        }).map((item, index) => {\r\n            return <tr key={index}>\r\n                <td>{index + 1}</td>\r\n                <td className=\"driver-wrapper\">\r\n                    <div className=\"text-driver\">\r\n                        <div\r\n                            className=\"name\">{item.driver_name}</div>\r\n                        <div className=\"phone\">\r\n                            {item.driver_phone}\r\n                        </div>\r\n                    </div>\r\n                </td>\r\n                <td>\r\n                    {item.id_number}\r\n                </td>\r\n                <td>\r\n                    {item.fund}\r\n                </td>\r\n            </tr>\r\n        });\r\n\r\n    const pageCount = Math.ceil(driversList.length / worksPage);\r\n\r\n    const changePage = ({selected}) => {\r\n        setPageNumber(selected)\r\n\r\n        setTimeout(() => {\r\n            ref.current?.scrollIntoView({behavior: \"smooth\"});\r\n        }, 500);\r\n    };\r\n\r\n    return <div className=\"balance-container\">\r\n        <div className=\"header\">\r\n            <div className=\"search-box\">\r\n                <img src=\"./images/admin/search.png\" alt=\"\"/>\r\n                <input onChange={(e) => setGetSearchText(e.target.value)} placeholder=\"Telefon raqam kiriting\"\r\n                       type=\"text\"/>\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"table-wrapper\">\r\n            <table>\r\n                <thead>\r\n                <tr>\r\n                    <th>№</th>\r\n                    <th>Haydovchi</th>\r\n                    <th>Id raqam</th>\r\n                    <th>Narx</th>\r\n                </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                {productList}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n\r\n\r\n        <div className=\"pagination\">\r\n            {driversList.length > 100 ? <ReactPaginate\r\n                breakLabel=\"...\"\r\n                previousLabel={<img src=\"./images/admin/prev.png\" alt=\"\"/>}\r\n                nextLabel={<img src=\"./images/admin/next.png\" alt=\"\"/>}\r\n                pageCount={pageCount}\r\n                onPageChange={changePage}\r\n                containerClassName={\"paginationBttns\"}\r\n                previousLinkClassName={\"previousBttn\"}\r\n                nextLinkClassName={\"nextBttn\"}\r\n                disabledCalassName={\"paginationDisabled\"}\r\n                activeClassName={\"paginationActive\"}\r\n            /> : \"\"}\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default Balance","import {useEffect, useRef, useState, useContext} from \"react\";\r\nimport \"./style.scss\"\r\nimport {CSSTransition} from \"react-transition-group\";\r\nimport axios from \"axios\";\r\nimport {MyContext} from \"../../App/App\";\r\nimport i18next from \"i18next\";\r\nimport LoaderAdmin from \"../loader-admin/LoaderAdmin\";\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nconst Orders = () => {\r\n    const {t} = useTranslation();\r\n    let value = useContext(MyContext);\r\n    const [modalShow, setModalShow] = useState({show: false, status: false});\r\n    const nodeRef = useRef(null);\r\n    const [loader, setLoader] = useState(false);\r\n\r\n    const [links, setLinks] = useState({});\r\n    const [Pages, setPages] = useState([]);\r\n    const [activeItem, setActiveItem] = useState(1);\r\n    const [orderStatus, setOrderStatus] = useState();\r\n    const [orderId, setOrderId] = useState(\"\");\r\n    const [reasonList, setReasonList] = useState([]);\r\n    const [reason, setReason] = useState(\"\");\r\n    const [driversList, setDriversList] = useState([]);\r\n    const [statistics, setStatistics] = useState([]);\r\n    const [information, setInformation] = useState([]);\r\n\r\n    const [client, setClient] = useState(\"\");\r\n    const [driver, setDriver] = useState(\"\");\r\n    const [status, setStatus] = useState(\"\");\r\n    const [direction, setDirection] = useState(\"\");\r\n    const [tarif, setTarif] = useState(\"\");\r\n    const [date, setDate] = useState(\"\");\r\n\r\n\r\n    const visiblePages = [];\r\n    const totalPages = Pages.length;\r\n\r\n    if (totalPages <= 7) {\r\n        visiblePages.push(...Pages.map((_, index) => index + 1));\r\n    } else {\r\n        visiblePages.push(1);\r\n\r\n        if (activeItem > 3) {\r\n            visiblePages.push(\"...\");\r\n        }\r\n\r\n        for (let i = Math.max(2, activeItem - 1); i <= Math.min(totalPages - 1, activeItem + 1); i++) {\r\n            visiblePages.push(i);\r\n        }\r\n\r\n        if (activeItem < totalPages - 2) {\r\n            visiblePages.push(\"...\");\r\n        }\r\n\r\n        visiblePages.push(totalPages);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getList();\r\n\r\n        axios.get(`${value.url}/dashboard/rejectreson/?admin=true`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setReasonList(response.data);\r\n        })\r\n\r\n        axios.get(`${value.url}/dashboard/order-stats/`, {\r\n            headers: {\r\n                \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\r\n            }\r\n        }).then((response) => {\r\n            setStatistics(response.data);\r\n        })\r\n\r\n    }, []);\r\n\r\n    const getList = (url = null, page = 1) => {\r\n        setLoader(true);\r\n        const main = url ? url : `${value.url}/dashboard/order/?page=${page}`;\r\n        axios.get(main, {\r\n            headers: {\r\n                \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\r\n            }\r\n        }).then((response) => {\r\n            setDriversList(response.data.results);\r\n            setLinks(response.data.links);\r\n            setPages(response.data.links.pages);\r\n            setActiveItem(page);\r\n        }).finally(() => {\r\n            setLoader(false);\r\n        });\r\n\r\n    };\r\n\r\n    const changeStatus = () => {\r\n        axios.post(`${value.url}/dashboard/order/reject-order/`, {\r\n                order_id: orderId,\r\n                reason_id: reason,\r\n                status: orderStatus\r\n            },\r\n            {\r\n                headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n            })\r\n            .then((response) => {\r\n                getList()\r\n                setModalShow({status: \"\", show: false})\r\n            })\r\n    }\r\n\r\n    const filterData = () => {\r\n        setLoader(true);\r\n        let page = 1\r\n        axios.get(`${value.url}/dashboard/order/?client_phone=${client}&driver_phone=${driver}&service_type=${direction}&category_type=${tarif}&created_date=${date}&status=${status}`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setDriversList(response.data.results);\r\n            setLinks(response.data.links);\r\n            setPages(response.data.links.pages);\r\n            setActiveItem(page);\r\n        }).finally(() => {\r\n            setLoader(false);\r\n        });\r\n    }\r\n\r\n    return <div className=\"orders-container\">\r\n        <CSSTransition\r\n            in={modalShow.show}\r\n            nodeRef={nodeRef}\r\n            timeout={300}\r\n            classNames=\"alert\"\r\n            unmountOnExit\r\n        >\r\n            <div className=\"modal-sloy\">\r\n                <div ref={nodeRef} className=\"modal-card\">\r\n\r\n                    {modalShow.status === \"car-information\" && (\r\n                        <div className=\"car-information\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img\r\n                                    onClick={() => setModalShow({status: \"\", show: false})}\r\n                                    src=\"./images/admin/x.png\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"title\">\r\n                                Qo'shimcha malumotlar\r\n                            </div>\r\n                            {console.log(information)}\r\n                            <div className=\"information\">\r\n                                <div className=\"info\">\r\n                                    <div className=\"title\">Buyurtma raqami:</div>\r\n                                    <div\r\n                                        className=\"text\">{information.id}</div>\r\n                                </div>\r\n                                <div className=\"info\">\r\n                                    <div className=\"title\">Yo'nalish:</div>\r\n                                    <div\r\n                                        className=\"text\">{information.car_service.translations[i18next.language].name}</div>\r\n                                </div>\r\n                                <div className=\"info\">\r\n                                    <div className=\"title\">Masofa:</div>\r\n                                    <div\r\n                                        className=\"text\">{information.distance}</div>\r\n                                </div>\r\n                                {\r\n                                    information.end_date && <div className=\"info\">\r\n                                        <div className=\"title\">Tugatilgan sana:</div>\r\n                                        <div className=\"text\">{information.end_date}</div>\r\n                                    </div>\r\n                                }\r\n                                <div className=\"info\">\r\n                                    <div className=\"title\">Olib ketish manzili:</div>\r\n\r\n                                    <div\r\n                                        className=\"text\">{information.drop_off_locations && information.drop_off_locations.map((item, index) => {\r\n                                        return <div key={index}> {index + 1}- manzil : {item.address} <br/></div>\r\n\r\n                                    })}</div>\r\n                                </div>\r\n                                <div className=\"info\">\r\n                                    <div className=\"title\">Yekazish manzili:</div>\r\n\r\n                                    <div\r\n                                        className=\"text\">{information.pick_up_locations && information.pick_up_locations.map((item, index) => {\r\n                                        return <div key={index}>{index + 1}- manzil : {item.address} <br/></div>\r\n\r\n                                    })}</div>\r\n                                </div>\r\n                                {\r\n                                    information.extra_services.length > 0 &&\r\n                                    <div className=\"info\">\r\n                                        <div className=\"title\">Qo'shimcha xizmatlar:</div>\r\n\r\n                                        <div\r\n                                            className=\"text\">{information.extra_services && information.extra_services.map((item, index) => {\r\n                                            return <div key={index}>{item.translations[i18next.language].name}</div>\r\n\r\n                                        })}</div>\r\n                                    </div>\r\n                                }\r\n\r\n                                <div className=\"info\">\r\n                                    <div className=\"title\">Yo'lovchilar soni:</div>\r\n                                    <div\r\n                                        className=\"text\">{information.passanger_count}</div>\r\n                                </div>\r\n\r\n                                <div className=\"info\">\r\n                                    <div className=\"title\">To'lov turi:</div>\r\n                                    <div className=\"text\">\r\n                                        {information.payment_type === \"cash\" && \"Naqt\"}\r\n                                        {information.payment_type === \"card\" && \"Karta\"}\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div className=\"info\">\r\n                                    <div className=\"title\">Olib ketish sanasi:</div>\r\n                                    <div className=\"text\">\r\n                                        {information.pick_up_date}\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                {information.car_service.service_type === \"postal\" && <div className=\"info\">\r\n                                    <div className=\"title\">To'lovni kim qiladi:</div>\r\n                                    <div\r\n                                        className=\"text\">\r\n                                        {information.payer === \"sender\" && \"Yuboruvchi\"}\r\n                                        {information.payer === \"receiver\" && \"Qabul qilovchi\"}\r\n                                    </div>\r\n                                </div>}\r\n\r\n                                {information.car_service.service_type === \"postal\" && <div className=\"info\">\r\n                                    <div className=\"title\">Qabul qlivchi telefon raqami:</div>\r\n                                    <div\r\n                                        className=\"text\">\r\n                                        {information.receiver_phone}\r\n                                    </div>\r\n                                </div>}\r\n\r\n                                {information.car_service.service_type === \"postal\" && <div className=\"info\">\r\n                                    <div className=\"title\">Yuboruvchi telefon raqami:</div>\r\n                                    <div\r\n                                        className=\"text\">\r\n                                        {information.sender_phone}\r\n                                    </div>\r\n                                </div>}\r\n\r\n                                {information.status === \"rejected\"\r\n                                    && <div className=\"info\">\r\n                                        <div className=\"title\">Bekor qilish sababi:</div>\r\n                                        <div\r\n                                            className=\"text\">\r\n                                            {information.rejected_reason.translations[i18next.language].name}\r\n                                        </div>\r\n                                    </div>}\r\n\r\n                                {information.comment_to_driver\r\n                                    && <div className=\"info\">\r\n                                        <div className=\"title\">Haydovchi uchun izoh:</div>\r\n                                        <div\r\n                                            className=\"text\">\r\n                                            {information.comment_to_driver}\r\n                                        </div>\r\n                                    </div>}\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalShow.status === \"change-status\" && (\r\n                        <div className=\"change-status\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img\r\n                                    onClick={() => setModalShow({status: \"\", show: false})}\r\n                                    src=\"./images/admin/x.png\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"title\">\r\n                                Buyurtma bosqichini tanlang\r\n                            </div>\r\n                            <div className=\"form-box\">\r\n                                <select onChange={(e) => setOrderStatus(e.target.value)} name=\"status\">\r\n                                    <option value=\"\"></option>\r\n                                    <option value=\"arrived\">Mijozga kelish</option>\r\n                                    <option value=\"picked\">Mijozni olish</option>\r\n                                    <option value=\"started\">Boshlash</option>\r\n                                    <option value=\"finished\">Yakunlash</option>\r\n                                    <option value=\"rejected\">Bekor qilish</option>\r\n                                </select>\r\n\r\n                                {orderStatus === \"rejected\" &&\r\n                                    <>\r\n                                        <label htmlFor=\"reason\">Bekor qilish sababini tanlang:</label>\r\n                                        <select onChange={(e) => setReason(e.target.value)} name=\"status\" id=\"reason\">\r\n                                            <option value=\"\"></option>\r\n                                            {reasonList.map((item, index) => (\r\n                                                <option key={index} value={item.id}>\r\n                                                    {item.translations[i18next.language].name}\r\n                                                </option>\r\n                                            ))}\r\n                                        </select>\r\n                                    </>\r\n                                }\r\n                            </div>\r\n                            <div onClick={changeStatus} className=\"success-btn\">\r\n                                Tasdiqlash\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalShow.status === \"statistic\" && (\r\n                        <div className=\"statistic\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img\r\n                                    onClick={() => setModalShow({status: \"\", show: false})}\r\n                                    src=\"./images/admin/x.png\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"title\">\r\n                                Buyurtmalar statistikasi\r\n                            </div>\r\n                            <div className=\"form-box\">\r\n                                <div className=\"statistic-box\">\r\n                                    <div className=\"name\">\r\n                                        Umumiy:\r\n                                    </div>\r\n\r\n                                    <div className=\"num\">\r\n                                        {statistics.total_orders}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"statistic-box\">\r\n                                    <div className=\"name\">\r\n                                        Yakunlangan:\r\n                                    </div>\r\n\r\n                                    <div className=\"num\">\r\n                                        {statistics.finished_orders}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"statistic-box\">\r\n                                    <div className=\"name\">\r\n                                        Faol:\r\n                                    </div>\r\n\r\n                                    <div className=\"num\">\r\n                                        {statistics.active_orders}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"statistic-box\">\r\n                                    <div className=\"name\">\r\n                                        Bekor qilingan:\r\n                                    </div>\r\n\r\n                                    <div className=\"num\">\r\n                                        {statistics.rejected_orders}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"statistic-box\">\r\n                                    <div className=\"name\">\r\n                                        Bugungi buyurtmalar soni:\r\n                                    </div>\r\n\r\n                                    <div className=\"num\">\r\n                                        {statistics.orders_today}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"statistic-box\">\r\n                                    <div className=\"name\">\r\n                                        Joriy oydagi buyurtmalar soni:\r\n                                    </div>\r\n\r\n                                    <div className=\"num\">\r\n                                        {statistics.orders_this_month}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </CSSTransition>\r\n\r\n        <div className=\"header\">\r\n            <div className=\"left-side\">\r\n                <div className=\"search-box\">\r\n                    <input value={client} onChange={(e) => setClient(e.target.value)} placeholder=\"Mijoz tel raqami\"\r\n                           type=\"text\"/>\r\n                </div>\r\n                <div className=\"search-box\">\r\n                    <input value={driver} onChange={(e) => setDriver(e.target.value)} placeholder=\"Haydovchi tel raqami\"\r\n                           type=\"text\"/>\r\n                </div>\r\n                <div className=\"search-box\">\r\n                    <label htmlFor=\"direction\">Yo'nalish:</label>\r\n                    <select value={direction} onChange={(e) => setDirection(e.target.value)} name=\"direction\"\r\n                            id=\"direction\">\r\n                        <option value=\"\"></option>\r\n                        <option value=\"regional\">\r\n                            Taxi\r\n                        </option>\r\n                        <option value=\"postal\">\r\n                            Jo'natma\r\n                        </option>\r\n                        <option value=\"minivan\">\r\n                            Miniven\r\n                        </option>\r\n                        <option value=\"travel\">\r\n                            Sayohat\r\n                        </option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"search-box\">\r\n                    <label htmlFor=\"tarif\">Tarif:</label>\r\n                    <select value={tarif} onChange={(e) => setTarif(e.target.value)} name=\"tarif\" id=\"tarif\">\r\n                        <option value=\"\"></option>\r\n                        <option value=\"standart\">\r\n                            Standart\r\n                        </option>\r\n                        <option value=\"comfort\">\r\n                            Komfort\r\n                        </option>\r\n                        <option value=\"business\">\r\n                            Biznes\r\n                        </option>\r\n                        <option value=\"delivery\">\r\n                            Jo'natma\r\n                        </option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"search-box\">\r\n                    <label htmlFor=\"status\">Status:</label>\r\n                    <select value={status} onChange={(e) => setStatus(e.target.value)} name=\"status\" id=\"status\">\r\n                        <option value=\"\"></option>\r\n                        <option value=\"rejected\">\r\n                            Bekor qilingan\r\n                        </option>\r\n                        <option value=\"started\">\r\n                            Boshlangan\r\n                        </option>\r\n                        <option value=\"arrived\">\r\n                            Mijozga keldi\r\n                        </option>\r\n                        <option value=\"picked\">\r\n                            Mijozni oldi\r\n                        </option>\r\n                        <option value=\"finished\">\r\n                            Yakunlangan\r\n                        </option>\r\n                        <option value=\"active\">\r\n                            Faol\r\n                        </option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"search-box\">\r\n                    <label htmlFor=\"date\">Sana:</label>\r\n                    <input value={date} onChange={(e) => setDate(e.target.value)} type=\"date\"/>\r\n                </div>\r\n                <div onClick={filterData} className=\"filter-btn\">\r\n                    <img src=\"./images/admin/panel.png\" alt=\"\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"header\">\r\n            <div className=\"left-side\">\r\n\r\n            </div>\r\n            <div onClick={() => setModalShow({show: true, status: \"statistic\"})} className=\"statisitcs\">\r\n                Statistika\r\n                <img src=\"./images/data-management.png\" alt=\"a\"/>\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"wrapper-table\">\r\n            {\r\n                loader ? <LoaderAdmin/> :\r\n                    <table>\r\n                        <thead>\r\n                        <tr>\r\n                            <th>№</th>\r\n                            <th>Mijoz</th>\r\n                            <th>Haydovchi</th>\r\n                            <th>Buyurtma berilgan sana</th>\r\n                            <th>Tarif</th>\r\n                            <th>Buyurtma narxi</th>\r\n                            <th>Batafsil ma'lumotlar</th>\r\n                            <th>Statusni ozgartirish</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {driversList.map((item, index) => {\r\n                            return <tr key={index}>\r\n                                <td>{index + 1}</td>\r\n                                <td>\r\n                                    <div className=\"text-driver\">\r\n                                        <div className=\"name\">\r\n                                            {item.client.first_name} &nbsp;\r\n                                            {item.client.last_name}\r\n                                        </div>\r\n                                        <div className=\"phone\">\r\n                                            {item.client.phone}\r\n                                        </div>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div className=\"text-driver\">\r\n                                        {item.driver && <>\r\n                                            <div className=\"name\">\r\n                                                {item.driver.first_name} &nbsp;\r\n                                                {item.driver.last_name}\r\n                                            </div>\r\n                                            <div className=\"phone\">\r\n                                                {item.driver.phone}\r\n                                            </div>\r\n                                        </>}\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    {item.created_at}\r\n                                </td>\r\n                                <td>\r\n                                    {item.car_category.translations[i18next.language].name}\r\n                                </td>\r\n                                <td>\r\n                                    {item.price} so'm\r\n                                </td>\r\n                                <td>\r\n                                    <div className=\"icon\">\r\n                                        <img onClick={() => {\r\n                                            setInformation(item)\r\n                                            setModalShow({show: true, status: \"car-information\"});\r\n                                        }} src=\"./images/admin/document.png\" alt=\"\"/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n\r\n                                    {item.status === \"rejected\" ? <div className=\"status-red\">\r\n                                        Bekor qilingan\r\n                                    </div> : item.status === \"finished\" ? <div className=\"status-green\">\r\n                                            Yakunlangan\r\n                                        </div> :\r\n                                        <div className=\"icon\">\r\n                                            <div className=\"status-blue\">\r\n                                                {item.status === \"active\" && \"Faol\"}\r\n                                                {item.status === \"started\" && \"Boshlandi\"}\r\n                                                {item.status === \"arrived\" && \"Mijozga keldi\"}\r\n                                                {item.status === \"picked\" && \"Mijozni oldi\"}\r\n                                            </div>\r\n                                            <img onClick={() => {\r\n                                                setOrderId(item.id)\r\n                                                setModalShow({show: true, status: \"change-status\"});\r\n                                            }} className=\"status-icon\" src=\"./images/admin/status.png\" alt=\"\"/>\r\n                                        </div>}\r\n\r\n                                </td>\r\n                            </tr>\r\n                        })}\r\n                        </tbody>\r\n                    </table>\r\n            }\r\n\r\n        </div>\r\n\r\n        <div className=\"pagination\">\r\n            <div onClick={() => {\r\n                if (activeItem > 1) {\r\n                    getList(links.previous, activeItem - 1);\r\n                }\r\n            }} className=\"prev\">\r\n                <img src=\"./images/admin/prev.png\" alt=\"Prev\"/>\r\n            </div>\r\n\r\n            {visiblePages.map((item, index) => (\r\n                <div key={index}\r\n                     onClick={() => {\r\n                         if (item !== \"...\") {\r\n                             getList(null, item);\r\n                         }\r\n                     }}\r\n                     className={`items ${activeItem === item ? \"active\" : \"\"} `}\r\n                     style={{cursor: item === \"...\" ? \"default\" : \"pointer\"}}>\r\n                    {item}\r\n                </div>\r\n            ))}\r\n\r\n            <div className=\"next\" onClick={() => {\r\n                if (activeItem < totalPages) {\r\n                    getList(links.next, activeItem + 1);\r\n                }\r\n            }}>\r\n                <img src=\"./images/admin/next.png\" alt=\"Next\"/>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default Orders","import \"./style.scss\"\nimport {useContext, useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {MyContext} from \"../../App/App\";\nimport i18next from \"i18next\";\nimport {useTranslation} from \"react-i18next\";\n\nconst CarModel = () => {\n    const {t} = useTranslation();\n    let value = useContext(MyContext);\n    const [car_make, setCar_make] = useState([]);\n    const [car_model, setCar_model] = useState([]);\n    const [carBrandId, setCarBrandId] = useState(\"\")\n\n    const [edit, setEdit] = useState(false)\n    const [editId, setEditId] = useState('')\n    const [translations, setTranslations] = useState(\n        {\n            name_uz: \"\",\n            name_ru: \"\",\n            name_en: \"\"\n        })\n\n    const getData = () => {\n        axios.get(`${value.url}/dashboard/carmake/`, {\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n        }).then((response) => {\n            setCar_make(response.data);\n        })\n    }\n\n    useEffect(() => {\n        getData()\n    }, []);\n\n    const addColor = (status) => {\n        const {name_uz, name_ru, name_en} = translations;\n\n        const isAnyNameFilled = name_uz.trim() && name_ru.trim() && name_en.trim();\n\n        if (!isAnyNameFilled) {\n            alert(\"Iltimos, rang nomini kiriting\");\n            return;\n        }\n\n        const translation_list = {\n            uz: {\n                name: name_uz.trim()\n            },\n            ru: {\n                name: name_ru.trim()\n            },\n            en: {\n                name: name_en.trim()\n            }\n        };\n\n        if (status === \"add\") {\n            axios.post(`${value.url}/dashboard/carmodel/`, {make: carBrandId, translations: translation_list},\n                {\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n                })\n                .then((response) => {\n                    setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n                    axios.get(`${value.url}/dashboard/carmake/${carBrandId}/`, {\n                        headers: {\n                            \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\n                        }\n                    }).then((response) => {\n                        setCar_model(response.data);\n                    })\n\n                })\n                .catch((error) => {\n                    console.error(\"Rang qo'shishda xatolik:\", error);\n                });\n        }\n\n        if (status === \"edit\") {\n            axios.put(`${value.url}/dashboard/carmodel/${editId}/`, {translations: translation_list},\n                {\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n                })\n                .then((response) => {\n                    setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n                    setEdit(false);\n                    axios.get(`${value.url}/dashboard/carmake/${carBrandId}/`, {\n                        headers: {\n                            \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\n                        }\n                    }).then((response) => {\n                        setCar_model(response.data);\n                    })\n\n                })\n                .catch((error) => {\n                    console.error(\"Rangni tahrirlashda xatolik:\", error);\n                });\n        }\n    };\n\n    const delColor = (id) => {\n        axios.delete(`${value.url}/dashboard/carmodel/${id}/`, {\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n        }).then((response) => {\n            setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n            axios.get(`${value.url}/dashboard/carmake/${carBrandId}/`, {\n                headers: {\n                    \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\n                }\n            }).then((response) => {\n                setCar_model(response.data);\n            })\n            setEdit(false)\n        })\n    }\n\n    const handleEdit = (color) => {\n        setEdit(true);\n        setEditId(color.id);\n        setTranslations({\n            name_uz: color.translations[\"uz\"].name || \"\",\n            name_ru: color.translations[\"ru\"].name || \"\",\n            name_en: color.translations[\"en\"].name || \"\"\n        });\n    };\n\n    const getCarNames = (e) => {\n        setCarBrandId(e.target.value)\n        axios.get(`${value.url}/dashboard/carmake/${e.target.value}/`, {\n            headers: {\n                \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\n            }\n        }).then((response) => {\n            setCar_model(response.data);\n        })\n    }\n\n    return <div className=\"car-model-wrapper\">\n        <div className=\"header\">\n            <div className=\"form-wrapper\">\n                <label htmlFor=\"\">Moshina brendini tanlang: </label>\n                <select onChange={getCarNames} name=\"car-brand\"\n                        id=\"car-brand\">\n                    <option value=\"\"></option>\n                    {car_make.map((brand) => (\n                        <option key={brand.id} value={brand.id}>\n                            {brand.translations[i18next.language].name}\n                        </option>\n                    ))}\n                </select>\n\n                <input\n                    value={translations.name_uz}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_uz: e.target.value})\n                    }\n                    placeholder=\"Avtomobil nomi (uz)...\"\n                    type=\"text\"\n                />\n\n                <input\n                    value={translations.name_en}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_en: e.target.value})\n                    }\n                    placeholder=\"Car name (en)...\"\n                    type=\"text\"\n                />\n\n                <input\n                    value={translations.name_ru}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_ru: e.target.value})\n                    }\n                    placeholder=\"Название автомобиля (ru)...\"\n                    type=\"text\"\n                />\n\n                {edit ? <div onClick={() => addColor(\"edit\")} className=\"add-color\">\n                    <img src=\"./images/admin/checkmark.png\" alt=\"\"/>\n                </div> : <div onClick={() => addColor(\"add\")} className=\"add-color\">\n                    <img src=\"./images/admin/add.png\" alt=\"\"/>\n                </div>}\n\n            </div>\n        </div>\n        <div className=\"colors-cards\">\n            <div className=\"wrapper-box\">\n                {\n                    car_model.map((color, index) => (\n                        <div key={index} className=\"color-card\">\n                            <div className=\"name\">{color.translations[i18next.language].name}</div>\n                            <div className=\"bttons\">\n                                <div onClick={() => handleEdit(color)} className=\"btn\">\n                                    <img src=\"./images/admin/edit-tools.png\" alt=\"\"/>\n                                </div>\n\n                                <div onClick={() => delColor(color.id)} className=\"btn\">\n                                    <img src=\"./images/admin/delete.png\" alt=\"\"/>\n                                </div>\n                            </div>\n                        </div>\n                    ))\n                }\n            </div>\n        </div>\n    </div>\n}\n\nexport default CarModel;","import {useEffect, useRef, useState, useMemo, useContext} from \"react\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport \"./style.scss\"\r\nimport {MyContext} from \"../../App/App\";\r\nimport axios from \"axios\";\r\n\r\nconst Payment = () => {\r\n    let value = useContext(MyContext);\r\n    const ref = useRef(null);\r\n    const [driversList, setDriversList] = useState([]);\r\n    const [getSearchText, setGetSearchText] = useState(\"\");\r\n    const worksPage = 100;\r\n    const [pageNumber, setPageNumber] = useState(0);\r\n    const pagesVisited = pageNumber * worksPage;\r\n    const [statistics, setStatistics] = useState([]);\r\n\r\n    const pageCount = Math.ceil(driversList.length / worksPage);\r\n\r\n    const changePage = ({selected}) => {\r\n        setPageNumber(selected)\r\n\r\n        setTimeout(() => {\r\n            ref.current?.scrollIntoView({behavior: \"smooth\"});\r\n        }, 500);\r\n    };\r\n\r\n    useEffect(() => {\r\n        axios.get(`${value.url}/dashboard/payment/`, {\r\n            headers: {\r\n                \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\r\n            }\r\n        }).then((response) => {\r\n            console.log(response.data);\r\n            setDriversList(response.data);\r\n        })\r\n    }, []);\r\n\r\n    const productList = driversList.slice(pagesVisited, pagesVisited + worksPage)\r\n        .filter((item) => {\r\n            const searchText = getSearchText.toString().toLowerCase().replace(/\\s+/g, '').replace(/\\+/g, '');\r\n            const phoneNumber = item.balance_id.toString().toLowerCase().replace(/\\s+/g, '').replace(/\\+/g, '');\r\n            return searchText === \"\" || phoneNumber.includes(searchText);\r\n        }).map((item, index) => {\r\n            return <tr key={index}>\r\n                <td>{index + 1}</td>\r\n\r\n                <td>\r\n                    {item.balance_id}\r\n                </td>\r\n\r\n                <td>\r\n                    {item.amount}\r\n                </td>\r\n\r\n                <td>\r\n                    {item.status}\r\n                </td>\r\n                <td>\r\n                    {item.payment_operator}\r\n                </td>\r\n\r\n                <td>\r\n                    {item.updated_at}\r\n                </td>\r\n                <td>\r\n                    {item.reason}\r\n                </td>\r\n            </tr>\r\n        });\r\n\r\n    return <div className=\"payment-container\">\r\n        <div className=\"header\">\r\n            <div className=\"search-box\">\r\n                <img src=\"./images/admin/search.png\" alt=\"\"/>\r\n                <input onChange={(e) => setGetSearchText(e.target.value)} placeholder=\"ID kiritng\" type=\"text\"/>\r\n            </div>\r\n            <div className=\"statisitcs\">\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"wrapper-table\">\r\n            <table>\r\n                <thead>\r\n                <tr>\r\n                    <th>№</th>\r\n                    <th>Balans id</th>\r\n                    <th>Miqdor</th>\r\n                    <th>Status</th>\r\n                    <th>To'lov turi</th>\r\n                    <th>To'lov sanasi</th>\r\n                    <th>Sabab</th>\r\n                </tr>\r\n\r\n                </thead>\r\n\r\n                <tbody>\r\n                {productList}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n\r\n        <div className=\"pagination\">\r\n            {driversList.length > 100 ? <ReactPaginate\r\n                breakLabel=\"...\"\r\n                previousLabel={<img src=\"./images/admin/prev.png\" alt=\"\"/>}\r\n                nextLabel={<img src=\"./images/admin/next.png\" alt=\"\"/>}\r\n                pageCount={pageCount}\r\n                onPageChange={changePage}\r\n                containerClassName={\"paginationBttns\"}\r\n                previousLinkClassName={\"previousBttn\"}\r\n                nextLinkClassName={\"nextBttn\"}\r\n                disabledCalassName={\"paginationDisabled\"}\r\n                activeClassName={\"paginationActive\"}\r\n            /> : \"\"}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Payment","import \"./style.scss\"\nimport {useContext, useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {MyContext} from \"../../App/App\";\nimport i18next from \"i18next\";\n\nconst RejectReason = () => {\n    let value = useContext(MyContext);\n    const [colorsList, setColorsList] = useState([])\n    const [edit, setEdit] = useState(false)\n    const [rejectStatus, setRejectStatus] = useState(\"\")\n    const [editId, setEditId] = useState('')\n    const [translations, setTranslations] = useState(\n        {\n            name_uz: \"\",\n            name_ru: \"\",\n            name_en: \"\"\n        })\n\n    const getData = (status) => {\n        setRejectStatus(status)\n        axios.get(`${value.url}/dashboard/rejectreson/?type=${status}`, {\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n        }).then((response) => {\n            setColorsList(response.data);\n        })\n    }\n\n    const addColor = (status) => {\n        const {name_uz, name_ru, name_en} = translations;\n\n        const isAnyNameFilled = name_uz.trim() && name_ru.trim() && name_en.trim();\n\n        if (!isAnyNameFilled) {\n            alert(\"Iltimos, rang nomini kiriting\");\n            return;\n        }\n\n        const translation_list = {\n            uz: {\n                name: name_uz.trim()\n            },\n            ru: {\n                name: name_ru.trim()\n            },\n            en: {\n                name: name_en.trim()\n            }\n        };\n\n        if (status === \"add\") {\n            axios.post(`${value.url}/dashboard/rejectreson/`, {type: rejectStatus, translations: translation_list},\n                {\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n                })\n                .then((response) => {\n                    setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n                    getData();\n                })\n                .catch((error) => {\n                    console.error(\"Rang qo'shishda xatolik:\", error);\n                });\n        }\n\n        if (status === \"edit\") {\n            axios.put(`${value.url}/dashboard/rejectreson/${editId}/`, {\n                    type: rejectStatus,\n                    translations: translation_list\n                },\n                {\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n                })\n                .then((response) => {\n                    setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n                    getData();\n                    setEdit(false);\n                })\n                .catch((error) => {\n                    console.error(\"Rangni tahrirlashda xatolik:\", error);\n                });\n        }\n    };\n\n    const delColor = (id) => {\n        axios.delete(`${value.url}/dashboard/rejectreson/${id}/`, {\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n        }).then((response) => {\n            setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n            getData()\n            setEdit(false)\n        })\n    }\n\n    const handleEdit = (color) => {\n        setEdit(true);\n        setEditId(color.id);\n        setTranslations({\n            name_uz: color.translations[\"uz\"].name || \"\",\n            name_ru: color.translations[\"ru\"].name || \"\",\n            name_en: color.translations[\"en\"].name || \"\"\n        });\n    };\n\n    return <div className=\"reject-reason-wrapper\">\n        <div className=\"header\">\n            <div className=\"form-wrapper\">\n                <label htmlFor=\"status\">Moshina brendini tanlang: </label>\n                <select onChange={(e) => getData(e.target.value)} name=\"status\"\n                        id=\"status\">\n                    <option value=\"\"></option>\n                    <option value=\"driver\">Haydovchi</option>\n                    <option value=\"client\">Mijoz</option>\n                    <option value=\"admin\">Admin</option>\n                </select>\n\n                <input\n                    value={translations.name_uz}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_uz: e.target.value})\n                    }\n                    placeholder=\"Sabab nomi (uz)...\"\n                    type=\"text\"\n                />\n                <input\n                    value={translations.name_en}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_en: e.target.value})\n                    }\n                    placeholder=\"Reason name (en)...\"\n                    type=\"text\"\n                />\n\n                <input\n                    value={translations.name_ru}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_ru: e.target.value})\n                    }\n                    placeholder=\"Название причины (ru)...\"\n                    type=\"text\"\n                />\n\n\n                {edit ? <div onClick={() => addColor(\"edit\")} className=\"add-color\">\n                    <img src=\"./images/admin/checkmark.png\" alt=\"\"/>\n                </div> : <div onClick={() => addColor(\"add\")} className=\"add-color\">\n                    <img src=\"./images/admin/add.png\" alt=\"\"/>\n                </div>}\n\n            </div>\n        </div>\n        <div className=\"colors-cards\">\n            <div className=\"wrapper-box\">\n                {\n                    colorsList.map((color, index) => (\n                        <div key={index} className=\"color-card\">\n                            <div className=\"name\">{color.translations[i18next.language].name}</div>\n                            <div className=\"bttons\">\n                                <div onClick={() => handleEdit(color)} className=\"btn\">\n                                    <img src=\"./images/admin/edit-tools.png\" alt=\"\"/>\n                                </div>\n\n                                <div onClick={() => delColor(color.id)} className=\"btn\">\n                                    <img src=\"./images/admin/delete.png\" alt=\"\"/>\n                                </div>\n                            </div>\n                        </div>\n                    ))\n                }\n            </div>\n        </div>\n    </div>\n}\n\nexport default RejectReason;","import \"./style.scss\"\nimport {useContext, useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {MyContext} from \"../../App/App\";\nimport i18next from \"i18next\";\nimport {useTranslation} from \"react-i18next\";\n\nconst ExtraServices = () => {\n    const {t} = useTranslation();\n    let value = useContext(MyContext);\n    const [colorsList, setColorsList] = useState([])\n    const [edit, setEdit] = useState(false)\n    const [editId, setEditId] = useState('')\n    const [isMain, setIsMain] = useState(false);\n    const [price, setPrice] = useState(\"\");\n    const [translations, setTranslations] = useState(\n        {\n            name_uz: \"\",\n            name_ru: \"\",\n            name_en: \"\"\n        })\n\n    const getData = () => {\n        axios.get(`${value.url}/dashboard/extraservices/`, {\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n        }).then((response) => {\n            setColorsList(response.data);\n        })\n    }\n\n    useEffect(() => {\n        getData()\n    }, []);\n\n    const addColor = (status) => {\n        const {name_uz, name_ru, name_en} = translations;\n\n        const isAnyNameFilled = name_uz.trim() && name_ru.trim() && name_en.trim();\n\n        if (!isAnyNameFilled) {\n            alert(\"Iltimos, formani toldiring\");\n            return;\n        }\n\n        const translation_list = {\n            uz: {\n                name: name_uz.trim()\n            },\n            ru: {\n                name: name_ru.trim()\n            },\n            en: {\n                name: name_en.trim()\n            }\n        };\n\n        if (status === \"add\") {\n            axios.post(`${value.url}/dashboard/extraservices/`, {\n                    is_main: isMain,\n                    price,\n                    translations: translation_list\n                },\n                {\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n                })\n                .then((response) => {\n                    setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n                    setIsMain(false);\n                    setPrice(\"\")\n                    getData();\n                })\n                .catch((error) => {\n                    console.error(\"Xizmat qo'shishda xatolik:\", error);\n                });\n        }\n\n        if (status === \"edit\") {\n            axios.put(`${value.url}/dashboard/extraservices/${editId}/`, {\n                    is_main: isMain,\n                    price,\n                    translations: translation_list\n                },\n                {\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n                })\n                .then((response) => {\n                    setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n                    getData();\n                    setEdit(false);\n                    setIsMain(false);\n                    setPrice(\"\")\n                })\n                .catch((error) => {\n                    console.error(\"Rangni tahrirlashda xatolik:\", error);\n                });\n        }\n    };\n\n    const delColor = (id) => {\n        axios.delete(`${value.url}/dashboard/extraservices/${id}/`, {\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n        }).then((response) => {\n            setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n            getData()\n            setEdit(false)\n        })\n    }\n\n    const handleEdit = (color) => {\n        setEdit(true);\n        setEditId(color.id);\n        setTranslations({\n            name_uz: color.translations[\"uz\"].name || \"\",\n            name_ru: color.translations[\"ru\"].name || \"\",\n            name_en: color.translations[\"en\"].name || \"\"\n        });\n        setIsMain(color.is_main)\n        setPrice(color.price)\n    };\n\n    const handleCheckboxChange = () => {\n        setIsMain(!isMain);\n    };\n\n    return <div className=\"extra-services-wrapper\">\n        <div className=\"header\">\n            <div className=\"form-wrapper\">\n\n                <label htmlFor=\"ismain\" className=\"ismain\">\n                    <div className=\"name\">\n                        Asosiymi?\n                    </div>\n\n                    <input\n                        type=\"checkbox\"\n                        checked={isMain}\n                        id=\"ismain\"\n                        onChange={handleCheckboxChange}\n                    />\n                </label>\n\n                <input\n                    value={price}\n                    onChange={(e) => setPrice(e.target.value)}\n                    placeholder=\"Narx\"\n                    type=\"number\"\n                />\n\n\n                <input\n                    value={translations.name_uz}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_uz: e.target.value})\n                    }\n                    placeholder=\"Xizmat nomi (uz)...\"\n                    type=\"text\"\n                />\n                <input\n                    value={translations.name_en}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_en: e.target.value})\n                    }\n                    placeholder=\"Price name (en)...\"\n                    type=\"text\"\n                />\n\n                <input\n                    value={translations.name_ru}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_ru: e.target.value})\n                    }\n                    placeholder=\"Название услуги (ru)...\"\n                    type=\"text\"\n                />\n\n\n                {edit ? <div onClick={() => addColor(\"edit\")} className=\"add-color\">\n                    <img src=\"./images/admin/checkmark.png\" alt=\"\"/>\n                </div> : <div onClick={() => addColor(\"add\")} className=\"add-color\">\n                    <img src=\"./images/admin/add.png\" alt=\"\"/>\n                </div>}\n\n            </div>\n        </div>\n        <div className=\"colors-cards\">\n            <div className=\"wrapper-box\">\n                {\n                    colorsList.map((service, index) => (\n                        <div key={index} className={`color-card ${service.is_main && \"ismain\"}`}>\n                            <div className=\"name\">{service.translations[i18next.language].name}: {service.price} so'm\n                            </div>\n                            <div className=\"bttons\">\n                                <div onClick={() => handleEdit(service)} className=\"btn\">\n                                    <img src=\"./images/admin/edit-tools.png\" alt=\"\"/>\n                                </div>\n\n                                <div onClick={() => delColor(service.id)} className=\"btn\">\n                                    <img src=\"./images/admin/delete.png\" alt=\"\"/>\n                                </div>\n                            </div>\n                        </div>\n                    ))\n                }\n            </div>\n        </div>\n    </div>\n}\n\nexport default ExtraServices;","import {useEffect, useRef, useState, useContext} from \"react\";\r\nimport {CSSTransition} from \"react-transition-group\";\r\nimport {useFormik} from \"formik\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport {\r\n    TextField,\r\n    MenuItem,\r\n    InputLabel,\r\n    FormControl,\r\n    Select\r\n} from \"@mui/material\";\r\nimport \"./style.scss\"\r\nimport axios from \"axios\";\r\nimport {MyContext} from \"../../App/App\";\r\nimport i18next from \"i18next\";\r\nimport LoaderAdmin from \"../loader-admin/LoaderAdmin\";\r\n\r\nconst Price = () => {\r\n    const [loader, setLoader] = useState(false);\r\n    let value = useContext(MyContext);\r\n    const [modalShow, setModalShow] = useState({show: false, status: false});\r\n    const nodeRef = useRef(null);\r\n    const [direction, setDirection] = useState([])\r\n    const [tarif, setTarif] = useState([]);\r\n    const [regions, setRegions] = useState([]);\r\n    const [serviceList, setServiceList] = useState([]);\r\n    const [editId, setEditId] = useState(\"\");\r\n    const ref = useRef(null);\r\n    const worksPage = 50;\r\n    const [pageNumber, setPageNumber] = useState(0);\r\n    const pagesVisited = pageNumber * worksPage;\r\n\r\n    const [from, setFrom] = useState(\"\");\r\n    const [to, setTo] = useState(\"\");\r\n    const [category, setCategory] = useState(\"\");\r\n    const [service, setService] = useState(\"\");\r\n\r\n    const changePage = ({selected}) => {\r\n        setPageNumber(selected)\r\n\r\n        setTimeout(() => {\r\n            ref.current?.scrollIntoView({behavior: \"smooth\"});\r\n        }, 500);\r\n    };\r\n\r\n    const validate = (values) => {\r\n        const errors = {};\r\n\r\n        if (!values.car_service) {\r\n            errors.car_service = \"Required\";\r\n        }\r\n\r\n        if (!values.car_category) {\r\n            errors.car_category = \"Required\";\r\n        }\r\n        if (!values.from_region) {\r\n            errors.from_region = \"Required\";\r\n        }\r\n        if (!values.to_region) {\r\n            errors.to_region = \"Required\";\r\n        }\r\n        if (!values.price) {\r\n            errors.price = \"Required\";\r\n        }\r\n\r\n        return errors;\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            car_service: \"\",\r\n            car_category: \"\",\r\n            from_region: \"\",\r\n            to_region: \"\",\r\n            price: \"\",\r\n        },\r\n        validate,\r\n        onSubmit: (values) => {\r\n            sendAllInfo()\r\n        },\r\n    });\r\n\r\n    const sendAllInfo = () => {\r\n        let allInfo = {\r\n            service: formik.values.car_service,\r\n            category: formik.values.car_category,\r\n            from_region: formik.values.from_region,\r\n            to_region: formik.values.to_region,\r\n            cost: Number(formik.values.price),\r\n        }\r\n\r\n        if (!editId) {\r\n            axios.post(`${value.url}/dashboard/price/`, allInfo, {\r\n                headers: {\r\n                    Authorization: `Token ${localStorage.getItem(\"token\")}`,\r\n                },\r\n            }).then((response) => {\r\n                getDrivers()\r\n                setModalShow({status: \"\", show: false})\r\n                formik.resetForm();\r\n            })\r\n        }\r\n\r\n        if (editId) {\r\n            axios.put(`${value.url}/dashboard/price/${editId}/`, allInfo,\r\n                {\r\n                    headers: {\r\n                        Authorization: `Token ${localStorage.getItem(\"token\")}`,\r\n                    },\r\n                }).then((response) => {\r\n                getDrivers()\r\n                setModalShow({status: \"\", show: false})\r\n                formik.resetForm();\r\n                setEditId(\"\")\r\n            })\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getDrivers()\r\n\r\n        axios.get(`${value.url}/dashboard/region/`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setRegions(response.data);\r\n        })\r\n\r\n        axios.get(`${value.url}/dashboard/carcategory/`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setTarif(response.data);\r\n        })\r\n\r\n        axios.get(`${value.url}/dashboard/carservice/`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setDirection(response.data);\r\n        })\r\n\r\n    }, []);\r\n\r\n    const delColor = (id) => {\r\n        axios.delete(`${value.url}/dashboard/price/${id}/`, {\r\n            headers: {\r\n                Authorization: `Token ${localStorage.getItem(\"token\")}`,\r\n            },\r\n        }).then((response) => {\r\n            getDrivers()\r\n        })\r\n    }\r\n\r\n    const getDrivers = () => {\r\n        setLoader(true);\r\n\r\n        axios.get(`${value.url}/dashboard/price/`, {\r\n            headers: {\r\n                Authorization: `Token ${localStorage.getItem(\"token\")}`,\r\n            },\r\n        }).then((response) => {\r\n            setServiceList(response.data);\r\n            console.log(response.data);\r\n        }).finally(() => {\r\n            setLoader(false);\r\n        });\r\n    }\r\n\r\n    const editValues = (service) => {\r\n        setEditId(service.id)\r\n        setModalShow({show: true, status: \"edit-driver\"});\r\n        formik.setValues({\r\n            car_service: service.service.id,\r\n            car_category: service.category.id,\r\n            from_region: service.from_region.id,\r\n            to_region: service.to_region.id,\r\n            price: service.cost,\r\n        });\r\n    }\r\n\r\n    const filteredList = serviceList.filter(item => {\r\n        const matchesService = service ? item.service.service_type === service : true;\r\n        const matchesCategory = category ? item.category.category_type === category : true;\r\n        const matchesFrom = from ? item.from_region.id === from : true;\r\n        const matchesTo = to ? item.to_region.id === to : true;\r\n\r\n        return matchesService && matchesCategory && matchesFrom && matchesTo;\r\n    });\r\n\r\n    const pageCount = Math.ceil(filteredList.length / worksPage);\r\n\r\n    const productList = filteredList\r\n        .slice(pagesVisited, pagesVisited + worksPage)\r\n        .map((item, index) => (\r\n            <tr key={index}>\r\n                <td>{index + 1}</td>\r\n                <td>{item.service.translations?.[i18next.language]?.name}</td>\r\n                <td>{item.category.translations?.[i18next.language]?.name}</td>\r\n                <td>{item.from_region.translations?.[i18next.language]?.name}</td>\r\n                <td>{item.to_region.translations?.[i18next.language]?.name}</td>\r\n                <td>{item.cost}</td>\r\n                <td>\r\n                    <div className=\"icon\">\r\n                        <img onClick={() => delColor(item.id)} src=\"./images/admin/delete.png\" alt=\"\"/>\r\n                    </div>\r\n                </td>\r\n                <td></td>\r\n                <div className=\"edit-icon\">\r\n                    <img onClick={() => editValues(item)} src=\"./images/admin/edit-tools.png\" alt=\"\"/>\r\n                </div>\r\n            </tr>\r\n        ));\r\n\r\n    return <div className=\"price-container\">\r\n        <CSSTransition\r\n            in={modalShow.show}\r\n            nodeRef={nodeRef}\r\n            timeout={300}\r\n            classNames=\"alert\"\r\n            unmountOnExit\r\n        >\r\n            <div className=\"modal-sloy\">\r\n                <div ref={nodeRef} className=\"modal-card\">\r\n\r\n                    {modalShow.status === \"add-driver\" && (\r\n                        <div className=\"add-driver\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img\r\n                                    onClick={() => {\r\n                                        setModalShow({status: \"\", show: false})\r\n                                        formik.resetForm()\r\n                                    }}\r\n                                    src=\"./images/admin/x.png\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"title\">Narx qo'shish</div>\r\n\r\n                            <div className=\"form-container\">\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Yo'nalish</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.car_service === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.car_service}\r\n                                                label=\"Yo'nalish\"\r\n                                                name=\"car_service\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {direction.map((item, index) => (\r\n                                                    <MenuItem key={index} value={item.id}>\r\n                                                        {item.translations[i18next.language].name}\r\n                                                    </MenuItem>\r\n                                                ))}\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Tarif</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.car_category === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.car_category}\r\n                                                label=\"Tarif\"\r\n                                                name=\"car_category\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {tarif.map((item, index) => (\r\n                                                    <MenuItem key={index} value={item.id}>\r\n                                                        {item.translations[i18next.language].name}\r\n                                                    </MenuItem>\r\n                                                ))}\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Qayerdan</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.from_region === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.from_region}\r\n                                                label=\"Qayerdan\"\r\n                                                name=\"from_region\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {\r\n                                                    regions.map((item, index) => {\r\n                                                        return <MenuItem key={index}\r\n                                                                         value={item.id}>\r\n                                                            {item.translations[i18next.language].name}\r\n                                                        </MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Qayerga</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.to_region === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.to_region}\r\n                                                label=\"Qayerga\"\r\n                                                name=\"to_region\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {\r\n                                                    regions.map((item, index) => {\r\n                                                        return <MenuItem key={index}\r\n                                                                         value={item.id}>\r\n                                                            {item.translations[i18next.language].name}\r\n                                                        </MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.price === \"Required\"}\r\n                                            value={formik.values.price}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"price\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Narxi\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div onClick={sendAllInfo} className=\"add-btn\">\r\n                                    Narx qo'shish\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalShow.status === \"edit-driver\" && (\r\n                        <div className=\"add-driver\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img\r\n                                    onClick={() =>{\r\n                                        setModalShow({status: \"\", show: false})\r\n                                        formik.resetForm();\r\n                                        setEditId(\"\")\r\n                                    }}\r\n                                    src=\"./images/admin/x.png\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"title\">Narxni tahrirlash</div>\r\n\r\n                            <div className=\"form-container\">\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Yo'nalish</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.car_service === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.car_service}\r\n                                                label=\"Yo'nalish\"\r\n                                                name=\"car_service\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {direction.map((item, index) => (\r\n                                                    <MenuItem key={index} value={item.id}>\r\n                                                        {item.translations[i18next.language].name}\r\n                                                    </MenuItem>\r\n                                                ))}\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Tarif</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.car_category === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.car_category}\r\n                                                label=\"Tarif\"\r\n                                                name=\"car_category\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {tarif.map((item, index) => (\r\n                                                    <MenuItem key={index} value={item.id}>\r\n                                                        {item.translations[i18next.language].name}\r\n                                                    </MenuItem>\r\n                                                ))}\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Qayerdan</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.from_region === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.from_region}\r\n                                                label=\"Qayerdan\"\r\n                                                name=\"from_region\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {\r\n                                                    regions.map((item, index) => {\r\n                                                        return <MenuItem key={index}\r\n                                                                         value={item.id}>\r\n                                                            {item.translations[i18next.language].name}\r\n                                                        </MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Qayerga</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.to_region === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.to_region}\r\n                                                label=\"Qayerga\"\r\n                                                name=\"to_region\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {\r\n                                                    regions.map((item, index) => {\r\n                                                        return <MenuItem key={index}\r\n                                                                         value={item.id}>\r\n                                                            {item.translations[i18next.language].name}\r\n                                                        </MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.price === \"Required\"}\r\n                                            value={formik.values.price}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"price\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Narxi\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div onClick={sendAllInfo} className=\"add-btn\">\r\n                                    Saqlash\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                </div>\r\n            </div>\r\n        </CSSTransition>\r\n\r\n        <div className=\"header\">\r\n            <div className=\"filter-form\">\r\n                <div className=\"select-sides\">\r\n                    <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                        <InputLabel id=\"demo-select-large-label\">Yo'nalish</InputLabel>\r\n                        <Select\r\n                            labelid=\"demo-select-small-label\"\r\n                            id=\"demo-select-small\"\r\n                            value={service}\r\n                            label=\"Qayerga\"\r\n                            name=\"service\"\r\n                            onChange={(e) => setService(e.target.value)}\r\n                        >\r\n                            {direction.map((item, index) => (\r\n                                <MenuItem key={index} value={item.service_type}>\r\n                                    {item.translations[i18next.language].name}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                </div>\r\n\r\n                <div className=\"select-sides\">\r\n                    <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                        <InputLabel id=\"demo-select-large-label\">Tarif</InputLabel>\r\n                        <Select\r\n                            labelid=\"demo-select-small-label\"\r\n                            id=\"demo-select-small\"\r\n                            value={category}\r\n                            label=\"Tarif\"\r\n                            name=\"car_category\"\r\n                            onChange={(e) => setCategory(e.target.value)}\r\n                        >\r\n                            {tarif.map((item, index) => (\r\n                                <MenuItem key={index} value={item.category_type}>\r\n                                    {item.translations[i18next.language].name}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                </div>\r\n\r\n                <div className=\"select-sides\">\r\n                    <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                        <InputLabel id=\"demo-select-large-label\">Qayerdan</InputLabel>\r\n                        <Select\r\n                            labelid=\"demo-select-small-label\"\r\n                            id=\"demo-select-small\"\r\n                            value={from}\r\n                            label=\"Qayerdan\"\r\n                            name=\"from\"\r\n                            onChange={(e) => setFrom(e.target.value)}\r\n                        >\r\n                            {\r\n                                regions.map((item, index) => {\r\n                                    return <MenuItem key={index}\r\n                                                     value={item.id}>\r\n                                        {item.translations[i18next.language].name}\r\n                                    </MenuItem>\r\n                                })\r\n                            }\r\n                        </Select>\r\n                    </FormControl>\r\n                </div>\r\n\r\n                <div className=\"select-sides\">\r\n                    <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                        <InputLabel id=\"demo-select-large-label\">Qayerga</InputLabel>\r\n                        <Select\r\n                            labelid=\"demo-select-small-label\"\r\n                            id=\"demo-select-small\"\r\n                            value={to}\r\n                            label=\"Qayerga\"\r\n                            name=\"to\"\r\n                            onChange={(e) => setTo(e.target.value)}\r\n                        >\r\n                            {\r\n                                regions.map((item, index) => {\r\n                                    return <MenuItem key={index}\r\n                                                     value={item.id}>\r\n                                        {item.translations[i18next.language].name}\r\n                                    </MenuItem>\r\n                                })\r\n                            }\r\n                        </Select>\r\n                    </FormControl>\r\n                </div>\r\n            </div>\r\n\r\n            <div onClick={() => {\r\n                setModalShow({show: true, status: \"add-driver\"});\r\n            }} className=\"add-driver-btn\">\r\n                Narx qo'shish\r\n            </div>\r\n        </div>\r\n\r\n        {loader ? <LoaderAdmin/> : <div className=\"table-wrapper\">\r\n            <table>\r\n                <thead>\r\n                <tr>\r\n                    <th>№</th>\r\n                    <th>Yo'nalish</th>\r\n                    <th>Tarif</th>\r\n                    <th>Qayerdan</th>\r\n                    <th>Qayerga</th>\r\n                    <th>Narx</th>\r\n                    <th>O'chirish</th>\r\n                    <th></th>\r\n                </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                {productList}\r\n                </tbody>\r\n            </table>\r\n        </div>}\r\n\r\n        <div className=\"pagination\">\r\n            {serviceList.length > 50 ? <ReactPaginate\r\n                breakLabel=\"...\"\r\n                previousLabel={<img src=\"./images/admin/prev.png\" alt=\"\"/>}\r\n                nextLabel={<img src=\"./images/admin/next.png\" alt=\"\"/>}\r\n                pageCount={pageCount}\r\n                onPageChange={changePage}\r\n                containerClassName={\"paginationBttns\"}\r\n                previousLinkClassName={\"previousBttn\"}\r\n                nextLinkClassName={\"nextBttn\"}\r\n                disabledCalassName={\"paginationDisabled\"}\r\n                activeClassName={\"paginationActive\"}\r\n            /> : \"\"}\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default Price","\r\nimport MainHome from \"./components/admin/admin home/MainHome\";\r\nimport Admin from \"./components/admin/Admin/Admin\";\r\nimport LoginAdmin from \"./components/login/LoginAdmin\";\r\nimport Drivers from \"./components/admin/drivers/Drivers\";\r\nimport ChatDriver from \"./components/admin/chat/ChatDriver\";\r\nimport Clients from \"./components/admin/clients/Clients\";\r\nimport Colors from \"./components/admin/colors/Colors\";\r\nimport CarBrand from \"./components/admin/car-brend/CarBrand\";\r\nimport Service from \"./components/admin/service/Service\";\r\nimport Balance from \"./components/admin/balance/Balance\";\r\nimport Orders from \"./components/admin/orders/Orders\";\r\nimport CarModel from \"./components/admin/car-model/CarModel\";\r\nimport Payment from \"./components/admin/payment/Payment\";\r\nimport RejectReason from \"./components/admin/reject-reason/RejectReason\";\r\nimport ExtraServices from \"./components/admin/extra-services/ExtraServices\";\r\nimport Price from \"./components/admin/price/Price\";\r\n\r\nexport const publicRoutes = [\r\n    {\r\n        path: \"/\",\r\n        element: <LoginAdmin/>\r\n    }];\r\n\r\nexport const adminRoutes = [\r\n    {\r\n        path: \"/*\",\r\n        element: <Admin/>\r\n    },\r\n];\r\n\r\nexport const adminPageRoutes = [\r\n    {\r\n        path: \"/\",\r\n        element: <MainHome/>\r\n    },\r\n    {\r\n        path: \"/drivers\",\r\n        element: <Drivers/>\r\n    },\r\n    {\r\n        path: \"/clients\",\r\n        element: <Clients/>\r\n    },\r\n    {\r\n        path: \"/chat-drivers\",\r\n        element: <ChatDriver/>\r\n    },\r\n    {\r\n        path: \"/colors\",\r\n        element: <Colors/>\r\n    },\r\n    {\r\n        path: \"/car-brands\",\r\n        element: <CarBrand/>\r\n    },\r\n    {\r\n        path: \"/car-models\",\r\n        element: <CarModel/>\r\n    },\r\n    {\r\n        path: \"/service\",\r\n        element: <Service/>\r\n    },\r\n    {\r\n        path: \"/balance\",\r\n        element: <Balance/>\r\n    },\r\n    {\r\n        path: \"/orders\",\r\n        element: <Orders/>\r\n    },\r\n    {\r\n        path: \"/payment\",\r\n        element: <Payment/>\r\n    },\r\n    {\r\n        path: \"/reject-reason\",\r\n        element: <RejectReason/>\r\n    },\r\n    {\r\n        path: \"/extra-services\",\r\n        element: <ExtraServices/>\r\n    },\r\n\r\n    {\r\n        path: \"/price\",\r\n        element: <Price/>\r\n    },\r\n\r\n];","import \"./not-found.scss\"\r\n\r\nconst NotFound = () => {\r\n    return <div className=\"not-found-wrapper\">\r\n        <div className=\"sloy\">\r\n            <div className=\"text1\">\r\n                <div className=\"error\">\r\n                    error 404\r\n                </div>\r\n                <div className=\"text\">\r\n                    Page not found\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport default NotFound","import React, {useMemo, useState, createContext} from \"react\";\r\nimport {Routes, Route} from \"react-router-dom\";\r\nimport {adminRoutes, publicRoutes} from \"../../rootes\";\r\nimport NotFound from \"../notFound/NotFound\";\r\n\r\nexport const MyContext = createContext();\r\n\r\nfunction App() {\r\n    const [url, setUrl] = useState('https://api.adataxi.uz');\r\n\r\n    const admin = useMemo(() => localStorage.getItem('admin'), []);\r\n\r\n    const routes = useMemo(() => {\r\n        if (admin) return adminRoutes;\r\n        return publicRoutes\r\n    }, [admin]);\r\n\r\n    return (\r\n        <>\r\n            <MyContext.Provider value={{\r\n                url\r\n            }}>\r\n                <Routes>\r\n                    {\r\n                        routes.map((route, index) => (\r\n                            <Route key={index} {...route} />\r\n                        ))\r\n                    }\r\n                    <Route path={'*'} element={<NotFound/>}/>\r\n                </Routes>\r\n\r\n            </MyContext.Provider>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;"],"names":["Loader","_jsx","_Fragment","children","className","MainHome","statisitc","setStatisitc","useState","sockedContext","setSockedContext","locationsList","setLocationsList","center","setCenter","useEffect","localStorage","getItem","websocket","W3CWebSocket","concat","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","lat","lng","axios","get","then","response","data","onmessage","event","_data$message","JSON","parse","message","code","removeItem","window","location","pathname","action","console","log","isLoaded","useLoadScript","googleMapsApiKey","options","useMemo","disableDefaultUI","clickableIcons","selectedLocation","setSelectedLocation","icon","url","scaledSize","width","height","_jsxs","src","alt","drivers","clients","avilable_drivers","rides","GoogleMap","zoom","mapContainerClassName","map","item","index","MarkerF","onClick","InfoWindow","Number","onCloseClick","car_number","phone_number","Admin","t","useTranslation","useContext","MyContext","navigate","useNavigate","adminMenu","setAdminMenu","language","name","country_code","img","NavLink","to","_ref","isActive","Dropdown","Toggle","variant","id","loading","i18next","Menu","_ref2","Item","setItem","changeLanguage","confirm","Routes","adminPageRoutes","route","Route","_objectSpread","useOnKeyPress","callback","targetKey","keyPressHandler","key","addEventListener","removeEventListener","LoginAdmin","value","phone","setPhone","password","setPassword","HandleLogin","trim","length","user","username","post","token","catch","error","status","alert","Clear","onChange","e","target","placeholder","type","onKeyUp","LoaderAdmin","Drivers","modalShow","setModalShow","show","nodeRef","useRef","ref","getSearchText","setGetSearchText","driverPhoto","setDriverPhoto","carInformation","setCarInformation","driversList","setDriversList","driverId","setDriverId","reason","setReason","loader","setLoader","car_serviceId","setCarServiceId","car_categoriesId","setCarCategoriesId","regions","setRegions","luggage","setLuggage","profileImage","setProfileImage","car_images","setCar_images","base_car_images","setBase_Car_images","doc_images","setDocImages","base_doc_images","setBaseDocImages","car_make","setCar_make","car_model","setCar_model","car_colors","setCar_colors","extra_services","setExtra_services","extra_servicesList","setExtra_servicesList","car_categories","setCar_categories","car_service","setCar_service","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","pageNumber","setPageNumber","pagesVisited","confirmFilter","setConfirmFilter","isOpen","setIsOpen","currentImage","setCurrentImage","formik","useFormik","initialValues","first_name","last_name","birth_date","car_color","seat_count","from_region","to_region","validate","values","errors","onSubmit","sendAllInfo","getDrivers","headers","finally","getCarNames","getInputPhoto","file","files","formData","FormData","role","gender","is_verified","is_confirmed","driver","append","Array","isArray","forEach","resetForm","patch","blockDriver","driver_id","getCarImages","getDocsImages","filteredDrivers","filter","_item$phone","searchText","toString","toLowerCase","replace","phoneNumber","matchesSearch","includes","matchesConfirm","pageCount","Math","ceil","productList","slice","profile_image","user_name","created_at","translations","getInformation","available_services","available_categories","is_block","delDriver","delete","setValues","service","CSSTransition","in","timeout","classNames","unmountOnExit","TextField","handleChange","sx","m","minWidth","size","label","htmlFor","FormControl","InputLabel","Select","labelid","MenuItem","touched","Boolean","helperText","inputProps","min","fullWidth","labelId","multiple","setFieldValue","split","input","OutlinedInput","renderValue","selected","find","i","join","Checkbox","checked","ListItemText","primary","handleSubmit","rate","finished_orders_count","category","handleCheckboxChangeService","serviceId","prevSelected","handleCheckboxChangeCategory","verify","image","setTimeout","handleDeleteImageBase","driver_car_image","preview","prevImages","_","handleDeleteImage","reader","FileReader","onloadend","result","readAsDataURL","addCar_Images","handleDeleteImageDocsBase","driver_document_image","handleDeleteImageDocs","addCar_Images_Docs","Lightbox","mainSrc","onCloseRequest","ReactPaginate","breakLabel","previousLabel","nextLabel","onPageChange","_ref$current","current","scrollIntoView","behavior","containerClassName","previousLinkClassName","nextLinkClassName","disabledCalassName","activeClassName","ChatDriver","bodyRef","chats","setChats","setMessage","activeCHat","setActiveChat","messageText","setMessageText","scrollTop","scrollHeight","Authorization","user_phone","chat","getMessage","title","chat_id","closed","delChat","author","is_admin","time","sendMessage","room","Clients","client_id","Colors","setTranslations","name_uz","name_ru","name_en","colorsList","setColorsList","edit","setEdit","editId","setEditId","getData","addColor","translation_list","uz","ru","en","put","color","handleEdit","delColor","CarBrand","Service","serviceList","setServiceList","start_price","price_per_km","price_per_min","wait_price_per_min","free_wait_time","includedCars","allInfo","editValues","Balance","_item$driver_phone","driver_phone","driver_name","id_number","fund","Orders","links","setLinks","Pages","setPages","activeItem","setActiveItem","orderStatus","setOrderStatus","orderId","setOrderId","reasonList","setReasonList","statistics","setStatistics","information","setInformation","client","setClient","setDriver","setStatus","direction","setDirection","tarif","setTarif","date","setDate","visiblePages","totalPages","push","max","getList","arguments","undefined","page","main","results","pages","distance","end_date","drop_off_locations","address","pick_up_locations","passanger_count","payment_type","pick_up_date","service_type","payer","receiver_phone","sender_phone","rejected_reason","comment_to_driver","changeStatus","order_id","reason_id","total_orders","finished_orders","active_orders","rejected_orders","orders_today","orders_this_month","filterData","car_category","price","previous","cursor","next","CarModel","carBrandId","setCarBrandId","make","brand","Payment","balance_id","amount","payment_operator","updated_at","RejectReason","rejectStatus","setRejectStatus","ExtraServices","isMain","setIsMain","setPrice","is_main","handleCheckboxChange","Price","from","setFrom","setTo","setCategory","setService","cost","filteredList","matchesService","matchesCategory","category_type","matchesFrom","matchesTo","_item$service$transla","_item$service$transla2","_item$category$transl","_item$category$transl2","_item$from_region$tra","_item$from_region$tra2","_item$to_region$trans","_item$to_region$trans2","publicRoutes","path","element","adminRoutes","NotFound","createContext","setUrl","admin","routes","Provider"],"sourceRoot":""}
{"version":3,"file":"static/js/412.2995c577.chunk.js","mappings":"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","sources":["components/admin/admin home/loader/Loader.jsx","components/admin/admin home/MainHome.jsx","components/admin/Admin/Admin.jsx","components/login/useOnKeyPress.js","components/login/LoginAdmin.jsx","components/admin/loader-admin/LoaderAdmin.js","components/admin/drivers/Drivers.jsx","components/admin/chat/ChatDriver.jsx","components/admin/clients/Clients.jsx","components/admin/colors/Colors.jsx","components/admin/car-brend/CarBrand.jsx","components/admin/service/Service.jsx","components/admin/balance/Balance.jsx","components/admin/orders/Orders.jsx","components/admin/car-model/CarModel.jsx","components/admin/payment/Payment.jsx","components/admin/reject-reason/RejectReason.jsx","components/admin/extra-services/ExtraServices.jsx","components/admin/price/Price.jsx","rootes.jsx","components/notFound/NotFound.jsx","components/App/App.js"],"sourcesContent":["import \"./loader.scss\";\r\n\r\nconst Loader = () => {\r\n    return <>\r\n        <div className=\"spinner-container\">\r\n            <div className=\"sloy\">\r\n                <span className=\"loader\"></span>\r\n            </div>\r\n\r\n        </div>\r\n    </>\r\n};\r\n\r\nexport default Loader;","import \"./adminHome.scss\"\r\nimport {useEffect, useMemo, useState, createContext} from \"react\"\r\nimport {GoogleMap, useLoadScript, MarkerF} from \"@react-google-maps/api\";\r\nimport Loader from \"./loader/Loader\";\r\nimport axios from \"axios\";\r\nimport {w3cwebsocket as W3CWebSocket} from \"websocket\";\r\n\r\nconst API_KEY = \"AIzaSyBEN2azIRg6YCHa-tV8yAEUJoHsn__fRBM\";\r\n\r\nconst MainHome = () => {\r\n    const [statisitc, setStatisitc] = useState([]);\r\n    const [sockedContext, setSockedContext] = useState(null);\r\n    const [locationsList, setLocationsList] = useState([]);\r\n    const [center, setCenter] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (!localStorage.getItem(\"token\")) return;\r\n\r\n        const websocket = new W3CWebSocket(`wss://api.adataxi.uz/ws/client/?token=${localStorage.getItem(\"token\")}`);\r\n        setSockedContext(websocket);\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        navigator.geolocation.getCurrentPosition((position) => {\r\n            const {latitude, longitude} = position.coords;\r\n            let locMy = {lat: latitude, lng: longitude};\r\n            setCenter(locMy);\r\n        });\r\n\r\n\r\n        axios.get(`https://api.adataxi.uz/api/v1/site/statistics/`).then((response) => {\r\n            setStatisitc(response.data[0])\r\n        })\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (!sockedContext) return;\r\n        sockedContext.onmessage = (event) => {\r\n            const data = JSON.parse(event.data);\r\n            if (data.message?.code === -35) {\r\n                localStorage.removeItem(\"token\");\r\n                localStorage.removeItem(\"userId\");\r\n                window.location.pathname = \"/\";\r\n                return;\r\n            }\r\n            if (data.action === \"driver_location\") {\r\n                setLocationsList(data.message)\r\n            }\r\n        };\r\n    }, [sockedContext]);\r\n\r\n    const {isLoaded} = useLoadScript({\r\n        googleMapsApiKey: API_KEY\r\n    });\r\n\r\n    const options = useMemo(() => (\r\n        {\r\n            disableDefaultUI: false,\r\n            clickableIcons: false\r\n        }), []);\r\n\r\n    if (!isLoaded) return <Loader/>;\r\n\r\n    const icon = {url: './images/admin/driver-icon.png', scaledSize: {width: 45, height: 45}};\r\n\r\n    return <div className=\"admin-home-container\">\r\n\r\n        <div className=\"header-side\">\r\n            <div className=\"statistic-card\">\r\n                <div className=\"icon\">\r\n                    <img src=\"./images/admin/driver.png\" alt=\"\"/>\r\n                </div>\r\n                <div className=\"title\">Haydovchilar soni:</div>\r\n                <div className=\"count\">{statisitc.drivers}</div>\r\n            </div>\r\n            <div className=\"statistic-card\">\r\n                <div className=\"icon\">\r\n                    <img src=\"./images/admin/user.png\" alt=\"\"/>\r\n                </div>\r\n                <div className=\"title\">Mijozlar soni:</div>\r\n                <div className=\"count\">{statisitc.clients}</div>\r\n            </div>\r\n            <div className=\"statistic-card\">\r\n                <div className=\"icon\">\r\n                    <img src=\"./images/admin/handshake.png\" alt=\"\"/>\r\n                </div>\r\n                <div className=\"title\">Hamkorlar soni:</div>\r\n                <div className=\"count\">{statisitc.avilable_drivers}</div>\r\n            </div>\r\n            <div className=\"statistic-card\">\r\n                <div className=\"icon\">\r\n                    <img src=\"./images/admin/shopping-list.png\" alt=\"\"/>\r\n                </div>\r\n                <div className=\"title\">Yakunlangan soni:</div>\r\n                <div className=\"count\">{statisitc.rides}</div>\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"map\">\r\n            <GoogleMap\r\n                zoom={5}\r\n                center={center}\r\n                options={options}\r\n                mapContainerClassName=\"map-container\">\r\n\r\n                {locationsList.latitude && locationsList.longitude && (\r\n                    <MarkerF\r\n                        position={{lat: locationsList.latitude, lng: locationsList.longitude}}\r\n                        icon={icon}\r\n                    />)}\r\n\r\n            </GoogleMap>\r\n        </div>\r\n    </div>\r\n};\r\n\r\n\r\nexport default MainHome","import {useState, useEffect, useContext} from \"react\";\r\nimport {useNavigate, Route, Routes, NavLink} from \"react-router-dom\";\r\nimport \"./admin.scss\"\r\nimport {adminPageRoutes} from \"../../../rootes\";\r\nimport {MyContext} from \"../../App/App\";\r\nimport i18next from \"i18next\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\n\r\nconst Admin = () => {\r\n    const {t} = useTranslation();\r\n    let value = useContext(MyContext);\r\n    const navigate = useNavigate();\r\n    const [adminMenu, setAdminMenu] = useState(false)\r\n\r\n    const menues = [\r\n        {\r\n            name: \"Dashboard\",\r\n            url: \"/\",\r\n            img: \"../images/admin/dashboard.png\"\r\n        },\r\n        {\r\n            name: \"Haydovchilar\",\r\n            url: \"/drivers\",\r\n            img: \"../images/admin/driver.png\"\r\n        },\r\n        {\r\n            name: \"Mijozlar\",\r\n            url: \"/clients\",\r\n            img: \"../images/admin/user.png\"\r\n        },\r\n        {\r\n            name: \"Buyurtmalar\",\r\n            url: \"/orders\",\r\n            img: \"../images/admin/shopping-list.png\"\r\n        },\r\n        {\r\n            name: \"Moshina brendi\",\r\n            url: \"/car-brands\",\r\n            img: \"../images/admin/car.png\"\r\n        },\r\n        {\r\n            name: \"Moshina modeli\",\r\n            url: \"/car-models\",\r\n            img: \"../images/admin/car.png\"\r\n        },\r\n        {\r\n            name: \"Ranglar\",\r\n            url: \"/colors\",\r\n            img: \"../images/admin/palette.png\"\r\n        },\r\n        {\r\n            name: \"Narxlar\",\r\n            url: \"/price\",\r\n            img: \"../images/admin/price-list.png\"\r\n        },\r\n        {\r\n            name: \"Qo'shimcha xizmatlar\",\r\n            url: \"/extra-services\",\r\n            img: \"../images/admin/technical-service.png\"\r\n        },\r\n        {\r\n            name: \"Bekor qilish sababi\",\r\n            url: \"/reject-reason\",\r\n            img: \"../images/admin/rejected.png\"\r\n        },\r\n\r\n        // {\r\n        //     name: \"Tariflar\",\r\n        //     url: \"/service\",\r\n        //     img: \"../images/admin/list.png\"\r\n        // },\r\n\r\n        // {\r\n        //     name: \"Balans\",\r\n        //     url: \"/balance\",\r\n        //     img: \"../images/admin/wallet.png\"\r\n        // },\r\n        // {\r\n        //     name: \"To'lov tizimi\",\r\n        //     url: \"/payment\",\r\n        //     img: \"../images/admin/credit-card.png\"\r\n        // },\r\n    ];\r\n\r\n    useEffect(() => {\r\n        // axios.get(`${value.url}dashboard/home/`, {\r\n        //     headers: {\r\n        //         \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\r\n        //     }\r\n        // }).then((response) => {\r\n        //     setStatisticsCount(response.data)\r\n        //     setCountPrice(response.data.balance)\r\n        // }).catch((error) => {\r\n        //     if (error.response.statusText == \"Unauthorized\") {\r\n        //         window.location.pathname = \"/\";\r\n        //         localStorage.removeItem(\"token\");\r\n        //     }\r\n        // });\r\n    }, []);\r\n\r\n    const language = [\r\n        {\r\n            code: \"uz\",\r\n            name: \"O'zbek tili\",\r\n            country_code: \"uz\",\r\n        },\r\n        {\r\n            code: \"en\",\r\n            name: \"English language\",\r\n            country_code: \"en\",\r\n        },\r\n        {\r\n            code: \"ru\",\r\n            name: \"Pусский язык\",\r\n            country_code: \"ru\",\r\n        },\r\n    ];\r\n    const changeLanguage = (code) => {\r\n        localStorage.setItem(\"lng\", code);\r\n        i18next.changeLanguage(code);\r\n    };\r\n\r\n    return <div className=\"admin-home\">\r\n\r\n        <div className={`left-box ${adminMenu ? \"\" : \"hide-left\"}`}>\r\n\r\n            <div className={`logo ${adminMenu ? \"\" : \"hide-logo\"}`}>\r\n                <img onClick={() => navigate('/')} src=\"../images/logo2.png\" alt=\"\"/>\r\n            </div>\r\n\r\n            <div className=\"admin-navbar\">\r\n                {\r\n                    menues.map((item, index) => {\r\n                        return <NavLink to={item.url} key={index}\r\n                                        className={`nav-item ${({isActive}) => isActive ? \"active\" : \"\"}`}>\r\n                            <img src={item.img} alt=\"\"/>\r\n                            {adminMenu ?  <span>{item.name}</span> :\"\"}\r\n                        </NavLink>\r\n                    })\r\n                }\r\n            </div>\r\n\r\n            <div onClick={() => setAdminMenu(!adminMenu)} className={`circle ${adminMenu ? \"\" : \"circle-rotate\"}`}>\r\n                <img src=\"../images/admin/previous.png\" alt=\"\"/>\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <div className={`right-box ${adminMenu ? \"\" :\"show-right\"}`}>\r\n            <div className=\"top-box\">\r\n                <div className=\"languge\">\r\n                    <Dropdown>\r\n                        <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                            <img className=\"globe\" src=\"./images/globe-alt.webp\" alt=\"language\" loading=\"lazy\"/>\r\n                            <div className=\"name\">\r\n                                {language.map((item, index) => {\r\n                                    return (\r\n                                        <div key={index}>\r\n                                            {i18next.language === item.code ? item.name : \"\"}\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n\r\n                            {language.map(({code, name, country_code}) => (\r\n                                <Dropdown.Item key={country_code}\r\n                                               onClick={() => changeLanguage(code)}>{name}</Dropdown.Item>\r\n                            ))}\r\n\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </div>\r\n                <div className=\"title\" >\r\n                    <img src=\"./images/logo.png\" alt=\"\"/>\r\n                </div>\r\n                <div className=\"icons\">\r\n                    <div onClick={() => {\r\n                        window.location.pathname = \"/\";\r\n                        localStorage.removeItem(\"admin\")\r\n                        localStorage.removeItem(\"token\")\r\n                    }} className=\"exit\"><img src=\"./images/admin/logout.png\" alt=\"\"/></div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"bottom-box\">\r\n                <Routes>\r\n                    {\r\n                        adminPageRoutes.map((route, index) => (\r\n                            <Route key={index} {...route} />\r\n                        ))\r\n                    }\r\n                </Routes>\r\n            </div>\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport default Admin","import {useEffect} from \"react\";\n\nexport const useOnKeyPress = (callback,targetKey) =>{\n    useEffect(()=>{\n        const keyPressHandler = (event)=>{\n            if (event.key === targetKey){\n                callback()\n            }\n        };\n\n        window.addEventListener('keydown',keyPressHandler);\n        return () =>{\n            window.removeEventListener('keydown', keyPressHandler)\n        }\n    },[callback, targetKey]);\n};","import {useContext, useEffect, useState} from \"react\";\r\nimport \"./style.scss\";\r\nimport axios from \"axios\";\r\nimport {MyContext} from \"../App/App\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {useOnKeyPress} from \"./useOnKeyPress\";\r\n\r\nconst LoginAdmin = () => {\r\n    let value = useContext(MyContext);\r\n    const navigate = useNavigate();\r\n    const [phone, setPhone] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const HandleLogin = () => {\r\n        if (phone.trim().length > 0 && password.trim().length > 0) {\r\n            let user = {\r\n                username: phone,\r\n                password\r\n            };\r\n            axios.post(`${value.url}/dashboard/login/`, user).then((response) => {\r\n                localStorage.setItem(\"admin\", response.data.user)\r\n                localStorage.setItem(\"token\", response.data.token);\r\n                window.location.pathname = '/';\r\n                localStorage.setItem(\"lng\", \"uz\")\r\n            }).catch((error) => {\r\n                if (error.response.status === 404) alert(\"Bu foydalanuvchi topilmadi\");\r\n            });\r\n\r\n        } else alert(\"Formani to'ldiring\")\r\n\r\n    };\r\n\r\n    const Clear = () => {\r\n        setPhone(\"\");\r\n        setPassword(\"\");\r\n    };\r\n\r\n    useOnKeyPress(HandleLogin, 'Enter');\r\n    useOnKeyPress(Clear, 'Delete');\r\n\r\n    return <div className=\"login-container\">\r\n\r\n        <div className=\"login-card\">\r\n            <div className=\"logo\">\r\n                <img src=\"./images/logo.png\" alt=\"\"/>\r\n            </div>\r\n            <div className=\"input_box\">\r\n                <input value={phone} onChange={(e) => setPhone(e.target.value)} placeholder=\"Username\" type=\"text\"/>\r\n                <input value={password} onChange={(e) => setPassword(e.target.value)} placeholder=\"Password\"\r\n                       type=\"password\"/>\r\n            </div>\r\n\r\n            <div onClick={HandleLogin} onKeyUp={() => console.log(\"enter\")} className=\"btn-login\">\r\n                Kirish\r\n            </div>\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport default LoginAdmin;","import \"./adminHome.scss\";\n\n\nconst LoaderAdmin = ()=>{\n    return <div className=\"loader-admin\">\n        <div className=\"lds-spinner\">\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n        </div>\n    </div>\n};\n\nexport default LoaderAdmin","import {useEffect, useRef, useState, useContext} from \"react\";\r\nimport {CSSTransition} from \"react-transition-group\";\r\nimport {useFormik} from \"formik\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport i18next from \"i18next\";\r\nimport axios from \"axios\";\r\nimport {\r\n    TextField,\r\n    MenuItem,\r\n    InputLabel,\r\n    FormControl,\r\n    Select,\r\n    OutlinedInput,\r\n    Checkbox,\r\n    ListItemText\r\n} from \"@mui/material\";\r\nimport \"./style.scss\"\r\nimport {MyContext} from \"../../App/App\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport LoaderAdmin from \"../loader-admin/LoaderAdmin\";\r\n\r\nconst Drivers = () => {\r\n    const {t} = useTranslation();\r\n    let value = useContext(MyContext);\r\n    const [modalShow, setModalShow] = useState({show: false, status: false});\r\n    const nodeRef = useRef(null);\r\n    const ref = useRef(null);\r\n    const [getSearchText, setGetSearchText] = useState(\"\");\r\n    const [driverPhoto, setDriverPhoto] = useState(null);\r\n    const [carInformation, setCarInformation] = useState([]);\r\n    const [driversList, setDriversList] = useState([]);\r\n    const [driverId, setDriverId] = useState(\"\");\r\n    const [reason, setReason] = useState(\"\");\r\n    const [loader, setLoader] = useState(false);\r\n\r\n    const [car_serviceId, setCarServiceId] = useState([])\r\n    const [car_categoriesId, setCarCategoriesId] = useState([])\r\n\r\n    const [regions, setRegions] = useState([])\r\n\r\n    const [luggage, setLuggage] = useState(\"male\");\r\n    const [profileImage, setProfileImage] = useState(null);\r\n    const [car_images, setCar_images] = useState([]);\r\n    const [base_car_images, setBase_Car_images] = useState([]);\r\n\r\n    const [doc_images, setDocImages] = useState([]);\r\n    const [base_doc_images, setBaseDocImages] = useState([]);\r\n\r\n    const [car_make, setCar_make] = useState([]);\r\n    const [car_model, setCar_model] = useState([]);\r\n    const [car_colors, setCar_colors] = useState([]);\r\n    const [extra_services, setExtra_services] = useState([]);\r\n    const [extra_servicesList, setExtra_servicesList] = useState([]);\r\n\r\n    const [car_categories, setCar_categories] = useState([]);\r\n    const [car_service, setCar_service] = useState([]);\r\n\r\n    const ITEM_HEIGHT = 48;\r\n    const ITEM_PADDING_TOP = 8;\r\n    const MenuProps = {\r\n        PaperProps: {\r\n            style: {\r\n                maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n                width: 250,\r\n            },\r\n        },\r\n    };\r\n\r\n    const worksPage = 100;\r\n    const [pageNumber, setPageNumber] = useState(0);\r\n    const pagesVisited = pageNumber * worksPage;\r\n    const pageCount = Math.ceil(driversList.length / worksPage);\r\n\r\n    const validate = (values) => {\r\n        const errors = {};\r\n\r\n        if (!values.first_name) {\r\n            errors.first_name = \"Required\";\r\n        }\r\n\r\n        if (!values.last_name) {\r\n            errors.last_name = \"Required\";\r\n        }\r\n\r\n        if (!values.phone) {\r\n            errors.phone = \"Required\";\r\n        }\r\n\r\n        if (!values.car_model) {\r\n            errors.car_model = \"Required\";\r\n        }\r\n\r\n        if (!values.car_color) {\r\n            errors.car_color = \"Required\";\r\n        }\r\n\r\n        if (!values.car_make) {\r\n            errors.car_make = \"Required\";\r\n        }\r\n\r\n        if (!values.car_number) {\r\n            errors.car_number = \"Required\";\r\n        }\r\n\r\n        if (!values.extra_services) {\r\n            errors.extra_services = \"Required\";\r\n        }\r\n\r\n        if (!values.seat_count) {\r\n            errors.seat_count = \"Required\";\r\n        }\r\n\r\n        if (!values.from_region) {\r\n            errors.from_region = \"Required\";\r\n        }\r\n\r\n        if (!values.to_region) {\r\n            errors.to_region = \"Required\";\r\n        }\r\n\r\n        return errors;\r\n    };\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            phone: \"\",\r\n            first_name: \"\",\r\n            last_name: \"\",\r\n            birth_date: \"\",\r\n            car_number: \"\",\r\n            car_color: \"\",\r\n            car_make: \"\",\r\n            car_model: \"\",\r\n            extra_services: [],\r\n            seat_count: \"\",\r\n            from_region: \"\",\r\n            to_region: \"\"\r\n        },\r\n        validate,\r\n        onSubmit: (values) => {\r\n            sendAllInfo()\r\n        },\r\n    });\r\n\r\n    useEffect(() => {\r\n        getDrivers()\r\n        axios.get(`${value.url}/dashboard/carcategory/`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setCar_categories(response.data);\r\n        })\r\n\r\n        axios.get(`${value.url}/dashboard/carservice/`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setCar_service(response.data);\r\n        })\r\n\r\n        axios.get(`${value.url}/dashboard/carmake/`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setCar_make(response.data);\r\n        })\r\n\r\n        axios.get(`${value.url}/dashboard/carcolor/`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setCar_colors(response.data);\r\n        })\r\n\r\n        axios.get(`${value.url}/dashboard/extraservices/`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setExtra_servicesList(response.data);\r\n        })\r\n\r\n        axios.get(`${value.url}/dashboard/region/`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setRegions(response.data);\r\n        })\r\n\r\n    }, []);\r\n\r\n    const getDrivers = () => {\r\n        setLoader(true);\r\n\r\n        axios.get(`${value.url}/dashboard/driver/`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setDriversList(response.data);\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        }).finally(() => {\r\n            setLoader(false);\r\n        });\r\n    }\r\n\r\n    const getCarNames = (id) => {\r\n        axios.get(`${value.url}/dashboard/carmake/${id}/`, {\r\n            headers: {\r\n                \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\r\n            }\r\n        }).then((response) => {\r\n            setCar_model(response.data);\r\n        })\r\n    }\r\n\r\n    const changePage = ({selected}) => {\r\n        setPageNumber(selected)\r\n\r\n        setTimeout(() => {\r\n            ref.current?.scrollIntoView({behavior: \"smooth\"});\r\n        }, 500);\r\n    };\r\n\r\n    const getInputPhoto = (event) => {\r\n        const file = event.target.files[0];\r\n        setProfileImage(file);\r\n    };\r\n\r\n    const sendAllInfo = () => {\r\n        const formData = new FormData();\r\n        let user = {\r\n            role: \"driver\",\r\n            first_name: formik.values.first_name,\r\n            last_name: formik.values.last_name,\r\n            phone: formik.values.phone,\r\n            gender: luggage,\r\n            is_verified: true,\r\n            is_confirmed: true\r\n        }\r\n        let driver = {\r\n            car_make: formik.values.car_make,\r\n            car_model: formik.values.car_model,\r\n            car_color: formik.values.car_color,\r\n            car_number: formik.values.car_number,\r\n            seat_count: formik.values.seat_count,\r\n            birth_date: formik.values.birth_date,\r\n            extra_services: formik.values.extra_services,\r\n            from_region: formik.values.from_region,\r\n            to_region: formik.values.to_region\r\n        }\r\n\r\n        for (let key in user) {\r\n            formData.append(key, user[key]);\r\n        }\r\n\r\n        for (let key in driver) {\r\n            if (Array.isArray(driver[key])) {\r\n                driver[key].forEach(value => {\r\n                    formData.append(`driver.${key}`, value);\r\n                });\r\n            } else {\r\n                formData.append(`driver.${key}`, driver[key]);\r\n            }\r\n        }\r\n\r\n        if (profileImage) {\r\n            formData.append('profile_image', profileImage);\r\n        }\r\n\r\n        if (!driverId) {\r\n            axios.post(`${value.url}/dashboard/driver/`, formData,\r\n                {\r\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n                }).then((response) => {\r\n                setModalShow({status: \"\", show: false})\r\n                getDrivers()\r\n                formik.resetForm();\r\n            })\r\n        }\r\n\r\n        if (driverId) {\r\n            axios.patch(`${value.url}/dashboard/driver/${driverId}/`, formData,\r\n                {\r\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n                }).then((response) => {\r\n                setModalShow({status: \"\", show: false})\r\n                getDrivers()\r\n                formik.resetForm();\r\n            })\r\n        }\r\n    }\r\n\r\n    const editInfo = (id) => {\r\n\r\n        axios.get(`${value.url}/dashboard/driver/${id}/`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            formik.setValues({\r\n                phone: response.data.user.phone,\r\n                first_name: response.data.user.first_name,\r\n                last_name: response.data.user.last_name,\r\n                birth_date: response.data.birth_date,\r\n                car_number: response.data.car_number,\r\n                car_color: response.data.car_color && response.data.car_color.id,\r\n                car_make: response.data.car_make && response.data.car_make.id,\r\n                car_model: response.data.car_model && response.data.car_model.id,\r\n                extra_services: response.data.extra_services.length > 0 ? response.data.extra_services.map(service => service.id) : [],\r\n                seat_count: response.data.seat_count,\r\n                from_region: response.data.from_region && response.data.from_region.id,\r\n                to_region: response.data.to_region && response.data.to_region.id,\r\n            });\r\n\r\n            setLuggage(response.data.user.gender)\r\n            if (response.data.car_make) {\r\n                getCarNames(response.data.car_make.id)\r\n            }\r\n        })\r\n        setDriverId(id)\r\n    }\r\n\r\n    const blockDriver = (status) => {\r\n        if (status === \"block\" && reason.trim().length > 0) {\r\n            axios.post(`${value.url}/dashboard/driver/block-driver/`,\r\n                {driver_id: driverId, reason}, {\r\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n                }).then((response) => {\r\n                setModalShow({status: \"\", show: false})\r\n                getDrivers()\r\n                setReason(\"\")\r\n            })\r\n        } else alert(\"Bloklash sababini kiriting!\")\r\n\r\n        if (status === \"unblock\") {\r\n            axios.post(`${value.url}/dashboard/driver/unblock-driver/`,\r\n                {driver_id: driverId}, {\r\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n                }).then((response) => {\r\n                setModalShow({status: \"\", show: false})\r\n                getDrivers()\r\n            })\r\n        }\r\n    }\r\n\r\n    const handleCheckboxChangeService = (serviceId) => {\r\n        setCarServiceId((prevSelected) =>\r\n            prevSelected.includes(serviceId)\r\n                ? prevSelected.filter((id) => id !== serviceId)\r\n                : [...prevSelected, serviceId]\r\n        );\r\n    };\r\n\r\n    const handleCheckboxChangeCategory = (serviceId) => {\r\n        setCarCategoriesId((prevSelected) =>\r\n            prevSelected.includes(serviceId)\r\n                ? prevSelected.filter((id) => id !== serviceId)\r\n                : [...prevSelected, serviceId]\r\n        );\r\n    };\r\n\r\n    const verify = () => {\r\n        let driver = {\r\n            driver_id: driverId,\r\n            available_services: car_serviceId,\r\n            available_categories: car_categoriesId\r\n        }\r\n\r\n        axios.post(`${value.url}/dashboard/driver/confirm-driver/`,\r\n            driver, {\r\n                headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n            }).then((response) => {\r\n            getDrivers()\r\n            setModalShow({status: \"\", show: false})\r\n        })\r\n\r\n    }\r\n\r\n    const getInformation = (id) => {\r\n        setModalShow({show: true, status: \"car-information\"});\r\n\r\n        axios.get(`${value.url}/dashboard/driver/${id}/`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setCarInformation(response.data);\r\n            console.log(response.data)\r\n        })\r\n    }\r\n\r\n    const handleAddImage = (e) => {\r\n        const file = e.target.files[0];\r\n        if (file) {\r\n            const reader = new FileReader();\r\n            reader.onloadend = () => {\r\n                setCar_images((prevImages) => [\r\n                    ...prevImages,\r\n                    {\r\n                        preview: reader.result,\r\n                        file: file\r\n                    }\r\n                ]);\r\n            };\r\n            reader.readAsDataURL(file);\r\n        }\r\n        e.target.value = null;\r\n    };\r\n\r\n    const getCarImages = (id) => {\r\n        setModalShow({show: true, status: \"car-photos\"});\r\n        setDriverId(id)\r\n        axios.post(`${value.url}/dashboard/driver/car-images/`, {driver_id: id}, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setBase_Car_images(response.data)\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    const handleDeleteImageBase = (id) => {\r\n        axios.post(`${value.url}/dashboard/driver/delete-car-image/`, {driver_car_image: id}, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            getCarImages(driverId)\r\n        })\r\n    };\r\n\r\n    const handleDeleteImage = (index) => {\r\n        setCar_images((prevImages) => prevImages.filter((_, i) => i !== index));\r\n    };\r\n\r\n    const addCar_Images = () => {\r\n        const formData = new FormData();\r\n        formData.append('driver', driverId);\r\n\r\n        car_images.forEach((image, index) => {\r\n            formData.append('car_images', image.file);\r\n        });\r\n\r\n        axios.post(`${value.url}/dashboard/driver/update-image/`, formData, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setModalShow({status: \"\", show: false})\r\n            setCar_images([])\r\n        })\r\n    }\r\n\r\n    const handleAddImageDoc = (e) => {\r\n        const file = e.target.files[0];\r\n        if (file) {\r\n            const reader = new FileReader();\r\n            reader.onloadend = () => {\r\n                setDocImages((prevImages) => [\r\n                    ...prevImages,\r\n                    {\r\n                        preview: reader.result,\r\n                        file: file\r\n                    }\r\n                ]);\r\n            };\r\n            reader.readAsDataURL(file);\r\n        }\r\n        e.target.value = null;\r\n    };\r\n\r\n    const getDocsImages = (id) => {\r\n        setModalShow({show: true, status: \"car-docs\"});\r\n        setDriverId(id)\r\n        axios.post(`${value.url}/dashboard/driver/document-images/`, {driver_id: id}, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setBaseDocImages(response.data)\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    const handleDeleteImageDocsBase = (id) => {\r\n        axios.post(`${value.url}/dashboard/driver/delete-document-image/`, {driver_document_image: id}, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            getDocsImages(driverId)\r\n        })\r\n    };\r\n\r\n    const handleDeleteImageDocs = (index) => {\r\n        setDocImages((prevImages) => prevImages.filter((_, i) => i !== index));\r\n    };\r\n\r\n    const addCar_Images_Docs = () => {\r\n        const formData = new FormData();\r\n        formData.append('driver', driverId);\r\n\r\n        doc_images.forEach((image, index) => {\r\n            formData.append('document_images', image.file);\r\n        });\r\n\r\n        axios.post(`${value.url}/dashboard/driver/update-image/`, formData, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setModalShow({status: \"\", show: false})\r\n            setCar_images([])\r\n            setDocImages([])\r\n        })\r\n    }\r\n\r\n    const productList = driversList.slice(pagesVisited, pagesVisited + worksPage)\r\n        .filter((item) => {\r\n            const searchText = getSearchText.toString().toLowerCase().replace(/\\s+/g, '').replace(/\\+/g, '');\r\n            const phoneNumber = item.phone.toString().toLowerCase().replace(/\\s+/g, '').replace(/\\+/g, '');\r\n            return searchText === \"\" || phoneNumber.includes(searchText);\r\n        }).map((item, index) => {\r\n            return <tr key={index}>\r\n                <td>{index + 1}</td>\r\n                <td className=\"driver-wrapper\">\r\n                    <div className=\"icon-driver\">\r\n                        <img onClick={() => {\r\n                            setModalShow({show: true, status: \"driver-photo\"});\r\n                            setDriverPhoto(item.profile_image)\r\n                        }} src={item.profile_image} alt=\"\"/>\r\n                    </div>\r\n                    <div className=\"text-driver\">\r\n                        <div className=\"name\">\r\n                            {item.user_name && item.user_name}\r\n                        </div>\r\n                        <div className=\"phone\">\r\n                            {item.phone && item.phone}\r\n                        </div>\r\n                    </div>\r\n                </td>\r\n                <td>\r\n                    {item.from_region && item.from_region.translations[i18next.language].name}\r\n                    --\r\n                    {item.to_region && item.to_region.translations[i18next.language].name}\r\n                </td>\r\n                <td>\r\n                    {item.car_color && item.car_color.translations[i18next.language].name}&nbsp;\r\n                    {item.car_make && item.car_make.translations[i18next.language].name} &nbsp;\r\n                    {item.car_model && item.car_model.translations[i18next.language].name}\r\n                </td>\r\n                <td>\r\n                    {item.car_number && item.car_number}\r\n                </td>\r\n                <td>\r\n                    <div className=\"icon\">\r\n                        <img onClick={() => getInformation(item.id)} src=\"./images/admin/sport-car.png\" alt=\"\"/>\r\n                    </div>\r\n                </td>\r\n                <td>\r\n                    <div className=\"icon\">\r\n                        <img onClick={() => getCarImages(item.id)} src=\"./images/admin/car-photo.png\" alt=\"\"/>\r\n                    </div>\r\n                </td>\r\n                <td>\r\n                    <div className=\"icon\">\r\n                        <img onClick={() => getDocsImages(item.id)} src=\"./images/admin/document.png\" alt=\"\"/>\r\n                    </div>\r\n                </td>\r\n                <td>\r\n                    <div className={item.is_confirmed ? \"icon-check\" : \"icon-check disablet\"}>\r\n                        <img onClick={() => {\r\n                            setModalShow({show: true, status: \"driver-service\"});\r\n                            setDriverId(item.id)\r\n                            setCarServiceId(item.available_services)\r\n                            setCarCategoriesId(item.available_categories)\r\n                        }} src=\"./images/admin/check.png\" alt=\"\"/>\r\n                    </div>\r\n                </td>\r\n                <td>\r\n                    <div className={item.is_block ? \"icon-check\" : \"icon-check disablet\"}>\r\n                        <img onClick={() => {\r\n                            setModalShow({show: true, status: \"blocked\"});\r\n                            if (item.is_block) {\r\n                                setReason(item.reason)\r\n                            }\r\n                            setDriverId(item.id)\r\n                        }} src=\"./images/admin/block.png\" alt=\"block\"/>\r\n\r\n                        {item.reason && item.is_block && <div className=\"reason-block\">\r\n                            <img src=\"./images/admin/warning.png\" alt=\"\"/>\r\n                            <div className=\"text\">\r\n                                {item.reason}\r\n                            </div>\r\n                        </div>}\r\n\r\n                    </div>\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <div className=\"edit-icon\">\r\n                    <img onClick={() => {\r\n                        setModalShow({show: true, status: \"edit-driver\"});\r\n                        editInfo(item.id)\r\n                    }} src=\"./images/admin/edit-tools.png\" alt=\"\"/>\r\n                </div>\r\n            </tr>\r\n        });\r\n\r\n    return <div className=\"drivers-container\">\r\n        <CSSTransition\r\n            in={modalShow.show}\r\n            nodeRef={nodeRef}\r\n            timeout={300}\r\n            classNames=\"alert\"\r\n            unmountOnExit\r\n        >\r\n            <div className=\"modal-sloy\">\r\n                <div ref={nodeRef} className=\"modal-card\">\r\n\r\n                    {modalShow.status === \"add-driver\" && (\r\n                        <div className=\"add-driver\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img\r\n                                    onClick={() => {\r\n                                        setModalShow({status: \"\", show: false})\r\n                                        formik.resetForm();\r\n                                    }}\r\n                                    src=\"./images/admin/x.png\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"title\">Haydovchi qo'shish</div>\r\n\r\n                            <div className=\"title-form\">Haydovchi ma'lumotlari:</div>\r\n\r\n                            <div className=\"form-container\">\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides-file\">\r\n                                        <input onChange={getInputPhoto} type=\"file\"/>\r\n                                        <div className={`sloy-image ${profileImage ? \"active\" : \"\"}`}>\r\n                                            Profil rasmi\r\n                                            <img src=\"./images/admin/image.png\" alt=\"\"/>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.first_name === \"Required\"}\r\n                                            value={formik.values.first_name}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"first_name\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Ism\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.last_name === \"Required\"}\r\n                                            value={formik.values.last_name}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"last_name\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Familiya\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.phone === \"Required\"}\r\n                                            value={formik.values.phone}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"phone\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Telefon raqam\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                    <div className=\"select-sides-time\">\r\n                                        <label htmlFor=\"\">Tug'ilgan sana:</label>\r\n                                        <input\r\n                                            className={`working_time ${formik.errors.birth_date === \"Required\" ? \"working_time_required\" : \"\"}`}\r\n                                            name=\"birth_date\" onChange={formik.handleChange}\r\n                                            value={formik.values.birth_date}\r\n                                            type=\"date\"/>\r\n                                    </div>\r\n                                    <div className=\"select-sides\">\r\n                                        <div className=\"title-on\">\r\n                                            Jinsi:\r\n                                        </div>\r\n                                        <div className=\"on-of\">\r\n                                            <div onClick={() => setLuggage(\"male\")}\r\n                                                 className={`of ${luggage === \"male\" ? \"on\" : \"\"}`}>\r\n                                                Erkak\r\n                                            </div>\r\n                                            <div onClick={() => setLuggage(\"female\")}\r\n                                                 className={`of ${luggage === \"female\" ? \"on\" : \"\"}`}>\r\n                                                Ayol\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"title-form\">Avtomobil ma'lumotlari:</div>\r\n\r\n                            <div className=\"form-container\">\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Avtomobil modeli</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.car_make === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.car_make}\r\n                                                name=\"car_make\"\r\n                                                label=\"Avtomobil modeli\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {\r\n                                                    car_make.map((item, index) => {\r\n                                                        return <MenuItem onClick={() => getCarNames(item.id)}\r\n                                                                         key={index}\r\n                                                                         value={item.id}>\r\n                                                            {item.translations[i18next.language].name}\r\n                                                        </MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Avtomobil nomi</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.car_model === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.car_model}\r\n                                                name=\"car_model\"\r\n                                                label=\"Avtomobil nomi\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {\r\n                                                    car_model.map((item, index) => {\r\n                                                        return <MenuItem key={index}\r\n                                                                         value={item.id}>\r\n                                                            {item.translations[i18next.language].name}\r\n                                                        </MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.car_number === \"Required\"}\r\n                                            value={formik.values.car_number}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"car_number\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Avtomobil raqami\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"select-box \">\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Avtomobil rangi</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.car_color === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                name=\"car_color\"\r\n                                                label=\"Avtomobil rangi\"\r\n                                                value={formik.values.car_color}\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {\r\n                                                    car_colors.map((item, index) => {\r\n                                                        return <MenuItem key={index}\r\n                                                                         value={item.id}>\r\n                                                            {item.translations[i18next.language].name}\r\n                                                        </MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <TextField\r\n                                                id=\"seat_count\"\r\n                                                name=\"seat_count\"\r\n                                                label=\"O‘rindiqlar soni\"\r\n                                                type=\"number\"\r\n                                                value={formik.values.seat_count}\r\n                                                onChange={formik.handleChange}\r\n                                                error={formik.touched.seat_count && Boolean(formik.errors.seat_count)}\r\n                                                helperText={formik.touched.seat_count && formik.errors.seat_count}\r\n                                                inputProps={{min: 1}}\r\n                                                fullWidth\r\n                                                size=\"small\"\r\n                                            />\r\n                                        </FormControl>\r\n                                    </div>\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, width: \"100%\"}} className=\"selectMui\" size=\"small\">\r\n                                            <InputLabel id=\"demo-multiple-checkbox-label\">Xizmatlar</InputLabel>\r\n\r\n                                            <Select\r\n                                                error={formik.errors.extra_services === \"Required\"}\r\n                                                name=\"extra_services\"\r\n                                                labelId=\"demo-multiple-checkbox-label\"\r\n                                                id=\"demo-multiple-checkbox\"\r\n                                                multiple\r\n                                                value={formik.values.extra_services}\r\n                                                onChange={(event) => {\r\n                                                    const {value} = event.target;\r\n                                                    formik.setFieldValue(\r\n                                                        \"extra_services\",\r\n                                                        typeof value === 'string' ? value.split(',') : value\r\n                                                    );\r\n                                                }}\r\n                                                input={<OutlinedInput label=\"Xizmatlar\"/>}\r\n                                                renderValue={(selected) =>\r\n                                                    selected\r\n                                                        .map((id) => {\r\n                                                            const item = extra_servicesList.find(i => i.id === id);\r\n                                                            return item ? item.translations[i18next.language].name : '';\r\n                                                        })\r\n                                                        .join(', ')\r\n                                                }\r\n                                                MenuProps={MenuProps}\r\n                                            >\r\n                                                {extra_servicesList.map((item) => (\r\n                                                    <MenuItem key={item.id} value={item.id}>\r\n                                                        <Checkbox\r\n                                                            checked={formik.values.extra_services.includes(item.id)}\r\n                                                        />\r\n                                                        <ListItemText\r\n                                                            primary={item.translations[i18next.language].name}\r\n                                                        />\r\n                                                    </MenuItem>\r\n                                                ))}\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"title-form\">Asosan qaysi yo'nalishda harakat qilasiz:</div>\r\n                            <div className=\"form-container\">\r\n                                <div className=\"select-box start\">\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Qayerdan</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.from_region === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.from_region}\r\n                                                name=\"from_region\"\r\n                                                label=\"Qayerdan\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {\r\n                                                    regions.map((item, index) => {\r\n                                                        return <MenuItem key={index}\r\n                                                                         value={item.id}>\r\n                                                            {item.translations[i18next.language].name}\r\n                                                        </MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Qayerga</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.to_region === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.to_region}\r\n                                                name=\"to_region\"\r\n                                                label=\"Qayerga\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {\r\n                                                    regions.map((item, index) => {\r\n                                                        return <MenuItem key={index}\r\n                                                                         value={item.id}>\r\n                                                            {item.translations[i18next.language].name}\r\n                                                        </MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div onClick={() => {\r\n                                formik.handleSubmit()\r\n                            }} className=\"add-btn\">\r\n                                <img src=\"./images/admin/add.png\" alt=\"\"/>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalShow.status === \"driver-photo\" && (\r\n                        <div className=\"driver-photo\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img\r\n                                    onClick={() => setModalShow({status: \"\", show: false})}\r\n                                    src=\"./images/admin/x.png\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"photo\">\r\n                                <img src={driverPhoto} alt=\"\"/>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalShow.status === \"car-information\" && (\r\n                        <div className=\"car-information\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img onClick={() => setModalShow({status: \"\", show: false})}\r\n                                     src=\"./images/admin/x.png\"\r\n                                     alt=\"\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"title\">\r\n                                Avtomobil ma'lumotlari\r\n                            </div>\r\n                            {carInformation &&\r\n                                <div className=\"information\">\r\n                                    <div className=\"info\">\r\n                                        <div className=\"title\">Tugilgan sanasi:</div>\r\n                                        <div\r\n                                            className=\"text\">{carInformation.birth_date && carInformation.birth_date}</div>\r\n                                    </div>\r\n                                    <div className=\"info\">\r\n                                        <div className=\"title\">Jinsi:</div>\r\n                                        <div\r\n                                            className=\"text\">{carInformation.user && carInformation.user.gender === \"male\" ? \"Erkak\" : \"Ayol\"}</div>\r\n                                    </div>\r\n                                    <div className=\"info\">\r\n                                        <div className=\"title\">Reyting:</div>\r\n                                        <div\r\n                                            className=\"text\">{carInformation.user && carInformation.user.rate}</div>\r\n                                    </div>\r\n                                    <div className=\"info\">\r\n                                        <div className=\"title\">O'rindiqlar soni:</div>\r\n                                        <div\r\n                                            className=\"text\">{carInformation.seat_count && carInformation.seat_count}</div>\r\n                                    </div>\r\n                                    <div className=\"info\">\r\n                                        <div className=\"title\">Yakunlagan buyurtmalar:</div>\r\n                                        <div\r\n                                            className=\"text\">{carInformation.user && carInformation.user.finished_orders_count}</div>\r\n                                    </div>\r\n                                    <div className=\"info\">\r\n                                        <div className=\"title\">Qo'shimcha xizmatlar:</div>\r\n                                        <div className=\"text\">\r\n                                            {carInformation.extra_services && carInformation.extra_services.map((item, index) => {\r\n                                                return <span key={index}>\r\n                                                    {item.translations[i18next.language].name},\r\n                                                </span>\r\n                                            })}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>}\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalShow.status === \"blocked\" && (\r\n                        <div className=\"blocked\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img onClick={() => {\r\n                                    setModalShow({status: \"\", show: false})\r\n                                    setReason(\"\")\r\n                                }}\r\n                                     src=\"./images/admin/x.png\"\r\n                                     alt=\"\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"title\">\r\n                                Haydovchini bloklash\r\n                            </div>\r\n\r\n                            <div className=\"reason-text\">\r\n                                <textarea value={reason} onChange={(e) => setReason(e.target.value)}\r\n                                          placeholder=\"Blok qilish sababini kiriting...\" name=\"reason\"\r\n                                          id=\"reason\"></textarea>\r\n\r\n                                <div className=\"buttons\">\r\n                                    <div onClick={() => {\r\n                                        blockDriver(\"unblock\")\r\n                                    }}\r\n                                         className=\"cancel\">Bekor qilish\r\n                                    </div>\r\n\r\n                                    <div onClick={() => {\r\n                                        blockDriver(\"block\")\r\n                                    }} className=\"success\">Bloklash\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalShow.status === \"edit-driver\" && (\r\n                        <div className=\"edit-driver\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img\r\n                                    onClick={() => {\r\n                                        setModalShow({status: \"\", show: false})\r\n                                        formik.resetForm();\r\n                                    }}\r\n                                    src=\"./images/admin/x.png\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"title\">Haydovchi qo'shish</div>\r\n\r\n                            <div className=\"title-form\">Haydovchi ma'lumotlari:</div>\r\n\r\n                            <div className=\"form-container\">\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides-file\">\r\n                                        <input onChange={getInputPhoto} type=\"file\"/>\r\n                                        <div className={`sloy-image ${profileImage ? \"active\" : \"\"}`}>\r\n                                            Profil rasmi\r\n                                            <img src=\"./images/admin/image.png\" alt=\"\"/>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.first_name === \"Required\"}\r\n                                            value={formik.values.first_name}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"first_name\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Ism\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.last_name === \"Required\"}\r\n                                            value={formik.values.last_name}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"last_name\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Familiya\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.phone === \"Required\"}\r\n                                            value={formik.values.phone}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"phone\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Telefon raqam\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                    <div className=\"select-sides-time\">\r\n                                        <label htmlFor=\"\">Tug'ilgan sana:</label>\r\n                                        <input\r\n                                            className={`working_time ${formik.errors.birth_date === \"Required\" ? \"working_time_required\" : \"\"}`}\r\n                                            name=\"birth_date\" onChange={formik.handleChange}\r\n                                            value={formik.values.birth_date}\r\n                                            type=\"date\"/>\r\n                                    </div>\r\n                                    <div className=\"select-sides\">\r\n                                        <div className=\"title-on\">\r\n                                            Jinsi:\r\n                                        </div>\r\n                                        <div className=\"on-of\">\r\n                                            <div onClick={() => setLuggage(\"male\")}\r\n                                                 className={`of ${luggage === \"male\" ? \"on\" : \"\"}`}>\r\n                                                Erkak\r\n                                            </div>\r\n                                            <div onClick={() => setLuggage(\"famale\")}\r\n                                                 className={`of ${luggage === \"famale\" ? \"on\" : \"\"}`}>\r\n                                                Ayol\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"title-form\">Avtomobil ma'lumotlari:</div>\r\n\r\n                            <div className=\"form-container\">\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Avtomobil modeli</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.car_make === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.car_make}\r\n                                                name=\"car_make\"\r\n                                                label=\"Avtomobil modeli\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {\r\n                                                    car_make.map((item, index) => {\r\n                                                        return <MenuItem onClick={() => getCarNames(item.id)}\r\n                                                                         key={index}\r\n                                                                         value={item.id}>\r\n                                                            {item.translations[i18next.language].name}\r\n                                                        </MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Avtomobil nomi</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.car_model === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.car_model}\r\n                                                name=\"car_model\"\r\n                                                label=\"Avtomobil nomi\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {\r\n                                                    car_model.map((item, index) => {\r\n                                                        return <MenuItem key={index}\r\n                                                                         value={item.id}>\r\n                                                            {item.translations[i18next.language].name}\r\n                                                        </MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.car_number === \"Required\"}\r\n                                            value={formik.values.car_number}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"car_number\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Avtomobil raqami\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"select-box \">\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Avtomobil rangi</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.car_color === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                name=\"car_color\"\r\n                                                label=\"Avtomobil rangi\"\r\n                                                value={formik.values.car_color}\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {\r\n                                                    car_colors.map((item, index) => {\r\n                                                        return <MenuItem key={index}\r\n                                                                         value={item.id}>\r\n                                                            {item.translations[i18next.language].name}\r\n                                                        </MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <TextField\r\n                                                id=\"seat_count\"\r\n                                                name=\"seat_count\"\r\n                                                label=\"O‘rindiqlar soni\"\r\n                                                type=\"number\"\r\n                                                value={formik.values.seat_count}\r\n                                                onChange={formik.handleChange}\r\n                                                error={formik.touched.seat_count && Boolean(formik.errors.seat_count)}\r\n                                                helperText={formik.touched.seat_count && formik.errors.seat_count}\r\n                                                inputProps={{min: 1}}\r\n                                                fullWidth\r\n                                                size=\"small\"\r\n                                            />\r\n                                        </FormControl>\r\n                                    </div>\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, width: \"100%\"}} className=\"selectMui\" size=\"small\">\r\n                                            <InputLabel id=\"demo-multiple-checkbox-label\">Xizmatlar</InputLabel>\r\n\r\n                                            <Select\r\n                                                error={formik.errors.extra_services === \"Required\"}\r\n                                                name=\"extra_services\"\r\n                                                labelId=\"demo-multiple-checkbox-label\"\r\n                                                id=\"demo-multiple-checkbox\"\r\n                                                multiple\r\n                                                value={formik.values.extra_services}\r\n                                                onChange={(event) => {\r\n                                                    const {value} = event.target;\r\n                                                    formik.setFieldValue(\r\n                                                        \"extra_services\",\r\n                                                        typeof value === 'string' ? value.split(',') : value\r\n                                                    );\r\n                                                }}\r\n                                                input={<OutlinedInput label=\"Xizmatlar\"/>}\r\n                                                renderValue={(selected) =>\r\n                                                    selected\r\n                                                        .map((id) => {\r\n                                                            const item = extra_servicesList.find(i => i.id === id);\r\n                                                            return item ? item.translations[i18next.language].name : '';\r\n                                                        })\r\n                                                        .join(', ')\r\n                                                }\r\n                                                MenuProps={MenuProps}\r\n                                            >\r\n                                                {extra_servicesList.map((item) => (\r\n                                                    <MenuItem key={item.id} value={item.id}>\r\n                                                        <Checkbox\r\n                                                            checked={formik.values.extra_services.includes(item.id)}\r\n                                                        />\r\n                                                        <ListItemText\r\n                                                            primary={item.translations[i18next.language].name}\r\n                                                        />\r\n                                                    </MenuItem>\r\n                                                ))}\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"title-form\">Asosan qaysi yo'nalishda harakat qilasiz:</div>\r\n                            <div className=\"form-container\">\r\n                                <div className=\"select-box start\">\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Qayerdan</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.from_region === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.from_region}\r\n                                                name=\"from_region\"\r\n                                                label=\"Qayerdan\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {\r\n                                                    regions.map((item, index) => {\r\n                                                        return <MenuItem key={index}\r\n                                                                         value={item.id}>\r\n                                                            {item.translations[i18next.language].name}\r\n                                                        </MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Qayerga</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.to_region === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.to_region}\r\n                                                name=\"to_region\"\r\n                                                label=\"Qayerga\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {\r\n                                                    regions.map((item, index) => {\r\n                                                        return <MenuItem key={index}\r\n                                                                         value={item.id}>\r\n                                                            {item.translations[i18next.language].name}\r\n                                                        </MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div onClick={() => {\r\n                                formik.handleSubmit()\r\n                            }} className=\"add-btn\">\r\n                                <img src=\"./images/admin/checkmark.png\" alt=\"\"/>\r\n                            </div>\r\n\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalShow.status === \"driver-service\" && (\r\n                        <div className=\"driver-service\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img onClick={() => setModalShow({status: \"\", show: false})}\r\n                                     src=\"./images/admin/x.png\"\r\n                                     alt=\"\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"bottom-side\">\r\n                                <div className=\"left-side\">\r\n                                    <div className=\"title\">\r\n                                        Yo'nalish\r\n                                    </div>\r\n                                    <div className=\"form-wrapper\">\r\n                                        {\r\n                                            car_service.map((category, index) => (\r\n                                                <label key={index}>\r\n                                                    <input onChange={() => handleCheckboxChangeService(category.id)}\r\n                                                           checked={car_serviceId.includes(category.id)} type=\"checkbox\"\r\n                                                           name=\"agree\"/>\r\n                                                    {category.translations[i18next.language].name}\r\n                                                </label>\r\n                                            ))\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"right-side\">\r\n                                    <div className=\"title\">\r\n                                        Tariflar\r\n                                    </div>\r\n                                    <div className=\"form-wrapper\">\r\n                                        {\r\n                                            car_categories.map((category, index) => (\r\n                                                <label key={index}>\r\n                                                    <input onChange={() => handleCheckboxChangeCategory(category.id)}\r\n                                                           checked={car_categoriesId.includes(category.id)}\r\n                                                           type=\"checkbox\"\r\n                                                           name=\"agree\"/>\r\n                                                    {category.translations[i18next.language].name}\r\n                                                </label>\r\n                                            ))\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div onClick={verify} className=\"btn-success\">\r\n                                Tasdiqlash\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalShow.status === \"car-photos\" && (\r\n                        <div className=\"car-photos\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img onClick={() => setModalShow({status: \"\", show: false})}\r\n                                     src=\"./images/admin/x.png\"\r\n                                     alt=\"\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"title\">\r\n                                Avtomobil rasmlari\r\n                            </div>\r\n                            <div className=\"form-wrapper\">\r\n                                {base_car_images.map((image, index) => (\r\n                                    <div key={index} className=\"photo\">\r\n                                        <img src={image.image} alt={`car-${index}`}/>\r\n                                        <div className=\"del-icon\" onClick={() => handleDeleteImageBase(image.id)}>\r\n                                            <img src=\"./images/admin/delete.png\" alt=\"delete\"/>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                                {car_images.map((image, index) => (\r\n                                    <div key={index} className=\"photo\">\r\n                                        <img src={image.preview} alt={`car-${index}`}/>\r\n                                        <div className=\"del-icon\" onClick={() => handleDeleteImage(index)}>\r\n                                            <img src=\"./images/admin/delete.png\" alt=\"delete\"/>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n\r\n                                <div className=\"add-icon\">\r\n                                    <input onChange={handleAddImage} type=\"file\"/>\r\n                                    <img src=\"./images/admin/image.png\" alt=\"\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div onClick={addCar_Images} className=\"btn-success\">\r\n                                Tasdiqlash\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalShow.status === \"car-docs\" && (\r\n                        <div className=\"car-docs\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img onClick={() => setModalShow({status: \"\", show: false})}\r\n                                     src=\"./images/admin/x.png\"\r\n                                     alt=\"\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"title\">\r\n                                Xujjatlar rasmlari\r\n                            </div>\r\n                            <div className=\"form-wrapper\">\r\n                                {base_doc_images.map((image, index) => (\r\n                                    <div key={index} className=\"photo\">\r\n                                        <img src={image.image} alt={`car-${index}`}/>\r\n                                        <div className=\"del-icon\" onClick={() => handleDeleteImageDocsBase(image.id)}>\r\n                                            <img src=\"./images/admin/delete.png\" alt=\"delete\"/>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                                {doc_images.map((image, index) => (\r\n                                    <div key={index} className=\"photo\">\r\n                                        <img src={image.preview} alt={`car-${index}`}/>\r\n                                        <div className=\"del-icon\" onClick={() => handleDeleteImageDocs(index)}>\r\n                                            <img src=\"./images/admin/delete.png\" alt=\"delete\"/>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n\r\n                                <div className=\"add-icon\">\r\n                                    <input onChange={handleAddImageDoc} type=\"file\"/>\r\n                                    <img src=\"./images/admin/image.png\" alt=\"\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div onClick={addCar_Images_Docs} className=\"btn-success\">\r\n                                Tasdiqlash\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </CSSTransition>\r\n\r\n        <div className=\"header\">\r\n\r\n            <div className=\"search-box\">\r\n                <img src=\"./images/admin/search.png\" alt=\"\"/>\r\n                <input onChange={(e) => setGetSearchText(e.target.value)} placeholder=\"Telefon raqam kiriting\"\r\n                       type=\"text\"/>\r\n            </div>\r\n\r\n            <div onClick={() => {\r\n                setModalShow({show: true, status: \"add-driver\"});\r\n            }} className=\"add-driver-btn\">\r\n                Haydovchi qo'shish\r\n            </div>\r\n\r\n        </div>\r\n\r\n        {loader ? <LoaderAdmin/> : <div className=\"table-wrapper\">\r\n            <table>\r\n                <thead>\r\n                <tr>\r\n                    <th>№</th>\r\n                    <th>Haydovchi haqida</th>\r\n                    <th>Yo'nalish</th>\r\n                    <th>Mashina</th>\r\n                    <th>Mashina raqami</th>\r\n                    <th>Moshina ma'lumotlari</th>\r\n                    <th>Moshina rasmlari</th>\r\n                    <th>Dokument rasmlari</th>\r\n                    <th>Tasdiqlash</th>\r\n                    <th>Bloklash</th>\r\n                    <th></th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {productList}\r\n                </tbody>\r\n            </table>\r\n        </div>}\r\n\r\n\r\n        <div className=\"pagination\">\r\n            {driversList.length > 100 ? <ReactPaginate\r\n                breakLabel=\"...\"\r\n                previousLabel={<img src=\"./images/admin/prev.png\" alt=\"\"/>}\r\n                nextLabel={<img src=\"./images/admin/next.png\" alt=\"\"/>}\r\n                pageCount={pageCount}\r\n                onPageChange={changePage}\r\n                containerClassName={\"paginationBttns\"}\r\n                previousLinkClassName={\"previousBttn\"}\r\n                nextLinkClassName={\"nextBttn\"}\r\n                disabledCalassName={\"paginationDisabled\"}\r\n                activeClassName={\"paginationActive\"}\r\n            /> : \"\"}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Drivers","import \"./style.scss\"\nimport {useContext, useEffect, useRef, useState} from \"react\";\nimport axios from \"axios\";\nimport {MyContext} from \"../../App/App\";\n\nconst ChatDriver = () => {\n    let value = useContext(MyContext);\n    const bodyRef = useRef(null);\n    const [chats, setChats] = useState([]);\n    const [message, setMessage] = useState();\n    const [activeCHat, setActiveChat] = useState(null);\n    const [messageText, setMessageText] = useState(\"\");\n    const [getSearchText, setGetSearchText] = useState(\"\");\n    useEffect(() => {\n        if (bodyRef.current) {\n            bodyRef.current.scrollTop = bodyRef.current.scrollHeight;\n        }\n        axios.get(`${value.url}/dashboard/admin-chat/`, {\n            headers: {\n                Authorization: `Token ${localStorage.getItem(\"token\")}`,\n            },\n        }).then((response) => {\n            setChats(response.data);\n        })\n    });\n\n    const getMessage = (chat) => {\n        setActiveChat(chat)\n        axios.get(`${value.url}/dashboard/admin-chat/${chat.id}/`, {\n            headers: {\n                Authorization: `Token ${localStorage.getItem(\"token\")}`,\n            },\n        }).then((response) => {\n            setMessage(response.data);\n        })\n    }\n\n    const sendMessage = () => {\n        let data = {room: activeCHat.id, message: messageText}\n        axios.post(`${value.url}/dashboard/admin-message/`, data, {\n            headers: {\n                Authorization: `Token ${localStorage.getItem(\"token\")}`,\n            },\n        }).then((response) => {\n            setMessageText(\"\")\n            axios.get(`${value.url}/dashboard/admin-chat/${activeCHat.id}/`, {\n                headers: {\n                    Authorization: `Token ${localStorage.getItem(\"token\")}`,\n                },\n            }).then((response) => {\n                setMessage(response.data);\n            })\n        })\n    }\n\n    const delChat = (id) => {\n        axios.delete(`${value.url}/dashboard/admin-chat/${id}/`, {\n            headers: {\n                Authorization: `Token ${localStorage.getItem(\"token\")}`,\n            },\n        }).then((response) => {\n            setActiveChat(null);\n            axios.get(`${value.url}/dashboard/admin-chat/`, {\n                headers: {\n                    Authorization: `Token ${localStorage.getItem(\"token\")}`,\n                },\n            }).then((response) => {\n                setChats(response.data);\n            })\n        })\n    }\n\n    const verify = (id) => {\n        axios.post(`${value.url}/dashboard/admin-chat/close/`,\n            {chat_id: id}, {\n                headers: {\n                    Authorization: `Token ${localStorage.getItem(\"token\")}`,\n                },\n            }).then((response) => {\n            axios.get(`${value.url}/dashboard/admin-chat/`, {\n                headers: {\n                    Authorization: `Token ${localStorage.getItem(\"token\")}`,\n                },\n            }).then((response) => {\n                setChats(response.data);\n            })\n        })\n    }\n\n    return <div className=\"chat-driver\">\n        <div className=\"left\">\n            <div className=\"header\">\n                <div className=\"search-box\">\n                    <img src=\"./images/admin/search.png\" alt=\"\"/>\n                    <input value={getSearchText} onChange={(e) => setGetSearchText(e.target.value)}\n                           placeholder=\"Telefon raqam kiriting\" type=\"text\"/>\n                </div>\n            </div>\n            <div className=\"drivers-box\">\n                {chats\n                    .filter((item) => {\n                        const searchText = getSearchText.toString().toLowerCase().replace(/\\s+/g, '').replace(/\\+/g, '');\n                        const phoneNumber = item.user_phone.toString().toLowerCase().replace(/\\s+/g, '').replace(/\\+/g, '');\n                        return searchText === \"\" || phoneNumber.includes(searchText);\n                    }).map((chat, index) => {\n                        return <div key={index}\n                                    className={`driver ${activeCHat && activeCHat.id === chat.id ? \"active\" : \"\"}`}>\n                            <div className=\"photo\">\n                                <img src=\"./images/admin/user2.png\" alt=\"\"/>\n                            </div>\n                            <div onClick={() => getMessage(chat)} className=\"left-content\">\n                                <div className=\"name\">{chat.title}</div>\n                                <div className=\"number\">{chat.user_phone}</div>\n                            </div>\n                            <div className=\"buttons\">\n\n                                <img onClick={() => verify(chat.id)} className={chat.closed ? \"closed\" : \"disabled\"}\n                                     src=\"./images/admin/check.png\"\n                                     alt=\"check\"/>\n\n                                <img onClick={() => delChat(chat.id)} src=\"./images/admin/delete.png\" alt=\"delete\"/>\n                            </div>\n                        </div>\n                    })}\n            </div>\n        </div>\n\n        {activeCHat && <div className=\"right\">\n            <div className=\"top\">\n                <div className=\"photo\">\n                    <img src=\"./images/admin/user2.png\" alt=\"\"/>\n                </div>\n                <div className=\"left-content\">\n                    <div className=\"name\">{activeCHat && activeCHat.title}</div>\n                    <div className=\"number\">{activeCHat && activeCHat.user_phone}</div>\n                </div>\n            </div>\n            <div ref={bodyRef} className=\"body\">\n                <div className=\"scroll\">\n                    {message && message.map((message, index) => (\n                        <div key={index}\n                             className={message.author && message.author.is_admin ? \"message-my\" : \"message-driver\"}>\n                            <div className=\"message\">\n                                {message.author && <div className=\"name\">\n                                    {message.author.first_name} &ensp;\n                                    {message.author.last_name}\n                                </div>}\n                                {message.message}\n                                <div className=\"time\">\n                                    {message.time}\n                                </div>\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            </div>\n            <div className=\"bottom\">\n                <input value={messageText} onChange={(e) => setMessageText(e.target.value)} placeholder=\"Xabar...\"\n                       type=\"text\"/>\n                <div onClick={sendMessage} className=\"icon-send\">\n                    <img src=\"./images/admin/message.png\" alt=\"\"/>\n                </div>\n            </div>\n        </div>}\n\n    </div>\n}\n\nexport default ChatDriver;","import {useEffect, useRef, useState, useContext} from \"react\";\r\nimport {CSSTransition} from \"react-transition-group\";\r\nimport {useFormik} from \"formik\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport axios from \"axios\";\r\nimport {TextField} from \"@mui/material\";\r\nimport \"./style.scss\"\r\nimport {MyContext} from \"../../App/App\";\r\nimport LoaderAdmin from \"../loader-admin/LoaderAdmin\";\r\n\r\nconst Clients = () => {\r\n    let value = useContext(MyContext);\r\n    const [modalShow, setModalShow] = useState({show: false, status: false});\r\n    const nodeRef = useRef(null);\r\n    const ref = useRef(null);\r\n    const [luggage, setLuggage] = useState(\"male\");\r\n    const [getSearchText, setGetSearchText] = useState(\"\");\r\n    const [driverPhoto, setDriverPhoto] = useState(null);\r\n    const [driversList, setDriversList] = useState([]);\r\n    const [driverId, setDriverId] = useState(\"\");\r\n    const [reason, setReason] = useState(\"\");\r\n    const [profileImage, setProfileImage] = useState(null);\r\n    const [loader, setLoader] = useState(false);\r\n\r\n    const worksPage = 100;\r\n    const [pageNumber, setPageNumber] = useState(0);\r\n    const pagesVisited = pageNumber * worksPage;\r\n    const pageCount = Math.ceil(driversList.length / worksPage);\r\n\r\n    const validate = (values) => {\r\n        const errors = {};\r\n\r\n        if (!values.first_name) {\r\n            errors.first_name = \"Required\";\r\n        }\r\n\r\n        if (!values.last_name) {\r\n            errors.last_name = \"Required\";\r\n        }\r\n\r\n        if (!values.phone) {\r\n            errors.phone = \"Required\";\r\n        }\r\n        return errors;\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            first_name: \"\",\r\n            last_name: \"\",\r\n            phone: \"\",\r\n        },\r\n        validate,\r\n        onSubmit: (values) => {\r\n            sendAllInfo()\r\n        },\r\n    });\r\n\r\n    useEffect(() => {\r\n        getDrivers()\r\n    }, []);\r\n\r\n    const getDrivers = () => {\r\n        setLoader(true);\r\n        axios.get(`${value.url}/dashboard/client/`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setDriversList(response.data);\r\n        }).finally(() => {\r\n            setLoader(false);\r\n        });\r\n    }\r\n\r\n    const changePage = ({selected}) => {\r\n        setPageNumber(selected)\r\n\r\n        setTimeout(() => {\r\n            ref.current?.scrollIntoView({behavior: \"smooth\"});\r\n        }, 500);\r\n    };\r\n\r\n    const getInputPhoto = (event) => {\r\n        const file = event.target.files[0];\r\n        setProfileImage(file);\r\n    };\r\n\r\n    const sendAllInfo = () => {\r\n        const formData = new FormData();\r\n        let user = {\r\n            role: \"client\",\r\n            first_name: formik.values.first_name,\r\n            last_name: formik.values.last_name,\r\n            phone: formik.values.phone,\r\n            gender: luggage,\r\n        }\r\n        for (let key in user) {\r\n            formData.append(key, user[key]);\r\n        }\r\n        if (profileImage) {\r\n            formData.append('profile_image', profileImage);\r\n        }\r\n\r\n        if (!driverId) {\r\n            axios.post(`${value.url}/dashboard/client/`, formData,\r\n                {\r\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n                }).then((response) => {\r\n                setModalShow({status: \"\", show: false})\r\n                getDrivers()\r\n                formik.resetForm();\r\n            })\r\n        }\r\n\r\n        if (driverId) {\r\n            axios.patch(`${value.url}/dashboard/client/${driverId}/`, formData,\r\n                {\r\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n                }).then((response) => {\r\n                setModalShow({status: \"\", show: false})\r\n                getDrivers()\r\n                formik.resetForm();\r\n            })\r\n        }\r\n    }\r\n\r\n    const editInfo = (driver) => {\r\n        formik.setValues({\r\n            first_name: driver.first_name,\r\n            last_name: driver.last_name,\r\n            phone: driver.phone,\r\n        });\r\n        setLuggage(driver.gender)\r\n        setDriverId(driver.id)\r\n    }\r\n\r\n    const blockDriver = (status) => {\r\n        if (status === \"block\" && reason.trim().length > 0) {\r\n            axios.post(`${value.url}/dashboard/client/block-client/`,\r\n                {client_id: driverId, reason}, {\r\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n                }).then((response) => {\r\n                setModalShow({status: \"\", show: false})\r\n                getDrivers()\r\n                setReason(\"\")\r\n            })\r\n        } else alert(\"Bloklash sababini kiriting!\")\r\n\r\n        if (status === \"unblock\") {\r\n            axios.post(`${value.url}/dashboard/client/unblock-client/`,\r\n                {client_id: driverId}, {\r\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n                }).then((response) => {\r\n                setModalShow({status: \"\", show: false})\r\n                getDrivers()\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    const productList = driversList.slice(pagesVisited, pagesVisited + worksPage)\r\n        .filter((item) => {\r\n            const searchText = getSearchText.toString().toLowerCase().replace(/\\s+/g, '').replace(/\\+/g, '');\r\n            const phoneNumber = item.phone.toString().toLowerCase().replace(/\\s+/g, '').replace(/\\+/g, '');\r\n            return searchText === \"\" || phoneNumber.includes(searchText);\r\n        }).map((item, index) => {\r\n            return <tr key={index}>\r\n                <td>{index + 1}</td>\r\n                <td className=\"driver-wrapper\">\r\n                    <div className=\"icon-driver\">\r\n                        <img onClick={() => {\r\n                            setModalShow({show: true, status: \"driver-photo\"});\r\n                            setDriverPhoto(item.profile_image)\r\n                        }} src={item.profile_image} alt=\"\"/>\r\n                    </div>\r\n                    <div className=\"text-driver\">\r\n                        <div className=\"name\">\r\n                            {item.first_name} &nbsp;\r\n                            {item.last_name}\r\n                        </div>\r\n                    </div>\r\n                </td>\r\n                <td>\r\n                    {item.phone}\r\n                </td>\r\n                <td>\r\n                    {item.gender}\r\n                </td>\r\n                <td>\r\n                    <div className={item.is_block ? \"icon-check\" : \"icon-check disablet\"}>\r\n                        <img onClick={() => {\r\n                            setModalShow({show: true, status: \"blocked\"});\r\n                            if (item.is_block) {\r\n                                setReason(item.reason)\r\n                            }\r\n                            setDriverId(item.id)\r\n                        }} src=\"./images/admin/block.png\" alt=\"block\"/>\r\n\r\n                        {item.reason && item.is_block && <div className=\"reason-block\">\r\n                            <img src=\"./images/admin/warning.png\" alt=\"\"/>\r\n                            <div className=\"text\">\r\n                                {item.reason}\r\n                            </div>\r\n                        </div>}\r\n\r\n                    </div>\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <div className=\"edit-icon\">\r\n                    <img onClick={() => {\r\n                        setModalShow({show: true, status: \"edit-driver\"});\r\n                        editInfo(item)\r\n                    }} src=\"./images/admin/edit-tools.png\" alt=\"\"/>\r\n                </div>\r\n            </tr>\r\n        });\r\n\r\n    return <div className=\"clients-container\">\r\n        <CSSTransition\r\n            in={modalShow.show}\r\n            nodeRef={nodeRef}\r\n            timeout={300}\r\n            classNames=\"alert\"\r\n            unmountOnExit\r\n        >\r\n            <div className=\"modal-sloy\">\r\n                <div ref={nodeRef} className=\"modal-card\">\r\n\r\n                    {modalShow.status === \"add-driver\" && (\r\n                        <div className=\"add-driver\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img\r\n                                    onClick={() => {\r\n                                        setModalShow({status: \"\", show: false})\r\n                                        formik.resetForm();\r\n                                    }}\r\n                                    src=\"./images/admin/x.png\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"title\">Mijoz qo'shish</div>\r\n                            <div className=\"title-form\">Mijoz ma'lumotlari:</div>\r\n                            <div className=\"form-container\">\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides-file\">\r\n                                        <input onChange={getInputPhoto} type=\"file\"/>\r\n                                        <div className={`sloy-image ${profileImage ? \"active\" : \"\"}`}>\r\n                                            Profil rasmi\r\n                                            <img src=\"./images/admin/image.png\" alt=\"\"/>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.phone === \"Required\"}\r\n                                            value={formik.values.phone}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"phone\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Telefon raqam\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.first_name === \"Required\"}\r\n                                            value={formik.values.first_name}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"first_name\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Ism\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.last_name === \"Required\"}\r\n                                            value={formik.values.last_name}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"last_name\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Familiya\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <div className=\"title-on\">\r\n                                            Jinsi:\r\n                                        </div>\r\n                                        <div className=\"on-of\">\r\n                                            <div onClick={() => setLuggage(\"male\")}\r\n                                                 className={`of ${luggage === \"male\" ? \"on\" : \"\"}`}>\r\n                                                Erkak\r\n                                            </div>\r\n                                            <div onClick={() => setLuggage(\"female\")}\r\n                                                 className={`of ${luggage === \"female\" ? \"on\" : \"\"}`}>\r\n                                                Ayol\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div onClick={() => {\r\n                                formik.handleSubmit()\r\n                            }} className=\"add-btn\">\r\n                                Qo'shish\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalShow.status === \"driver-photo\" && (\r\n                        <div className=\"driver-photo\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img\r\n                                    onClick={() => setModalShow({status: \"\", show: false})}\r\n                                    src=\"./images/admin/x.png\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"photo\">\r\n                                <img src={driverPhoto} alt=\"\"/>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalShow.status === \"blocked\" && (\r\n                        <div className=\"blocked\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img onClick={() => {\r\n                                    setModalShow({status: \"\", show: false})\r\n                                    setReason(\"\")\r\n                                }}\r\n                                     src=\"./images/admin/x.png\"\r\n                                     alt=\"\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"title\">\r\n                                Haydovchini bloklash\r\n                            </div>\r\n\r\n                            <div className=\"reason-text\">\r\n                                <textarea value={reason} onChange={(e) => setReason(e.target.value)}\r\n                                          placeholder=\"Blok qilish sababini kiriting...\" name=\"reason\"\r\n                                          id=\"reason\"></textarea>\r\n\r\n                                <div className=\"buttons\">\r\n                                    <div onClick={() => {\r\n                                        blockDriver(\"unblock\")\r\n                                    }}\r\n                                         className=\"cancel\">Bekor qilish\r\n                                    </div>\r\n\r\n                                    <div onClick={() => {\r\n                                        blockDriver(\"block\")\r\n                                    }} className=\"success\">Bloklash\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalShow.status === \"edit-driver\" && (\r\n                        <div className=\"edit-driver\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img\r\n                                    onClick={() => {\r\n                                        setModalShow({status: \"\", show: false})\r\n                                        formik.resetForm();\r\n                                    }}\r\n                                    src=\"./images/admin/x.png\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"title\">Mijoz ma'lumotlarini tahrirlash</div>\r\n\r\n                            <div className=\"title-form\">Mijoz ma'lumotlari:</div>\r\n\r\n                            <div className=\"form-container\">\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides-file\">\r\n                                        <input onChange={getInputPhoto} type=\"file\"/>\r\n                                        <div className={`sloy-image ${profileImage ? \"active\" : \"\"}`}>\r\n                                            Profil rasmi\r\n                                            <img src=\"./images/admin/image.png\" alt=\"\"/>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.phone === \"Required\"}\r\n                                            value={formik.values.phone}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"phone\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Telefon raqam\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.first_name === \"Required\"}\r\n                                            value={formik.values.first_name}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"first_name\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Ism\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.last_name === \"Required\"}\r\n                                            value={formik.values.last_name}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"last_name\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Familiya\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <div className=\"title-on\">\r\n                                            Jinsi:\r\n                                        </div>\r\n                                        <div className=\"on-of\">\r\n                                            <div onClick={() => setLuggage(\"male\")}\r\n                                                 className={`of ${luggage === \"male\" ? \"on\" : \"\"}`}>\r\n                                                Erkak\r\n                                            </div>\r\n                                            <div onClick={() => setLuggage(\"female\")}\r\n                                                 className={`of ${luggage === \"female\" ? \"on\" : \"\"}`}>\r\n                                                Ayol\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div onClick={() => {\r\n                                formik.handleSubmit()\r\n                            }} className=\"add-btn\">\r\n                                Saqlash\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </CSSTransition>\r\n\r\n        <div className=\"header\">\r\n            <div className=\"search-box\">\r\n                <img src=\"./images/admin/find-person.png\" alt=\"\"/>\r\n                <input onChange={(e) => setGetSearchText(e.target.value)} placeholder=\"Telefon raqam kiriting\"\r\n                       type=\"text\"/>\r\n            </div>\r\n\r\n            <div onClick={() => {\r\n                setModalShow({show: true, status: \"add-driver\"});\r\n            }} className=\"add-driver-btn\">\r\n                Mijoz qo'shish\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <div className=\"table-wrapper\">\r\n            {loader ? <LoaderAdmin/> : <table>\r\n                <thead>\r\n                <tr>\r\n                    <th>№</th>\r\n                    <th>Mijoz haqida</th>\r\n                    <th>Telefon raqam</th>\r\n                    <th>Jinsi</th>\r\n                    <th>Bloklash</th>\r\n                    <th></th>\r\n                </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                {productList}\r\n                </tbody>\r\n            </table>}\r\n        </div>\r\n\r\n        <div className=\"pagination\">\r\n            {driversList.length > 100 ? <ReactPaginate\r\n                breakLabel=\"...\"\r\n                previousLabel={<img src=\"./images/admin/prev.png\" alt=\"\"/>}\r\n                nextLabel={<img src=\"./images/admin/next.png\" alt=\"\"/>}\r\n                pageCount={pageCount}\r\n                onPageChange={changePage}\r\n                containerClassName={\"paginationBttns\"}\r\n                previousLinkClassName={\"previousBttn\"}\r\n                nextLinkClassName={\"nextBttn\"}\r\n                disabledCalassName={\"paginationDisabled\"}\r\n                activeClassName={\"paginationActive\"}\r\n            /> : \"\"}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Clients","import \"./style.scss\"\nimport {useContext, useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {MyContext} from \"../../App/App\";\nimport i18next from \"i18next\";\nimport {useTranslation} from \"react-i18next\";\n\nconst Colors = () => {\n    const {t} = useTranslation();\n    let value = useContext(MyContext);\n    const [translations, setTranslations] = useState(\n        {\n            name_uz: \"\",\n            name_ru: \"\",\n            name_en: \"\"\n        })\n    const [colorsList, setColorsList] = useState([])\n    const [edit, setEdit] = useState(false)\n    const [editId, setEditId] = useState('')\n\n    const getData = () => {\n        axios.get(`${value.url}/dashboard/carcolor/`,{\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n        }).then((response) => {\n            setColorsList(response.data);\n        })\n    }\n\n    useEffect(() => {\n        getData()\n    }, []);\n\n    const addColor = (status) => {\n        const {name_uz, name_ru, name_en} = translations;\n\n        const isAnyNameFilled = name_uz.trim() && name_ru.trim() && name_en.trim();\n\n        if (!isAnyNameFilled) {\n            alert(\"Iltimos, rang nomini kiriting\");\n            return;\n        }\n\n        const translation_list = {\n            uz: {\n                name: name_uz.trim()\n            },\n            ru: {\n                name: name_ru.trim()\n            },\n            en: {\n                name: name_en.trim()\n            }\n        };\n\n        if (status === \"add\") {\n            axios.post(`${value.url}/dashboard/carcolor/`, {translations: translation_list},\n                {\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n                })\n                .then((response) => {\n                    setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n                    getData();\n                })\n                .catch((error) => {\n                    console.error(\"Rang qo'shishda xatolik:\", error);\n                });\n        }\n\n        if (status === \"edit\") {\n            axios.put(`${value.url}/dashboard/carcolor/${editId}/`, {translations: translation_list},\n                {\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n                })\n                .then((response) => {\n                    setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n                    getData();\n                    setEdit(false);\n                })\n                .catch((error) => {\n                    console.error(\"Rangni tahrirlashda xatolik:\", error);\n                });\n        }\n    };\n\n    const delColor = (id) => {\n        axios.delete(`${value.url}/dashboard/carcolor/${id}/`,{\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n        }).then((response) => {\n            setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n            getData()\n            setEdit(false)\n        })\n    }\n\n    const handleEdit = (color) => {\n        setEdit(true);\n        setEditId(color.id);\n        setTranslations({\n            name_uz: color.translations[\"uz\"].name || \"\",\n            name_ru: color.translations[\"ru\"].name || \"\",\n            name_en: color.translations[\"en\"].name || \"\"\n        });\n    };\n\n    return <div className=\"colors-wrapper\">\n        <div className=\"header\">\n            <div className=\"form-wrapper\">\n                <input\n                    value={translations.name_uz}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_uz: e.target.value})\n                    }\n                    placeholder=\"Rangi nomi (uz)...\"\n                    type=\"text\"\n                />\n                <input\n                    value={translations.name_en}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_en: e.target.value})\n                    }\n                    placeholder=\"Color name (en)...\"\n                    type=\"text\"\n                />\n\n                <input\n                    value={translations.name_ru}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_ru: e.target.value})\n                    }\n                    placeholder=\"Название цвета (ru)...\"\n                    type=\"text\"\n                />\n\n\n                {edit ? <div onClick={() => addColor(\"edit\")} className=\"add-color\">\n                    <img src=\"./images/admin/checkmark.png\" alt=\"\"/>\n                </div> : <div onClick={() => addColor(\"add\")} className=\"add-color\">\n                    <img src=\"./images/admin/add.png\" alt=\"\"/>\n                </div>}\n\n            </div>\n        </div>\n        <div className=\"colors-cards\">\n            <div className=\"wrapper-box\">\n                {\n                    colorsList.map((color, index) => (\n                        <div key={index} className=\"color-card\">\n                            <div className=\"name\">{color.translations[i18next.language].name}</div>\n                            <div className=\"bttons\">\n                                <div onClick={() => handleEdit(color)} className=\"btn\">\n                                    <img src=\"./images/admin/edit-tools.png\" alt=\"\"/>\n                                </div>\n\n                                <div onClick={() => delColor(color.id)} className=\"btn\">\n                                    <img src=\"./images/admin/delete.png\" alt=\"\"/>\n                                </div>\n                            </div>\n                        </div>\n                    ))\n                }\n            </div>\n        </div>\n    </div>\n}\n\nexport default Colors;","import \"./style.scss\"\nimport {useContext, useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {MyContext} from \"../../App/App\";\nimport i18next from \"i18next\";\n\nconst CarBrand = () => {\n    let value = useContext(MyContext);\n    const [colorsList, setColorsList] = useState([])\n    const [edit, setEdit] = useState(false)\n    const [editId, setEditId] = useState('')\n    const [translations, setTranslations] = useState(\n        {\n            name_uz: \"\",\n            name_ru: \"\",\n            name_en: \"\"\n        })\n\n    const getData = () => {\n        axios.get(`${value.url}/dashboard/carmake/`,{\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n        }).then((response) => {\n            setColorsList(response.data);\n        })\n    }\n\n    useEffect(() => {\n        getData()\n    }, []);\n\n    const addColor = (status) => {\n        const {name_uz, name_ru, name_en} = translations;\n\n        const isAnyNameFilled = name_uz.trim() && name_ru.trim() && name_en.trim();\n\n        if (!isAnyNameFilled) {\n            alert(\"Iltimos, rang nomini kiriting\");\n            return;\n        }\n\n        const translation_list = {\n            uz: {\n                name: name_uz.trim()\n            },\n            ru: {\n                name: name_ru.trim()\n            },\n            en: {\n                name: name_en.trim()\n            }\n        };\n\n        if (status === \"add\") {\n            axios.post(`${value.url}dashboard/carmake/`, {translations: translation_list},\n                {\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n                })\n                .then((response) => {\n                    setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n                    getData();\n                })\n                .catch((error) => {\n                    console.error(\"Rang qo'shishda xatolik:\", error);\n                });\n        }\n\n        if (status === \"edit\") {\n            axios.put(`${value.url}dashboard/carmake/${editId}/`, {translations: translation_list},\n                {\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n                })\n                .then((response) => {\n                    setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n                    getData();\n                    setEdit(false);\n                })\n                .catch((error) => {\n                    console.error(\"Rangni tahrirlashda xatolik:\", error);\n                });\n        }\n    };\n\n    const delColor = (id) => {\n        axios.delete(`${value.url}dashboard/carmake/${id}/`,{\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n        }).then((response) => {\n            setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n            getData()\n            setEdit(false)\n        })\n    }\n\n    const handleEdit = (color) => {\n        setEdit(true);\n        setEditId(color.id);\n        setTranslations({\n            name_uz: color.translations[\"uz\"].name || \"\",\n            name_ru: color.translations[\"ru\"].name || \"\",\n            name_en: color.translations[\"en\"].name || \"\"\n        });\n    };\n\n    return <div className=\"car-brand-wrapper\">\n        <div className=\"header\">\n            <div className=\"form-wrapper\">\n                <input\n                    value={translations.name_uz}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_uz: e.target.value})\n                    }\n                    placeholder=\"Brend nomi (uz)...\"\n                    type=\"text\"\n                />\n                <input\n                    value={translations.name_en}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_en: e.target.value})\n                    }\n                    placeholder=\"Brand name (en)...\"\n                    type=\"text\"\n                />\n\n                <input\n                    value={translations.name_ru}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_ru: e.target.value})\n                    }\n                    placeholder=\"Название бренда (ru)...\"\n                    type=\"text\"\n                />\n\n\n                {edit ? <div onClick={() => addColor(\"edit\")} className=\"add-color\">\n                    <img src=\"./images/admin/checkmark.png\" alt=\"\"/>\n                </div> : <div onClick={() => addColor(\"add\")} className=\"add-color\">\n                    <img src=\"./images/admin/add.png\" alt=\"\"/>\n                </div>}\n\n            </div>\n        </div>\n        <div className=\"colors-cards\">\n            <div className=\"wrapper-box\">\n                {\n                    colorsList.map((color, index) => (\n                        <div key={index} className=\"color-card\">\n                            <div className=\"name\">{color.translations[i18next.language].name}</div>\n                            <div className=\"bttons\">\n                                <div onClick={() => handleEdit(color)} className=\"btn\">\n                                    <img src=\"./images/admin/edit-tools.png\" alt=\"\"/>\n                                </div>\n\n                                <div onClick={() => delColor(color.id)} className=\"btn\">\n                                    <img src=\"./images/admin/delete.png\" alt=\"\"/>\n                                </div>\n                            </div>\n                        </div>\n                    ))\n                }\n            </div>\n        </div>\n    </div>\n}\n\nexport default CarBrand;","import {useCallback, useEffect, useRef, useState, useMemo, useContext} from \"react\";\r\nimport {CSSTransition} from \"react-transition-group\";\r\nimport {useFormik} from \"formik\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport {\r\n    TextField,\r\n    MenuItem,\r\n    InputLabel,\r\n    FormControl,\r\n    Select\r\n} from \"@mui/material\";\r\nimport \"./style.scss\"\r\nimport axios from \"axios\";\r\nimport {MyContext} from \"../../App/App\";\r\n\r\nconst Service = () => {\r\n    let value = useContext(MyContext);\r\n    const [modalShow, setModalShow] = useState({show: false, status: false});\r\n    const nodeRef = useRef(null);\r\n    const [serviceList, setServiceList] = useState([]);\r\n    const [editId, setEditId] = useState(\"\");\r\n    const ref = useRef(null);\r\n    const [driversList, setDriversList] = useState([{}]);\r\n    const worksPage = 100;\r\n    const [pageNumber, setPageNumber] = useState(0);\r\n    const pagesVisited = pageNumber * worksPage;\r\n\r\n    const pageCount = Math.ceil(driversList.length / worksPage);\r\n\r\n    const changePage = ({selected}) => {\r\n        setPageNumber(selected)\r\n\r\n        setTimeout(() => {\r\n            ref.current?.scrollIntoView({behavior: \"smooth\"});\r\n        }, 500);\r\n    };\r\n\r\n    const validate = (values) => {\r\n        const errors = {};\r\n\r\n        if (!values.service) {\r\n            errors.service = \"Required\";\r\n        }\r\n\r\n        if (!values.includedCars) {\r\n            errors.includedCars = \"Required\";\r\n        }\r\n\r\n        if (!values.start_price) {\r\n            errors.start_price = \"Required\";\r\n        }\r\n\r\n        if (!values.price_per_km) {\r\n            errors.price_per_km = \"Required\";\r\n        }\r\n\r\n        if (!values.price_per_min) {\r\n            errors.price_per_min = \"Required\";\r\n        }\r\n\r\n        if (!values.wait_price_per_min) {\r\n            errors.wait_price_per_min = \"Required\";\r\n        }\r\n\r\n        if (!values.free_wait_time) {\r\n            errors.free_wait_time = \"Required\";\r\n        }\r\n\r\n        return errors;\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            service: \"\",\r\n            start_price: \"\",\r\n            price_per_km: \"\",\r\n            price_per_min: \"\",\r\n            wait_price_per_min: \"\",\r\n            free_wait_time: \"\",\r\n            includedCars: \"\"\r\n        },\r\n        validate,\r\n        onSubmit: (values) => {\r\n            sendAllInfo()\r\n        },\r\n    });\r\n\r\n    const sendAllInfo = () => {\r\n        let allInfo = {\r\n            service: formik.values.service,\r\n            includedCars: formik.values.includedCars,\r\n            start_price: formik.values.start_price,\r\n            price_per_km: formik.values.price_per_km,\r\n            price_per_min: formik.values.price_per_min,\r\n            wait_price_per_min: formik.values.wait_price_per_min,\r\n            free_wait_time: formik.values.free_wait_time\r\n        }\r\n\r\n        if (!editId) {\r\n            axios.post(`${value.url}/dashboard/service/`, allInfo, {\r\n                headers: {\r\n                    Authorization: `Token ${localStorage.getItem(\"token\")}`,\r\n                },\r\n            }).then((response) => {\r\n                getDrivers()\r\n                setModalShow({status: \"\", show: false})\r\n                formik.resetForm();\r\n            })\r\n        }\r\n\r\n        if (editId) {\r\n            axios.put(`${value.url}/dashboard/service/${editId}/`, allInfo,\r\n                {\r\n                    headers: {\r\n                        Authorization: `Token ${localStorage.getItem(\"token\")}`,\r\n                    },\r\n                }).then((response) => {\r\n                getDrivers()\r\n                formik.resetForm();\r\n                setModalShow({status: \"\", show: false})\r\n            })\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getDrivers()\r\n    }, []);\r\n\r\n    const delColor = (id) => {\r\n        axios.delete(`${value.url}/dashboard/service/${id}/`, {\r\n            headers: {\r\n                Authorization: `Token ${localStorage.getItem(\"token\")}`,\r\n            },\r\n        }).then((response) => {\r\n            getDrivers()\r\n        })\r\n    }\r\n\r\n    const getDrivers = () => {\r\n        axios.get(`${value.url}/dashboard/service/`, {\r\n            headers: {\r\n                Authorization: `Token ${localStorage.getItem(\"token\")}`,\r\n            },\r\n        }).then((response) => {\r\n            setServiceList(response.data);\r\n        })\r\n    }\r\n\r\n    const editValues = (service) => {\r\n        setEditId(service.id)\r\n        setModalShow({show: true, status: \"edit-driver\"});\r\n        formik.setValues({\r\n            service: service.service,\r\n            start_price: service.start_price,\r\n            price_per_km: service.price_per_km,\r\n            price_per_min: service.price_per_min,\r\n            wait_price_per_min: service.wait_price_per_min,\r\n            free_wait_time: service.free_wait_time,\r\n            includedCars: service.includedCars,\r\n        });\r\n    }\r\n\r\n    const productList = serviceList.slice(pagesVisited, pagesVisited + worksPage).map((item, index) => {\r\n        return <tr key={index}>\r\n            <td>{index + 1}</td>\r\n            <td>\r\n                {item.service}\r\n            </td>\r\n            <td>\r\n                {item.includedCars}\r\n            </td>\r\n            <td>{item.start_price}</td>\r\n            <td>{item.price_per_km}</td>\r\n            <td>{item.price_per_min}</td>\r\n            <td>{item.wait_price_per_min}</td>\r\n            <td>{item.free_wait_time}</td>\r\n            <td>\r\n                <div className=\"icon\">\r\n                    <img onClick={() => delColor(item.id)} src=\"./images/admin/delete.png\" alt=\"\"/>\r\n                </div>\r\n            </td>\r\n            <td>\r\n            </td>\r\n            <div className=\"edit-icon\">\r\n                <img onClick={() => editValues(item)} src=\"./images/admin/edit-tools.png\" alt=\"\"/>\r\n            </div>\r\n        </tr>\r\n    });\r\n\r\n    return <div className=\"service-container\">\r\n        <CSSTransition\r\n            in={modalShow.show}\r\n            nodeRef={nodeRef}\r\n            timeout={300}\r\n            classNames=\"alert\"\r\n            unmountOnExit\r\n        >\r\n            <div className=\"modal-sloy\">\r\n                <div ref={nodeRef} className=\"modal-card\">\r\n\r\n                    {modalShow.status === \"add-driver\" && (\r\n                        <div className=\"add-driver\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img\r\n                                    onClick={() => setModalShow({status: \"\", show: false})}\r\n                                    src=\"./images/admin/x.png\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"title\">Tarif qo'shish</div>\r\n\r\n                            <div className=\"title-form\">Tarif ma'lumotlari:</div>\r\n\r\n                            <div className=\"form-container\">\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Tarif nomi</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.service === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.service}\r\n                                                label=\"Tarif nomi\"\r\n                                                name=\"service\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                <MenuItem value=\"standart\">Standart</MenuItem>\r\n                                                <MenuItem value=\"bussiness\">Bussiness</MenuItem>\r\n                                                <MenuItem value=\"comfort\">Comfort</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.includedCars === \"Required\"}\r\n                                            value={formik.values.includedCars}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"includedCars\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Tarifga kiruvchi mashinalar\" variant=\"outlined\"\r\n                                            className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.start_price === \"Required\"}\r\n                                            value={formik.values.start_price}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"start_price\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Boshlash narxi\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.price_per_km === \"Required\"}\r\n                                            value={formik.values.price_per_km}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"price_per_km\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Narx (km)\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.price_per_min === \"Required\"}\r\n                                            value={formik.values.price_per_min}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"price_per_min\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Narx (min)\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.wait_price_per_min === \"Required\"}\r\n                                            value={formik.values.wait_price_per_min}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"wait_price_per_min\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Kutish uchun narx (min)\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.free_wait_time === \"Required\"}\r\n                                            value={formik.values.free_wait_time}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"free_wait_time\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Tekin kutish vaqti\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div onClick={sendAllInfo} className=\"add-btn\">\r\n                                    Tarif qo'shish\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalShow.status === \"edit-driver\" && (\r\n                        <div className=\"edit-driver\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img\r\n                                    onClick={() => setModalShow({status: \"\", show: false})}\r\n                                    src=\"./images/admin/x.png\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"title\">Tarifni tahrirlash</div>\r\n\r\n                            <div className=\"title-form\">Tarif ma'lumotlari:</div>\r\n\r\n                            <div className=\"form-container\">\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Tarif nomi</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.service === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.service}\r\n                                                label=\"Tarif nomi\"\r\n                                                name=\"service\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                <MenuItem value=\"standart\">Standart</MenuItem>\r\n                                                <MenuItem value=\"bussiness\">Bussiness</MenuItem>\r\n                                                <MenuItem value=\"comfort\">Comfort</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.includedCars === \"Required\"}\r\n                                            value={formik.values.includedCars}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"includedCars\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Tarifga kiruvchi mashinalar\" variant=\"outlined\"\r\n                                            className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.start_price === \"Required\"}\r\n                                            value={formik.values.start_price}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"start_price\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Boshlash narxi\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.price_per_km === \"Required\"}\r\n                                            value={formik.values.price_per_km}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"price_per_km\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Narx (km)\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.price_per_min === \"Required\"}\r\n                                            value={formik.values.price_per_min}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"price_per_min\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Narx (min)\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.wait_price_per_min === \"Required\"}\r\n                                            value={formik.values.wait_price_per_min}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"wait_price_per_min\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Kutish uchun narx (min)\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.free_wait_time === \"Required\"}\r\n                                            value={formik.values.free_wait_time}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"free_wait_time\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Tekin kutish vaqti\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div onClick={sendAllInfo} className=\"add-btn\">\r\n                                    Tasdiqlash\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </CSSTransition>\r\n\r\n        <div className=\"header\">\r\n            <div onClick={() => {\r\n                setModalShow({show: true, status: \"add-driver\"});\r\n            }} className=\"add-driver-btn\">\r\n                Tarif qo'shish\r\n            </div>\r\n        </div>\r\n\r\n        <table>\r\n            <thead>\r\n            <tr>\r\n                <th>№</th>\r\n                <th>Nomi</th>\r\n                <th>Moshinalar</th>\r\n                <th>Boshlash narxi</th>\r\n                <th>Narx km</th>\r\n                <th>Narx min</th>\r\n                <th>Kutish narxi min</th>\r\n                <th>Tekin kutish vaqti</th>\r\n                <th>O'chirish</th>\r\n                <th></th>\r\n            </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n            {productList}\r\n            </tbody>\r\n        </table>\r\n\r\n        <div className=\"pagination\">\r\n            {driversList.length > 100 ? <ReactPaginate\r\n                breakLabel=\"...\"\r\n                previousLabel={<img src=\"./images/admin/prev.png\" alt=\"\"/>}\r\n                nextLabel={<img src=\"./images/admin/next.png\" alt=\"\"/>}\r\n                pageCount={pageCount}\r\n                onPageChange={changePage}\r\n                containerClassName={\"paginationBttns\"}\r\n                previousLinkClassName={\"previousBttn\"}\r\n                nextLinkClassName={\"nextBttn\"}\r\n                disabledCalassName={\"paginationDisabled\"}\r\n                activeClassName={\"paginationActive\"}\r\n            /> : \"\"}\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default Service","import {useCallback, useEffect, useRef, useState, useMemo, useContext} from \"react\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport \"./style.scss\"\r\nimport axios from \"axios\";\r\nimport {MyContext} from \"../../App/App\";\r\n\r\nconst Balance = () => {\r\n    const [getSearchText, setGetSearchText] = useState(\"\");\r\n    let value = useContext(MyContext);\r\n    const ref = useRef(null);\r\n    const [driversList, setDriversList] = useState([]);\r\n    const worksPage = 100;\r\n    const [pageNumber, setPageNumber] = useState(0);\r\n    const pagesVisited = pageNumber * worksPage;\r\n\r\n    useEffect(() => {\r\n        axios.get(`${value.url}/dashboard/balance/`, {\r\n            headers: {\r\n                Authorization: `Token ${localStorage.getItem(\"token\")}`,\r\n            },\r\n        }).then((response) => {\r\n            setDriversList(response.data);\r\n        })\r\n    }, []);\r\n\r\n    const productList = driversList.slice(pagesVisited, pagesVisited + worksPage)\r\n        .filter((item) => {\r\n            const searchText = getSearchText.toString().toLowerCase().replace(/\\s+/g, '').replace(/\\+/g, '');\r\n            const phoneNumber = item.driver.phone.toString().toLowerCase().replace(/\\s+/g, '').replace(/\\+/g, '');\r\n            return searchText === \"\" || phoneNumber.includes(searchText);\r\n        }).map((item, index) => {\r\n        return <tr key={index}>\r\n            <td>{index+1}</td>\r\n            <td className=\"driver-wrapper\">\r\n                <div className=\"text-driver\">\r\n                    <div\r\n                        className=\"name\">{item.driver && item.driver.first_name} {item.driver && item.driver.last_name}</div>\r\n                    <div className=\"phone\">\r\n                        {item.driver && item.driver.phone}\r\n                    </div>\r\n                </div>\r\n            </td>\r\n            <td>\r\n                {item.driver && item.driver.car_number}\r\n            </td>\r\n            <td>\r\n                {item.id_number}\r\n            </td>\r\n            <td>\r\n                {item.fund}\r\n            </td>\r\n        </tr>\r\n    });\r\n\r\n    const pageCount = Math.ceil(driversList.length / worksPage);\r\n\r\n    const changePage = ({selected}) => {\r\n        setPageNumber(selected)\r\n\r\n        setTimeout(() => {\r\n            ref.current?.scrollIntoView({behavior: \"smooth\"});\r\n        }, 500);\r\n    };\r\n\r\n    return <div className=\"balance-container\">\r\n        <div className=\"header\">\r\n            <div className=\"search-box\">\r\n                <img src=\"./images/admin/search.png\" alt=\"\"/>\r\n                <input onChange={(e) => setGetSearchText(e.target.value)} placeholder=\"Telefon raqam kiriting\" type=\"text\"/>\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"table-wrapper\">\r\n            <table>\r\n                <thead>\r\n                <tr>\r\n                    <th>№</th>\r\n                    <th>Haydovchi</th>\r\n                    <th>Avtomobil raqami</th>\r\n                    <th>Id raqam</th>\r\n                    <th>Narx</th>\r\n\r\n                </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                {productList}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n\r\n\r\n        <div className=\"pagination\">\r\n            {driversList.length > 100 ? <ReactPaginate\r\n                breakLabel=\"...\"\r\n                previousLabel={<img src=\"./images/admin/prev.png\" alt=\"\"/>}\r\n                nextLabel={<img src=\"./images/admin/next.png\" alt=\"\"/>}\r\n                pageCount={pageCount}\r\n                onPageChange={changePage}\r\n                containerClassName={\"paginationBttns\"}\r\n                previousLinkClassName={\"previousBttn\"}\r\n                nextLinkClassName={\"nextBttn\"}\r\n                disabledCalassName={\"paginationDisabled\"}\r\n                activeClassName={\"paginationActive\"}\r\n            /> : \"\"}\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default Balance","import {useEffect, useRef, useState, useMemo, useContext} from \"react\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport \"./style.scss\"\r\nimport {CSSTransition} from \"react-transition-group\";\r\nimport axios from \"axios\";\r\nimport {MyContext} from \"../../App/App\";\r\nimport i18next from \"i18next\";\r\nimport LoaderAdmin from \"../loader-admin/LoaderAdmin\";\r\n\r\nconst Orders = () => {\r\n    let value = useContext(MyContext);\r\n    const [modalShow, setModalShow] = useState({show: false, status: false});\r\n    const nodeRef = useRef(null);\r\n    const [loader, setLoader] = useState(false);\r\n\r\n    const [links, setLinks] = useState({});\r\n    const [Pages, setPages] = useState([]);\r\n    const [activeItem, setActiveItem] = useState(1);\r\n    const [orderStatus, setOrderStatus] = useState();\r\n    const [orderId, setOrderId] = useState(\"\");\r\n    const [reasonList, setReasonList] = useState([]);\r\n    const [reason, setReason] = useState(\"\");\r\n    const [driversList, setDriversList] = useState([]);\r\n    const [statistics, setStatistics] = useState([]);\r\n    const [information, setInformation] = useState([]);\r\n\r\n    const [client, setClient] = useState(\"\");\r\n    const [driver, setDriver] = useState(\"\");\r\n    const [status, setStatus] = useState(\"\");\r\n    const [direction, setDirection] = useState(\"\");\r\n    const [tarif, setTarif] = useState(\"\");\r\n    const [date, setDate] = useState(\"\");\r\n\r\n\r\n    const visiblePages = [];\r\n    const totalPages = Pages.length;\r\n\r\n    if (totalPages <= 7) {\r\n        visiblePages.push(...Pages.map((_, index) => index + 1));\r\n    } else {\r\n        visiblePages.push(1);\r\n\r\n        if (activeItem > 3) {\r\n            visiblePages.push(\"...\");\r\n        }\r\n\r\n        for (let i = Math.max(2, activeItem - 1); i <= Math.min(totalPages - 1, activeItem + 1); i++) {\r\n            visiblePages.push(i);\r\n        }\r\n\r\n        if (activeItem < totalPages - 2) {\r\n            visiblePages.push(\"...\");\r\n        }\r\n\r\n        visiblePages.push(totalPages);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getList();\r\n\r\n        axios.get(`${value.url}/dashboard/rejectreson/?admin=true`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setReasonList(response.data);\r\n        })\r\n\r\n        axios.get(`${value.url}/dashboard/order-stats/`, {\r\n            headers: {\r\n                \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\r\n            }\r\n        }).then((response) => {\r\n            setStatistics(response.data);\r\n        })\r\n\r\n    }, []);\r\n\r\n    const getList = (url = null, page = 1) => {\r\n        setLoader(true);\r\n        const main = url ? url : `${value.url}/dashboard/order/?page=${page}`;\r\n        axios.get(main, {\r\n            headers: {\r\n                \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\r\n            }\r\n        }).then((response) => {\r\n            setDriversList(response.data.results);\r\n            setLinks(response.data.links);\r\n            setPages(response.data.links.pages);\r\n            setActiveItem(page);\r\n        }).finally(() => {\r\n            setLoader(false);\r\n        });\r\n\r\n    };\r\n\r\n    const changeStatus = () => {\r\n        axios.post(`${value.url}/dashboard/order/reject-order/`, {\r\n                order_id: orderId,\r\n                reason_id: reason,\r\n                status: orderStatus\r\n            },\r\n            {\r\n                headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n            })\r\n            .then((response) => {\r\n                getList()\r\n            })\r\n    }\r\n\r\n    const filterData = () => {\r\n        setLoader(true);\r\n        let page = 1\r\n        axios.get(`${value.url}/dashboard/order/?client_phone=${client}&driver_phone=${driver}&service_type=${direction}&category_type=${tarif}&created_date=${date}&status=${status}`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setDriversList(response.data.results);\r\n            setLinks(response.data.links);\r\n            setPages(response.data.links.pages);\r\n            setActiveItem(page);\r\n        }).finally(() => {\r\n            setLoader(false);\r\n        });\r\n    }\r\n\r\n    return <div className=\"orders-container\">\r\n        <CSSTransition\r\n            in={modalShow.show}\r\n            nodeRef={nodeRef}\r\n            timeout={300}\r\n            classNames=\"alert\"\r\n            unmountOnExit\r\n        >\r\n            <div className=\"modal-sloy\">\r\n                <div ref={nodeRef} className=\"modal-card\">\r\n\r\n                    {modalShow.status === \"car-information\" && (\r\n\r\n                        <div className=\"car-information\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img\r\n                                    onClick={() => setModalShow({status: \"\", show: false})}\r\n                                    src=\"./images/admin/x.png\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"title\">\r\n                                Qo'shimcha malumotlar\r\n                            </div>\r\n                            {console.log(information)}\r\n                            <div className=\"information\">\r\n                                <div className=\"info\">\r\n                                    <div className=\"title\">Buyurtma raqami:</div>\r\n                                    <div\r\n                                        className=\"text\">{information.id}</div>\r\n                                </div>\r\n                                <div className=\"info\">\r\n                                    <div className=\"title\">Yo'nalish:</div>\r\n                                    <div\r\n                                        className=\"text\">{information.car_service.translations[i18next.language].name}</div>\r\n                                </div>\r\n                                <div className=\"info\">\r\n                                    <div className=\"title\">Masofa:</div>\r\n                                    <div\r\n                                        className=\"text\">{information.distance}</div>\r\n                                </div>\r\n                                {\r\n                                    information.end_date && <div className=\"info\">\r\n                                        <div className=\"title\">Tugatilgan sana:</div>\r\n                                        <div className=\"text\">{information.end_date}</div>\r\n                                    </div>\r\n                                }\r\n                                <div className=\"info\">\r\n                                    <div className=\"title\">Olib ketish manzili:</div>\r\n\r\n                                    <div\r\n                                        className=\"text\">{information.drop_off_locations && information.drop_off_locations.map((item, index) => {\r\n                                        return <div key={index}> {index + 1}- manzil : {item.address} <br/></div>\r\n\r\n                                    })}</div>\r\n                                </div>\r\n                                <div className=\"info\">\r\n                                    <div className=\"title\">Yekazish manzili:</div>\r\n\r\n                                    <div\r\n                                        className=\"text\">{information.pick_up_locations && information.pick_up_locations.map((item, index) => {\r\n                                        return <div key={index}>{index + 1}- manzil : {item.address} <br/></div>\r\n\r\n                                    })}</div>\r\n                                </div>\r\n                                {\r\n                                    information.extra_services.length > 0 &&\r\n                                    <div className=\"info\">\r\n                                        <div className=\"title\">Qo'shimcha xizmatlar:</div>\r\n\r\n                                        <div\r\n                                            className=\"text\">{information.extra_services && information.extra_services.map((item, index) => {\r\n                                            return <div key={index}>{item.translations[i18next.language].name}</div>\r\n\r\n                                        })}</div>\r\n                                    </div>\r\n                                }\r\n\r\n                                <div className=\"info\">\r\n                                    <div className=\"title\">Yo'lovchilar soni:</div>\r\n                                    <div\r\n                                        className=\"text\">{information.passanger_count}</div>\r\n                                </div>\r\n\r\n                                <div className=\"info\">\r\n                                    <div className=\"title\">To'lov turi:</div>\r\n                                    <div className=\"text\">\r\n                                        {information.payment_type === \"cash\" && \"Naqt\"}\r\n                                        {information.payment_type === \"card\" && \"Karta\"}\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div className=\"info\">\r\n                                    <div className=\"title\">Olib ketish sanasi:</div>\r\n                                    <div className=\"text\">\r\n                                        {information.pick_up_date}\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                {information.car_service.service_type === \"postal\" && <div className=\"info\">\r\n                                    <div className=\"title\">To'lovni kim qiladi:</div>\r\n                                    <div\r\n                                        className=\"text\">\r\n                                        {information.payer === \"sender\" && \"Yuboruvchi\"}\r\n                                        {information.payer === \"receiver\" && \"Qabul qilovchi\"}\r\n                                    </div>\r\n                                </div>}\r\n\r\n                                {information.car_service.service_type === \"postal\" && <div className=\"info\">\r\n                                    <div className=\"title\">Qabul qlivchi telefon raqami:</div>\r\n                                    <div\r\n                                        className=\"text\">\r\n                                        {information.receiver_phone}\r\n                                    </div>\r\n                                </div>}\r\n\r\n                                {information.car_service.service_type === \"postal\" && <div className=\"info\">\r\n                                    <div className=\"title\">Yuboruvchi telefon raqami:</div>\r\n                                    <div\r\n                                        className=\"text\">\r\n                                        {information.sender_phone}\r\n                                    </div>\r\n                                </div>}\r\n\r\n                                {information.status === \"rejected\"\r\n                                    && <div className=\"info\">\r\n                                        <div className=\"title\">Bekor qilish sababi:</div>\r\n                                        <div\r\n                                            className=\"text\">\r\n                                            {information.rejected_reason.translations[i18next.language].name}\r\n                                        </div>\r\n                                    </div>}\r\n\r\n                                {information.comment_to_driver\r\n                                    && <div className=\"info\">\r\n                                        <div className=\"title\">Haydovchi uchun izoh:</div>\r\n                                        <div\r\n                                            className=\"text\">\r\n                                            {information.comment_to_driver}\r\n                                        </div>\r\n                                    </div>}\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalShow.status === \"change-status\" && (\r\n                        <div className=\"change-status\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img\r\n                                    onClick={() => setModalShow({status: \"\", show: false})}\r\n                                    src=\"./images/admin/x.png\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"title\">\r\n                                Buyurtma bosqichini tanlang\r\n                            </div>\r\n                            <div className=\"form-box\">\r\n                                <select onChange={(e) => setOrderStatus(e.target.value)} name=\"status\">\r\n                                    <option value=\"\"></option>\r\n                                    <option value=\"arrived\">Mijozga kelish</option>\r\n                                    <option value=\"picked\">Mijozni olish</option>\r\n                                    <option value=\"started\">Boshlash</option>\r\n                                    <option value=\"finished\">Yakunlash</option>\r\n                                    <option value=\"rejected\">Bekor qilish</option>\r\n                                </select>\r\n\r\n                                {orderStatus === \"rejected\" &&\r\n                                    <>\r\n                                        <label htmlFor=\"reason\">Bekor qilish sababini tanlang:</label>\r\n                                        <select onChange={(e) => setReason(e.target.value)} name=\"status\" id=\"reason\">\r\n                                            <option value=\"\"></option>\r\n                                            {reasonList.map((item, index) => (\r\n                                                <option key={index} value={item.id}>\r\n                                                    {item.translations[i18next.language].name}\r\n                                                </option>\r\n                                            ))}\r\n                                        </select>\r\n                                    </>\r\n                                }\r\n                            </div>\r\n                            <div onClick={changeStatus} className=\"success-btn\">\r\n                                Tasdiqlash\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalShow.status === \"statistic\" && (\r\n                        <div className=\"statistic\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img\r\n                                    onClick={() => setModalShow({status: \"\", show: false})}\r\n                                    src=\"./images/admin/x.png\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"title\">\r\n                                Buyurtmalar statistikasi\r\n                            </div>\r\n                            <div className=\"form-box\">\r\n                                <div className=\"statistic-box\">\r\n                                    <div className=\"name\">\r\n                                        Umumiy:\r\n                                    </div>\r\n\r\n                                    <div className=\"num\">\r\n                                        {statistics.total_orders}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"statistic-box\">\r\n                                    <div className=\"name\">\r\n                                        Yakunlangan:\r\n                                    </div>\r\n\r\n                                    <div className=\"num\">\r\n                                        {statistics.finished_orders}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"statistic-box\">\r\n                                    <div className=\"name\">\r\n                                        Faol:\r\n                                    </div>\r\n\r\n                                    <div className=\"num\">\r\n                                        {statistics.active_orders}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"statistic-box\">\r\n                                    <div className=\"name\">\r\n                                        Bekor qilingan:\r\n                                    </div>\r\n\r\n                                    <div className=\"num\">\r\n                                        {statistics.rejected_orders}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"statistic-box\">\r\n                                    <div className=\"name\">\r\n                                        Bugungi buyurtmalar soni:\r\n                                    </div>\r\n\r\n                                    <div className=\"num\">\r\n                                        {statistics.orders_today}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"statistic-box\">\r\n                                    <div className=\"name\">\r\n                                        Joriy oydagi buyurtmalar soni:\r\n                                    </div>\r\n\r\n                                    <div className=\"num\">\r\n                                        {statistics.orders_this_month}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </CSSTransition>\r\n\r\n        <div className=\"header\">\r\n            <div className=\"left-side\">\r\n                <div className=\"search-box\">\r\n                    <input value={client} onChange={(e) => setClient(e.target.value)} placeholder=\"Mijoz tel raqami\"\r\n                           type=\"text\"/>\r\n                </div>\r\n                <div className=\"search-box\">\r\n                    <input value={driver} onChange={(e) => setDriver(e.target.value)} placeholder=\"Haydovchi tel raqami\"\r\n                           type=\"text\"/>\r\n                </div>\r\n                <div className=\"search-box\">\r\n                    <label htmlFor=\"direction\">Yo'nalish:</label>\r\n                    <select value={direction} onChange={(e) => setDirection(e.target.value)} name=\"direction\"\r\n                            id=\"direction\">\r\n                        <option value=\"\"></option>\r\n                        <option value=\"regional\">\r\n                            Taxi\r\n                        </option>\r\n                        <option value=\"postal\">\r\n                            Jo'natma\r\n                        </option>\r\n                        <option value=\"minivan\">\r\n                            Miniven\r\n                        </option>\r\n                        <option value=\"travel\">\r\n                            Sayohat\r\n                        </option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"search-box\">\r\n                    <label htmlFor=\"tarif\">Tarif:</label>\r\n                    <select value={tarif} onChange={(e) => setTarif(e.target.value)} name=\"tarif\" id=\"tarif\">\r\n                        <option value=\"\"></option>\r\n                        <option value=\"standart\">\r\n                            Standart\r\n                        </option>\r\n                        <option value=\"comfort\">\r\n                            Komfort\r\n                        </option>\r\n                        <option value=\"business\">\r\n                            Biznes\r\n                        </option>\r\n                        <option value=\"delivery\">\r\n                            Jo'natma\r\n                        </option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"search-box\">\r\n                    <label htmlFor=\"status\">Status:</label>\r\n                    <select value={status} onChange={(e) => setStatus(e.target.value)} name=\"status\" id=\"status\">\r\n                        <option value=\"\"></option>\r\n                        <option value=\"rejected\">\r\n                            Bekor qilingan\r\n                        </option>\r\n                        <option value=\"started\">\r\n                            Boshlangan\r\n                        </option>\r\n                        <option value=\"arrived\">\r\n                            Mijozga keldi\r\n                        </option>\r\n                        <option value=\"picked\">\r\n                            Mijozni oldi\r\n                        </option>\r\n                        <option value=\"finished\">\r\n                            Yakunlangan\r\n                        </option>\r\n                        <option value=\"active\">\r\n                            Faol\r\n                        </option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"search-box\">\r\n                    <label htmlFor=\"date\">Sana:</label>\r\n                    <input value={date} onChange={(e) => setDate(e.target.value)} type=\"date\"/>\r\n                </div>\r\n                <div onClick={filterData} className=\"filter-btn\">\r\n                    <img src=\"./images/admin/panel.png\" alt=\"\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"header\">\r\n            <div className=\"left-side\">\r\n\r\n            </div>\r\n            <div onClick={() => setModalShow({show: true, status: \"statistic\"})} className=\"statisitcs\">\r\n                Statistika\r\n                <img src=\"./images/data-management.png\" alt=\"a\"/>\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"wrapper-table\">\r\n            {\r\n                loader ? <LoaderAdmin/> :\r\n                    <table>\r\n                        <thead>\r\n                        <tr>\r\n                            <th>№</th>\r\n                            <th>Mijoz</th>\r\n                            <th>Haydovchi</th>\r\n                            <th>Buyurtma berilgan sana</th>\r\n                            <th>Tarif</th>\r\n                            <th>Buyurtma narxi</th>\r\n                            <th>Batafsil ma'lumotlar</th>\r\n                            <th>Statusni ozgartirish</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {driversList.map((item, index) => {\r\n                            return <tr key={index}>\r\n                                <td>{index + 1}</td>\r\n                                <td>\r\n                                    <div className=\"text-driver\">\r\n                                        <div className=\"name\">\r\n                                            {item.client.first_name} &nbsp;\r\n                                            {item.client.last_name}\r\n                                        </div>\r\n                                        <div className=\"phone\">\r\n                                            {item.client.phone}\r\n                                        </div>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div className=\"text-driver\">\r\n                                        {item.driver && <>\r\n                                            <div className=\"name\">\r\n                                                {item.driver.first_name} &nbsp;\r\n                                                {item.driver.last_name}\r\n                                            </div>\r\n                                            <div className=\"phone\">\r\n                                                {item.driver.phone}\r\n                                            </div>\r\n                                        </>}\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    {item.created_at}\r\n                                </td>\r\n                                <td>\r\n                                    {item.car_category.translations[i18next.language].name}\r\n                                </td>\r\n                                <td>\r\n                                    {item.price} so'm\r\n                                </td>\r\n                                <td>\r\n                                    <div className=\"icon\">\r\n                                        <img onClick={() => {\r\n                                            setInformation(item)\r\n                                            setModalShow({show: true, status: \"car-information\"});\r\n                                        }} src=\"./images/admin/document.png\" alt=\"\"/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n\r\n                                    {item.status === \"rejected\" ? <div className=\"status-red\">\r\n                                        Bekor qilingan\r\n                                    </div> : item.status === \"finished\" ? <div className=\"status-green\">\r\n                                            Yakunlangan\r\n                                        </div> :\r\n                                        <div className=\"icon\">\r\n                                            <div className=\"status-blue\">\r\n                                                {item.status === \"active\" && \"Faol\"}\r\n                                                {item.status === \"started\" && \"Boshlandi\"}\r\n                                                {item.status === \"arrived\" && \"Mijozga keldi\"}\r\n                                                {item.status === \"picked\" && \"Mijozni oldi\"}\r\n                                            </div>\r\n                                            <img onClick={() => {\r\n                                                setOrderId(item.id)\r\n                                                setModalShow({show: true, status: \"change-status\"});\r\n                                            }} className=\"status-icon\" src=\"./images/admin/status.png\" alt=\"\"/>\r\n                                        </div>}\r\n\r\n                                </td>\r\n                            </tr>\r\n                        })}\r\n                        </tbody>\r\n                    </table>\r\n            }\r\n\r\n        </div>\r\n\r\n        <div className=\"pagination\">\r\n            <div onClick={() => {\r\n                if (activeItem > 1) {\r\n                    getList(links.previous, activeItem - 1);\r\n                }\r\n            }} className=\"prev\">\r\n                <img src=\"./images/admin/prev.png\" alt=\"Prev\"/>\r\n            </div>\r\n\r\n            {visiblePages.map((item, index) => (\r\n                <div key={index}\r\n                     onClick={() => {\r\n                         if (item !== \"...\") {\r\n                             getList(null, item);\r\n                         }\r\n                     }}\r\n                     className={`items ${activeItem === item ? \"active\" : \"\"} `}\r\n                     style={{cursor: item === \"...\" ? \"default\" : \"pointer\"}}>\r\n                    {item}\r\n                </div>\r\n            ))}\r\n\r\n            <div className=\"next\" onClick={() => {\r\n                if (activeItem < totalPages) {\r\n                    getList(links.next, activeItem + 1);\r\n                }\r\n            }}>\r\n                <img src=\"./images/admin/next.png\" alt=\"Next\"/>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default Orders","import \"./style.scss\"\nimport {useContext, useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {MyContext} from \"../../App/App\";\nimport i18next from \"i18next\";\n\nconst CarModel = () => {\n    let value = useContext(MyContext);\n    const [car_make, setCar_make] = useState([]);\n    const [car_model, setCar_model] = useState([]);\n    const [carBrandId, setCarBrandId] = useState(\"\")\n\n    const [edit, setEdit] = useState(false)\n    const [editId, setEditId] = useState('')\n    const [translations, setTranslations] = useState(\n        {\n            name_uz: \"\",\n            name_ru: \"\",\n            name_en: \"\"\n        })\n\n    const getData = () => {\n        axios.get(`${value.url}/dashboard/carmake/`, {\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n        }).then((response) => {\n            setCar_make(response.data);\n        })\n    }\n\n    useEffect(() => {\n        getData()\n    }, []);\n\n    const addColor = (status) => {\n        const {name_uz, name_ru, name_en} = translations;\n\n        const isAnyNameFilled = name_uz.trim() && name_ru.trim() && name_en.trim();\n\n        if (!isAnyNameFilled) {\n            alert(\"Iltimos, rang nomini kiriting\");\n            return;\n        }\n\n        const translation_list = {\n            uz: {\n                name: name_uz.trim()\n            },\n            ru: {\n                name: name_ru.trim()\n            },\n            en: {\n                name: name_en.trim()\n            }\n        };\n\n        if (status === \"add\") {\n            axios.post(`${value.url}/dashboard/carmodel/`, {make: carBrandId, translations: translation_list},\n                {\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n                })\n                .then((response) => {\n                    setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n                    axios.get(`${value.url}/dashboard/carmake/${carBrandId}/`, {\n                        headers: {\n                            \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\n                        }\n                    }).then((response) => {\n                        setCar_model(response.data);\n                    })\n\n                })\n                .catch((error) => {\n                    console.error(\"Rang qo'shishda xatolik:\", error);\n                });\n        }\n\n        if (status === \"edit\") {\n            axios.put(`${value.url}/dashboard/carmodel/${editId}/`, {translations: translation_list},\n                {\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n                })\n                .then((response) => {\n                    setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n                    setEdit(false);\n                    axios.get(`${value.url}/dashboard/carmake/${carBrandId}/`, {\n                        headers: {\n                            \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\n                        }\n                    }).then((response) => {\n                        setCar_model(response.data);\n                    })\n\n                })\n                .catch((error) => {\n                    console.error(\"Rangni tahrirlashda xatolik:\", error);\n                });\n        }\n    };\n\n    const delColor = (id) => {\n        axios.delete(`${value.url}/dashboard/carmodel/${id}/`, {\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n        }).then((response) => {\n            setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n            axios.get(`${value.url}/dashboard/carmake/${carBrandId}/`, {\n                headers: {\n                    \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\n                }\n            }).then((response) => {\n                setCar_model(response.data);\n            })\n            setEdit(false)\n        })\n    }\n\n    const handleEdit = (color) => {\n        setEdit(true);\n        setEditId(color.id);\n        setTranslations({\n            name_uz: color.translations[\"uz\"].name || \"\",\n            name_ru: color.translations[\"ru\"].name || \"\",\n            name_en: color.translations[\"en\"].name || \"\"\n        });\n    };\n\n    const getCarNames = (e) => {\n        setCarBrandId(e.target.value)\n        axios.get(`${value.url}/dashboard/carmake/${e.target.value}/`, {\n            headers: {\n                \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\n            }\n        }).then((response) => {\n            setCar_model(response.data);\n        })\n    }\n\n    return <div className=\"car-model-wrapper\">\n        <div className=\"header\">\n            <div className=\"form-wrapper\">\n                <label htmlFor=\"\">Moshina brendini tanlang: </label>\n                <select onChange={getCarNames} name=\"car-brand\"\n                        id=\"car-brand\">\n                    <option value=\"\"></option>\n                    {car_make.map((brand) => (\n                        <option key={brand.id} value={brand.id}>\n                            {brand.translations[i18next.language].name}\n                        </option>\n                    ))}\n                </select>\n\n                <input\n                    value={translations.name_uz}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_uz: e.target.value})\n                    }\n                    placeholder=\"Avtomobil nomi (uz)...\"\n                    type=\"text\"\n                />\n\n                <input\n                    value={translations.name_en}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_en: e.target.value})\n                    }\n                    placeholder=\"Car name (en)...\"\n                    type=\"text\"\n                />\n\n                <input\n                    value={translations.name_ru}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_ru: e.target.value})\n                    }\n                    placeholder=\"Название автомобиля (ru)...\"\n                    type=\"text\"\n                />\n\n                {edit ? <div onClick={() => addColor(\"edit\")} className=\"add-color\">\n                    <img src=\"./images/admin/checkmark.png\" alt=\"\"/>\n                </div> : <div onClick={() => addColor(\"add\")} className=\"add-color\">\n                    <img src=\"./images/admin/add.png\" alt=\"\"/>\n                </div>}\n\n            </div>\n        </div>\n        <div className=\"colors-cards\">\n            <div className=\"wrapper-box\">\n                {\n                    car_model.map((color, index) => (\n                        <div key={index} className=\"color-card\">\n                            <div className=\"name\">{color.translations[i18next.language].name}</div>\n                            <div className=\"bttons\">\n                                <div onClick={() => handleEdit(color)} className=\"btn\">\n                                    <img src=\"./images/admin/edit-tools.png\" alt=\"\"/>\n                                </div>\n\n                                <div onClick={() => delColor(color.id)} className=\"btn\">\n                                    <img src=\"./images/admin/delete.png\" alt=\"\"/>\n                                </div>\n                            </div>\n                        </div>\n                    ))\n                }\n            </div>\n        </div>\n    </div>\n}\n\nexport default CarModel;","import {useEffect, useRef, useState, useMemo, useContext} from \"react\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport \"./style.scss\"\r\nimport {MyContext} from \"../../App/App\";\r\nimport axios from \"axios\";\r\n\r\nconst Payment = () => {\r\n    let value = useContext(MyContext);\r\n    const ref = useRef(null);\r\n    const [driversList, setDriversList] = useState([]);\r\n    const [getSearchText, setGetSearchText] = useState(\"\");\r\n    const worksPage = 100;\r\n    const [pageNumber, setPageNumber] = useState(0);\r\n    const pagesVisited = pageNumber * worksPage;\r\n    const [statistics, setStatistics] = useState([]);\r\n\r\n    const pageCount = Math.ceil(driversList.length / worksPage);\r\n\r\n    const changePage = ({selected}) => {\r\n        setPageNumber(selected)\r\n\r\n        setTimeout(() => {\r\n            ref.current?.scrollIntoView({behavior: \"smooth\"});\r\n        }, 500);\r\n    };\r\n\r\n    useEffect(() => {\r\n        axios.get(`${value.url}/dashboard/payment/`, {\r\n            headers: {\r\n                \"Authorization\": `Token ${localStorage.getItem(\"token\")}`\r\n            }\r\n        }).then((response) => {\r\n            setDriversList(response.data.payment);\r\n            setStatistics(response.data.statistics);\r\n        })\r\n    }, []);\r\n\r\n    const productList = driversList.slice(pagesVisited, pagesVisited + worksPage)\r\n        .filter((item) => {\r\n            const searchText = getSearchText.toString().toLowerCase().replace(/\\s+/g, '').replace(/\\+/g, '');\r\n            const phoneNumber = item.balance_id.toString().toLowerCase().replace(/\\s+/g, '').replace(/\\+/g, '');\r\n            return searchText === \"\" || phoneNumber.includes(searchText);\r\n        }).map((item, index) => {\r\n            return <tr key={index}>\r\n                <td>{index + 1}</td>\r\n\r\n                <td>\r\n                    {item.balance_id}\r\n                </td>\r\n\r\n                <td>\r\n                    {item.amount}\r\n                </td>\r\n\r\n                <td>\r\n                    {item.status}\r\n                </td>\r\n                <td>\r\n                    {item.payment_operator}\r\n                </td>\r\n\r\n                <td>\r\n                    {item.updated_at}\r\n                </td>\r\n                <td>\r\n                    {item.reason}\r\n                </td>\r\n            </tr>\r\n        });\r\n\r\n    return <div className=\"payment-container\">\r\n        <div className=\"header\">\r\n            <div className=\"search-box\">\r\n                <img src=\"./images/admin/search.png\" alt=\"\"/>\r\n                <input onChange={(e) => setGetSearchText(e.target.value)} placeholder=\"ID kiritng\" type=\"text\"/>\r\n            </div>\r\n            <div className=\"statisitcs\">\r\n                {statistics.length > 0 && statistics.map((item, index) => (\r\n                    <div key={index} className=\"statistic-box\">\r\n                        <div className=\"name\">\r\n                            {item.status === \"refunded\" && \"Qaytarilgan\"}\r\n                            {item.status === \"waiting\" && \"Kutilmoqda\"}\r\n                            {item.status === \"confirmed\" && \"Tasdiqlangan\"}\r\n                            {item.status === \"rejected\" && \"Bekor qilingan\"}\r\n\r\n                        </div>\r\n                        <div className=\"num\">{item.count}</div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"wrapper-table\">\r\n            <table>\r\n                <thead>\r\n                <tr>\r\n                    <th>№</th>\r\n                    <th>Balans id</th>\r\n                    <th>Miqdor</th>\r\n                    <th>Status</th>\r\n                    <th>To'lov turi</th>\r\n                    <th>To'lov sanasi</th>\r\n                    <th>Sabab</th>\r\n                </tr>\r\n\r\n                </thead>\r\n\r\n                <tbody>\r\n                {productList}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n\r\n        <div className=\"pagination\">\r\n            {driversList.length > 100 ? <ReactPaginate\r\n                breakLabel=\"...\"\r\n                previousLabel={<img src=\"./images/admin/prev.png\" alt=\"\"/>}\r\n                nextLabel={<img src=\"./images/admin/next.png\" alt=\"\"/>}\r\n                pageCount={pageCount}\r\n                onPageChange={changePage}\r\n                containerClassName={\"paginationBttns\"}\r\n                previousLinkClassName={\"previousBttn\"}\r\n                nextLinkClassName={\"nextBttn\"}\r\n                disabledCalassName={\"paginationDisabled\"}\r\n                activeClassName={\"paginationActive\"}\r\n            /> : \"\"}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Payment","import \"./style.scss\"\nimport {useContext, useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {MyContext} from \"../../App/App\";\nimport i18next from \"i18next\";\n\nconst RejectReason = () => {\n    let value = useContext(MyContext);\n    const [colorsList, setColorsList] = useState([])\n    const [edit, setEdit] = useState(false)\n    const [rejectStatus, setRejectStatus] = useState(\"\")\n    const [editId, setEditId] = useState('')\n    const [translations, setTranslations] = useState(\n        {\n            name_uz: \"\",\n            name_ru: \"\",\n            name_en: \"\"\n        })\n\n    const getData = (status) => {\n        setRejectStatus(status)\n        axios.get(`${value.url}/dashboard/rejectreson/?type=${status}`, {\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n        }).then((response) => {\n            setColorsList(response.data);\n        })\n    }\n\n    const addColor = (status) => {\n        const {name_uz, name_ru, name_en} = translations;\n\n        const isAnyNameFilled = name_uz.trim() && name_ru.trim() && name_en.trim();\n\n        if (!isAnyNameFilled) {\n            alert(\"Iltimos, rang nomini kiriting\");\n            return;\n        }\n\n        const translation_list = {\n            uz: {\n                name: name_uz.trim()\n            },\n            ru: {\n                name: name_ru.trim()\n            },\n            en: {\n                name: name_en.trim()\n            }\n        };\n\n        if (status === \"add\") {\n            axios.post(`${value.url}/dashboard/rejectreson/`, {type: rejectStatus, translations: translation_list},\n                {\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n                })\n                .then((response) => {\n                    setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n                    getData();\n                })\n                .catch((error) => {\n                    console.error(\"Rang qo'shishda xatolik:\", error);\n                });\n        }\n\n        if (status === \"edit\") {\n            axios.put(`${value.url}/dashboard/rejectreson/${editId}/`, {\n                    type: rejectStatus,\n                    translations: translation_list\n                },\n                {\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n                })\n                .then((response) => {\n                    setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n                    getData();\n                    setEdit(false);\n                })\n                .catch((error) => {\n                    console.error(\"Rangni tahrirlashda xatolik:\", error);\n                });\n        }\n    };\n\n    const delColor = (id) => {\n        axios.delete(`${value.url}/dashboard/rejectreson/${id}/`, {\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n        }).then((response) => {\n            setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n            getData()\n            setEdit(false)\n        })\n    }\n\n    const handleEdit = (color) => {\n        setEdit(true);\n        setEditId(color.id);\n        setTranslations({\n            name_uz: color.translations[\"uz\"].name || \"\",\n            name_ru: color.translations[\"ru\"].name || \"\",\n            name_en: color.translations[\"en\"].name || \"\"\n        });\n    };\n\n    return <div className=\"reject-reason-wrapper\">\n        <div className=\"header\">\n            <div className=\"form-wrapper\">\n                <label htmlFor=\"status\">Moshina brendini tanlang: </label>\n                <select onChange={(e) => getData(e.target.value)} name=\"status\"\n                        id=\"status\">\n                    <option value=\"\"></option>\n                    <option value=\"driver\">Haydovchi</option>\n                    <option value=\"client\">Mijoz</option>\n                    <option value=\"admin\">Admin</option>\n                </select>\n\n                <input\n                    value={translations.name_uz}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_uz: e.target.value})\n                    }\n                    placeholder=\"Sabab nomi (uz)...\"\n                    type=\"text\"\n                />\n                <input\n                    value={translations.name_en}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_en: e.target.value})\n                    }\n                    placeholder=\"Reason name (en)...\"\n                    type=\"text\"\n                />\n\n                <input\n                    value={translations.name_ru}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_ru: e.target.value})\n                    }\n                    placeholder=\"Название причины (ru)...\"\n                    type=\"text\"\n                />\n\n\n                {edit ? <div onClick={() => addColor(\"edit\")} className=\"add-color\">\n                    <img src=\"./images/admin/checkmark.png\" alt=\"\"/>\n                </div> : <div onClick={() => addColor(\"add\")} className=\"add-color\">\n                    <img src=\"./images/admin/add.png\" alt=\"\"/>\n                </div>}\n\n            </div>\n        </div>\n        <div className=\"colors-cards\">\n            <div className=\"wrapper-box\">\n                {\n                    colorsList.map((color, index) => (\n                        <div key={index} className=\"color-card\">\n                            <div className=\"name\">{color.translations[i18next.language].name}</div>\n                            <div className=\"bttons\">\n                                <div onClick={() => handleEdit(color)} className=\"btn\">\n                                    <img src=\"./images/admin/edit-tools.png\" alt=\"\"/>\n                                </div>\n\n                                <div onClick={() => delColor(color.id)} className=\"btn\">\n                                    <img src=\"./images/admin/delete.png\" alt=\"\"/>\n                                </div>\n                            </div>\n                        </div>\n                    ))\n                }\n            </div>\n        </div>\n    </div>\n}\n\nexport default RejectReason;","import \"./style.scss\"\nimport {useContext, useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {MyContext} from \"../../App/App\";\nimport i18next from \"i18next\";\n\nconst ExtraServices = () => {\n    let value = useContext(MyContext);\n    const [colorsList, setColorsList] = useState([])\n    const [edit, setEdit] = useState(false)\n    const [editId, setEditId] = useState('')\n    const [isMain, setIsMain] = useState(false);\n    const [price, setPrice] = useState(\"\");\n    const [translations, setTranslations] = useState(\n        {\n            name_uz: \"\",\n            name_ru: \"\",\n            name_en: \"\"\n        })\n\n    const getData = () => {\n        axios.get(`${value.url}/dashboard/extraservices/`, {\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n        }).then((response) => {\n            setColorsList(response.data);\n        })\n    }\n\n    useEffect(() => {\n        getData()\n    }, []);\n\n    const addColor = (status) => {\n        const {name_uz, name_ru, name_en} = translations;\n\n        const isAnyNameFilled = name_uz.trim() && name_ru.trim() && name_en.trim();\n\n        if (!isAnyNameFilled) {\n            alert(\"Iltimos, formani toldiring\");\n            return;\n        }\n\n        const translation_list = {\n            uz: {\n                name: name_uz.trim()\n            },\n            ru: {\n                name: name_ru.trim()\n            },\n            en: {\n                name: name_en.trim()\n            }\n        };\n\n        if (status === \"add\") {\n            axios.post(`${value.url}/dashboard/extraservices/`, {\n                    is_main: isMain,\n                    price,\n                    translations: translation_list\n                },\n                {\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n                })\n                .then((response) => {\n                    setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n                    setIsMain(false);\n                    setPrice(\"\")\n                    getData();\n                })\n                .catch((error) => {\n                    console.error(\"Xizmat qo'shishda xatolik:\", error);\n                });\n        }\n\n        if (status === \"edit\") {\n            axios.put(`${value.url}/dashboard/extraservices/${editId}/`, {\n                    is_main: isMain,\n                    price,\n                    translations: translation_list\n                },\n                {\n                    headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n                })\n                .then((response) => {\n                    setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n                    getData();\n                    setEdit(false);\n                    setIsMain(false);\n                    setPrice(\"\")\n                })\n                .catch((error) => {\n                    console.error(\"Rangni tahrirlashda xatolik:\", error);\n                });\n        }\n    };\n\n    const delColor = (id) => {\n        axios.delete(`${value.url}/dashboard/extraservices/${id}/`, {\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\n        }).then((response) => {\n            setTranslations({name_uz: \"\", name_ru: \"\", name_en: \"\"});\n            getData()\n            setEdit(false)\n        })\n    }\n\n    const handleEdit = (color) => {\n        setEdit(true);\n        setEditId(color.id);\n        setTranslations({\n            name_uz: color.translations[\"uz\"].name || \"\",\n            name_ru: color.translations[\"ru\"].name || \"\",\n            name_en: color.translations[\"en\"].name || \"\"\n        });\n        setIsMain(color.is_main)\n        setPrice(color.price)\n    };\n\n    const handleCheckboxChange = () => {\n        setIsMain(!isMain);\n    };\n\n    return <div className=\"extra-services-wrapper\">\n        <div className=\"header\">\n            <div className=\"form-wrapper\">\n\n                <label htmlFor=\"ismain\" className=\"ismain\">\n                    <div className=\"name\">\n                        Asosiymi?\n                    </div>\n\n                    <input\n                        type=\"checkbox\"\n                        checked={isMain}\n                        id=\"ismain\"\n                        onChange={handleCheckboxChange}\n                    />\n                </label>\n\n                <input\n                    value={price}\n                    onChange={(e) => setPrice(e.target.value)}\n                    placeholder=\"Narx\"\n                    type=\"number\"\n                />\n\n\n                <input\n                    value={translations.name_uz}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_uz: e.target.value})\n                    }\n                    placeholder=\"Xizmat nomi (uz)...\"\n                    type=\"text\"\n                />\n                <input\n                    value={translations.name_en}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_en: e.target.value})\n                    }\n                    placeholder=\"Price name (en)...\"\n                    type=\"text\"\n                />\n\n                <input\n                    value={translations.name_ru}\n                    onChange={(e) =>\n                        setTranslations({...translations, name_ru: e.target.value})\n                    }\n                    placeholder=\"Название услуги (ru)...\"\n                    type=\"text\"\n                />\n\n\n                {edit ? <div onClick={() => addColor(\"edit\")} className=\"add-color\">\n                    <img src=\"./images/admin/checkmark.png\" alt=\"\"/>\n                </div> : <div onClick={() => addColor(\"add\")} className=\"add-color\">\n                    <img src=\"./images/admin/add.png\" alt=\"\"/>\n                </div>}\n\n            </div>\n        </div>\n        <div className=\"colors-cards\">\n            <div className=\"wrapper-box\">\n                {\n                    colorsList.map((service, index) => (\n                        <div key={index} className={`color-card ${service.is_main && \"ismain\"}`}>\n                            <div className=\"name\">{service.translations[i18next.language].name}: {service.price} so'm\n                            </div>\n                            <div className=\"bttons\">\n                                <div onClick={() => handleEdit(service)} className=\"btn\">\n                                    <img src=\"./images/admin/edit-tools.png\" alt=\"\"/>\n                                </div>\n\n                                <div onClick={() => delColor(service.id)} className=\"btn\">\n                                    <img src=\"./images/admin/delete.png\" alt=\"\"/>\n                                </div>\n                            </div>\n                        </div>\n                    ))\n                }\n            </div>\n        </div>\n    </div>\n}\n\nexport default ExtraServices;","import {useEffect, useRef, useState, useContext} from \"react\";\r\nimport {CSSTransition} from \"react-transition-group\";\r\nimport {useFormik} from \"formik\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport {\r\n    TextField,\r\n    MenuItem,\r\n    InputLabel,\r\n    FormControl,\r\n    Select\r\n} from \"@mui/material\";\r\nimport \"./style.scss\"\r\nimport axios from \"axios\";\r\nimport {MyContext} from \"../../App/App\";\r\nimport i18next from \"i18next\";\r\n\r\nconst Price = () => {\r\n    let value = useContext(MyContext);\r\n    const [modalShow, setModalShow] = useState({show: false, status: false});\r\n    const nodeRef = useRef(null);\r\n    const [direction, setDirection] = useState([])\r\n    const [tarif, setTarif] = useState([]);\r\n    const [regions, setRegions] = useState([]);\r\n    const [serviceList, setServiceList] = useState([]);\r\n    const [editId, setEditId] = useState(\"\");\r\n    const ref = useRef(null);\r\n    const worksPage = 50;\r\n    const [pageNumber, setPageNumber] = useState(0);\r\n    const pagesVisited = pageNumber * worksPage;\r\n\r\n    const pageCount = Math.ceil(serviceList.length / worksPage);\r\n\r\n    const changePage = ({selected}) => {\r\n        setPageNumber(selected)\r\n\r\n        setTimeout(() => {\r\n            ref.current?.scrollIntoView({behavior: \"smooth\"});\r\n        }, 500);\r\n    };\r\n\r\n    const validate = (values) => {\r\n        const errors = {};\r\n\r\n        if (!values.car_service) {\r\n            errors.car_service = \"Required\";\r\n        }\r\n\r\n        if (!values.car_category) {\r\n            errors.car_category = \"Required\";\r\n        }\r\n        if (!values.from_region) {\r\n            errors.from_region = \"Required\";\r\n        }\r\n        if (!values.to_region) {\r\n            errors.to_region = \"Required\";\r\n        }\r\n        if (!values.price) {\r\n            errors.price = \"Required\";\r\n        }\r\n\r\n        return errors;\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            car_service: \"\",\r\n            car_category: \"\",\r\n            from_region: \"\",\r\n            to_region: \"\",\r\n            price: \"\",\r\n        },\r\n        validate,\r\n        onSubmit: (values) => {\r\n            sendAllInfo()\r\n        },\r\n    });\r\n\r\n    const sendAllInfo = () => {\r\n        let allInfo = {\r\n            car_service: formik.values.car_service,\r\n            car_category: formik.values.car_category,\r\n            from_region: formik.values.from_region,\r\n            to_region: formik.values.to_region,\r\n            price: formik.values.price,\r\n        }\r\n\r\n        if (!editId) {\r\n            axios.post(`${value.url}/dashboard/price/`, allInfo, {\r\n                headers: {\r\n                    Authorization: `Token ${localStorage.getItem(\"token\")}`,\r\n                },\r\n            }).then((response) => {\r\n                getDrivers()\r\n                setModalShow({status: \"\", show: false})\r\n                formik.resetForm();\r\n            })\r\n        }\r\n\r\n        if (editId) {\r\n            axios.put(`${value.url}/dashboard/price/${editId}/`, allInfo,\r\n                {\r\n                    headers: {\r\n                        Authorization: `Token ${localStorage.getItem(\"token\")}`,\r\n                    },\r\n                }).then((response) => {\r\n                getDrivers()\r\n                formik.resetForm();\r\n                setModalShow({status: \"\", show: false})\r\n            })\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getDrivers()\r\n\r\n        axios.get(`${value.url}/dashboard/region/`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setRegions(response.data);\r\n        })\r\n\r\n        axios.get(`${value.url}/dashboard/carcategory/`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setTarif(response.data);\r\n        })\r\n\r\n        axios.get(`${value.url}/dashboard/carservice/`, {\r\n            headers: {\"Authorization\": `Token ${localStorage.getItem(\"token\")}`}\r\n        }).then((response) => {\r\n            setDirection(response.data);\r\n        })\r\n\r\n    }, []);\r\n\r\n    const delColor = (id) => {\r\n        axios.delete(`${value.url}/dashboard/price/${id}/`, {\r\n            headers: {\r\n                Authorization: `Token ${localStorage.getItem(\"token\")}`,\r\n            },\r\n        }).then((response) => {\r\n            getDrivers()\r\n        })\r\n    }\r\n\r\n    const getDrivers = () => {\r\n        axios.get(`${value.url}/dashboard/price/`, {\r\n            headers: {\r\n                Authorization: `Token ${localStorage.getItem(\"token\")}`,\r\n            },\r\n        }).then((response) => {\r\n            setServiceList(response.data);\r\n        })\r\n    }\r\n\r\n    const editValues = (service) => {\r\n        setEditId(service.id)\r\n        setModalShow({show: true, status: \"edit-driver\"});\r\n        formik.setValues({\r\n            car_service: service.car_service,\r\n            car_category: service.car_category,\r\n            from_region: service.from_region,\r\n            to_region: service.to_region,\r\n            price: service.price,\r\n        });\r\n    }\r\n\r\n    const productList = serviceList.slice(pagesVisited, pagesVisited + worksPage).map((item, index) => {\r\n        return <tr key={index}>\r\n            <td>{index + 1}</td>\r\n            <td>\r\n                {item.car_service}\r\n            </td>\r\n            <td>\r\n                {item.car_category}\r\n            </td>\r\n            <td>{item.from_region}</td>\r\n            <td>{item.to_region}</td>\r\n            <td>{item.price}</td>\r\n            <td>\r\n                <div className=\"icon\">\r\n                    <img onClick={() => delColor(item.id)} src=\"./images/admin/delete.png\" alt=\"\"/>\r\n                </div>\r\n            </td>\r\n            <td>\r\n            </td>\r\n            <div className=\"edit-icon\">\r\n                <img onClick={() => editValues(item)} src=\"./images/admin/edit-tools.png\" alt=\"\"/>\r\n            </div>\r\n        </tr>\r\n    });\r\n\r\n    return <div className=\"price-container\">\r\n        <CSSTransition\r\n            in={modalShow.show}\r\n            nodeRef={nodeRef}\r\n            timeout={300}\r\n            classNames=\"alert\"\r\n            unmountOnExit\r\n        >\r\n            <div className=\"modal-sloy\">\r\n                <div ref={nodeRef} className=\"modal-card\">\r\n\r\n                    {modalShow.status === \"add-driver\" && (\r\n                        <div className=\"add-driver\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img\r\n                                    onClick={() => setModalShow({status: \"\", show: false})}\r\n                                    src=\"./images/admin/x.png\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"title\">Narx qo'shish</div>\r\n\r\n                            <div className=\"form-container\">\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Yo'nalish</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.car_service === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.car_service}\r\n                                                label=\"Yo'nalish\"\r\n                                                name=\"car_service\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {direction.map((item, index) => (\r\n                                                    <MenuItem key={index} value={item.service_type}>\r\n                                                        {item.translations[i18next.language].name}\r\n                                                    </MenuItem>\r\n                                                ))}\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Tarif</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.car_category === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.car_category}\r\n                                                label=\"Tarif\"\r\n                                                name=\"car_category\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {tarif.map((item, index) => (\r\n                                                    <MenuItem key={index} value={item.category_type}>\r\n                                                        {item.translations[i18next.language].name}\r\n                                                    </MenuItem>\r\n                                                ))}\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Qayerdan</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.from_region === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.from_region}\r\n                                                label=\"Qayerdan\"\r\n                                                name=\"from_region\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {\r\n                                                    regions.map((item, index) => {\r\n                                                        return <MenuItem key={index}\r\n                                                                         value={item.id}>\r\n                                                            {item.translations[i18next.language].name}\r\n                                                        </MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Qayerga</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.to_region === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.to_region}\r\n                                                label=\"Qayerga\"\r\n                                                name=\"to_region\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {\r\n                                                    regions.map((item, index) => {\r\n                                                        return <MenuItem key={index}\r\n                                                                         value={item.id}>\r\n                                                            {item.translations[i18next.language].name}\r\n                                                        </MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.price === \"Required\"}\r\n                                            value={formik.values.price}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"price\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Narxi\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div onClick={sendAllInfo} className=\"add-btn\">\r\n                                    Narx qo'shish\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalShow.status === \"edit-driver\" && (\r\n                        <div className=\"add-driver\">\r\n                            <div className=\"cancel-btn\">\r\n                                <img\r\n                                    onClick={() => setModalShow({status: \"\", show: false})}\r\n                                    src=\"./images/admin/x.png\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"title\">Narxni tahrirlash</div>\r\n\r\n                            <div className=\"form-container\">\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Yo'nalish</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.car_service === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.car_service}\r\n                                                label=\"Yo'nalish\"\r\n                                                name=\"car_service\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {direction.map((item, index) => (\r\n                                                    <MenuItem key={index} value={item.service_type}>\r\n                                                        {item.translations[i18next.language].name}\r\n                                                    </MenuItem>\r\n                                                ))}\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Tarif</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.car_category === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.car_category}\r\n                                                label=\"Tarif\"\r\n                                                name=\"car_category\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {tarif.map((item, index) => (\r\n                                                    <MenuItem key={index} value={item.category_type}>\r\n                                                        {item.translations[i18next.language].name}\r\n                                                    </MenuItem>\r\n                                                ))}\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Qayerdan</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.from_region === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.from_region}\r\n                                                label=\"Qayerdan\"\r\n                                                name=\"from_region\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {\r\n                                                    regions.map((item, index) => {\r\n                                                        return <MenuItem key={index}\r\n                                                                         value={item.id}>\r\n                                                            {item.translations[i18next.language].name}\r\n                                                        </MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n\r\n                                    <div className=\"select-sides\">\r\n                                        <FormControl sx={{m: 1, minWidth: \"100%\"}} size=\"small\" className=\"selectMui\">\r\n                                            <InputLabel id=\"demo-select-large-label\">Qayerga</InputLabel>\r\n                                            <Select\r\n                                                error={formik.errors.to_region === \"Required\"}\r\n                                                labelid=\"demo-select-small-label\"\r\n                                                id=\"demo-select-small\"\r\n                                                value={formik.values.to_region}\r\n                                                label=\"Qayerga\"\r\n                                                name=\"to_region\"\r\n                                                onChange={formik.handleChange}\r\n                                            >\r\n                                                {\r\n                                                    regions.map((item, index) => {\r\n                                                        return <MenuItem key={index}\r\n                                                                         value={item.id}>\r\n                                                            {item.translations[i18next.language].name}\r\n                                                        </MenuItem>\r\n                                                    })\r\n                                                }\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"select-box\">\r\n                                    <div className=\"select-sides\">\r\n                                        <TextField\r\n                                            error={formik.errors.price === \"Required\"}\r\n                                            value={formik.values.price}\r\n                                            onChange={formik.handleChange}\r\n                                            name=\"price\"\r\n                                            type=\"text\"\r\n                                            sx={{m: 1, minWidth: \"100%\"}} size=\"small\" id=\"outlined-basic\"\r\n                                            label=\"Narxi\" variant=\"outlined\" className=\"textField\"/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div onClick={sendAllInfo} className=\"add-btn\">\r\n                                    Saqlash\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                </div>\r\n            </div>\r\n        </CSSTransition>\r\n\r\n        <div className=\"header\">\r\n            <div onClick={() => {\r\n                setModalShow({show: true, status: \"add-driver\"});\r\n            }} className=\"add-driver-btn\">\r\n                Narx qo'shish\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"table-wrapper\">\r\n            <table>\r\n                <thead>\r\n                <tr>\r\n                    <th>№</th>\r\n                    <th>Yo'nalish</th>\r\n                    <th>Tarif</th>\r\n                    <th>Qayerdan</th>\r\n                    <th>Qayerga</th>\r\n                    <th>Narx</th>\r\n                    <th>O'chirish</th>\r\n                    <th></th>\r\n                </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                {productList}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n\r\n        <div className=\"pagination\">\r\n            {serviceList.length > 50 ? <ReactPaginate\r\n                breakLabel=\"...\"\r\n                previousLabel={<img src=\"./images/admin/prev.png\" alt=\"\"/>}\r\n                nextLabel={<img src=\"./images/admin/next.png\" alt=\"\"/>}\r\n                pageCount={pageCount}\r\n                onPageChange={changePage}\r\n                containerClassName={\"paginationBttns\"}\r\n                previousLinkClassName={\"previousBttn\"}\r\n                nextLinkClassName={\"nextBttn\"}\r\n                disabledCalassName={\"paginationDisabled\"}\r\n                activeClassName={\"paginationActive\"}\r\n            /> : \"\"}\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default Price","\r\nimport MainHome from \"./components/admin/admin home/MainHome\";\r\nimport Admin from \"./components/admin/Admin/Admin\";\r\nimport LoginAdmin from \"./components/login/LoginAdmin\";\r\nimport Drivers from \"./components/admin/drivers/Drivers\";\r\nimport ChatDriver from \"./components/admin/chat/ChatDriver\";\r\nimport Clients from \"./components/admin/clients/Clients\";\r\nimport Colors from \"./components/admin/colors/Colors\";\r\nimport CarBrand from \"./components/admin/car-brend/CarBrand\";\r\nimport Service from \"./components/admin/service/Service\";\r\nimport Balance from \"./components/admin/balance/Balance\";\r\nimport Orders from \"./components/admin/orders/Orders\";\r\nimport CarModel from \"./components/admin/car-model/CarModel\";\r\nimport Payment from \"./components/admin/payment/Payment\";\r\nimport RejectReason from \"./components/admin/reject-reason/RejectReason\";\r\nimport ExtraServices from \"./components/admin/extra-services/ExtraServices\";\r\nimport Price from \"./components/admin/price/Price\";\r\n\r\nexport const publicRoutes = [\r\n    {\r\n        path: \"/\",\r\n        element: <LoginAdmin/>\r\n    }];\r\n\r\nexport const adminRoutes = [\r\n    {\r\n        path: \"/*\",\r\n        element: <Admin/>\r\n    },\r\n];\r\n\r\nexport const adminPageRoutes = [\r\n    {\r\n        path: \"/\",\r\n        element: <MainHome/>\r\n    },\r\n    {\r\n        path: \"/drivers\",\r\n        element: <Drivers/>\r\n    },\r\n    {\r\n        path: \"/clients\",\r\n        element: <Clients/>\r\n    },\r\n    {\r\n        path: \"/chat-drivers\",\r\n        element: <ChatDriver/>\r\n    },\r\n    {\r\n        path: \"/colors\",\r\n        element: <Colors/>\r\n    },\r\n    {\r\n        path: \"/car-brands\",\r\n        element: <CarBrand/>\r\n    },\r\n    {\r\n        path: \"/car-models\",\r\n        element: <CarModel/>\r\n    },\r\n    {\r\n        path: \"/service\",\r\n        element: <Service/>\r\n    },\r\n    {\r\n        path: \"/balance\",\r\n        element: <Balance/>\r\n    },\r\n    {\r\n        path: \"/orders\",\r\n        element: <Orders/>\r\n    },\r\n    {\r\n        path: \"/payment\",\r\n        element: <Payment/>\r\n    },\r\n    {\r\n        path: \"/reject-reason\",\r\n        element: <RejectReason/>\r\n    },\r\n    {\r\n        path: \"/extra-services\",\r\n        element: <ExtraServices/>\r\n    },\r\n\r\n    {\r\n        path: \"/price\",\r\n        element: <Price/>\r\n    },\r\n\r\n];","import \"./not-found.scss\"\r\n\r\nconst NotFound = () => {\r\n    return <div className=\"not-found-wrapper\">\r\n        <div className=\"sloy\">\r\n            <div className=\"text1\">\r\n                <div className=\"error\">\r\n                    error 404\r\n                </div>\r\n                <div className=\"text\">\r\n                    Page not found\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport default NotFound","import React, {useMemo, useState, createContext} from \"react\";\r\nimport {Routes, Route} from \"react-router-dom\";\r\nimport {adminRoutes, publicRoutes} from \"../../rootes\";\r\nimport NotFound from \"../notFound/NotFound\";\r\n\r\nexport const MyContext = createContext();\r\n\r\nfunction App() {\r\n    const [url, setUrl] = useState('https://api.adataxi.uz');\r\n\r\n    const admin = useMemo(() => localStorage.getItem('admin'), []);\r\n\r\n    const routes = useMemo(() => {\r\n        if (admin) return adminRoutes;\r\n        return publicRoutes\r\n    }, [admin]);\r\n\r\n    return (\r\n        <>\r\n            <MyContext.Provider value={{\r\n                url\r\n            }}>\r\n                <Routes>\r\n                    {\r\n                        routes.map((route, index) => (\r\n                            <Route key={index} {...route} />\r\n                        ))\r\n                    }\r\n                    <Route path={'*'} element={<NotFound/>}/>\r\n                </Routes>\r\n\r\n            </MyContext.Provider>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;"],"names":["Loader","_jsx","_Fragment","children","className","MainHome","statisitc","setStatisitc","useState","sockedContext","setSockedContext","locationsList","setLocationsList","center","setCenter","useEffect","localStorage","getItem","websocket","W3CWebSocket","concat","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","lat","lng","axios","get","then","response","data","onmessage","event","_data$message","JSON","parse","message","code","removeItem","window","location","pathname","action","isLoaded","useLoadScript","googleMapsApiKey","options","useMemo","disableDefaultUI","clickableIcons","_jsxs","src","alt","drivers","clients","avilable_drivers","rides","GoogleMap","zoom","mapContainerClassName","MarkerF","icon","url","scaledSize","width","height","Admin","t","useTranslation","useContext","MyContext","navigate","useNavigate","adminMenu","setAdminMenu","language","name","country_code","onClick","img","map","item","index","NavLink","to","_ref","isActive","Dropdown","Toggle","variant","id","loading","i18next","Menu","_ref2","Item","setItem","changeLanguage","Routes","adminPageRoutes","route","Route","_objectSpread","useOnKeyPress","callback","targetKey","keyPressHandler","key","addEventListener","removeEventListener","LoginAdmin","value","phone","setPhone","password","setPassword","HandleLogin","trim","length","user","username","post","token","catch","error","status","alert","Clear","onChange","e","target","placeholder","type","onKeyUp","console","log","LoaderAdmin","Drivers","modalShow","setModalShow","show","nodeRef","useRef","ref","getSearchText","setGetSearchText","driverPhoto","setDriverPhoto","carInformation","setCarInformation","driversList","setDriversList","driverId","setDriverId","reason","setReason","loader","setLoader","car_serviceId","setCarServiceId","car_categoriesId","setCarCategoriesId","regions","setRegions","luggage","setLuggage","profileImage","setProfileImage","car_images","setCar_images","base_car_images","setBase_Car_images","doc_images","setDocImages","base_doc_images","setBaseDocImages","car_make","setCar_make","car_model","setCar_model","car_colors","setCar_colors","extra_services","setExtra_services","extra_servicesList","setExtra_servicesList","car_categories","setCar_categories","car_service","setCar_service","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","pageNumber","setPageNumber","pagesVisited","pageCount","Math","ceil","formik","useFormik","initialValues","first_name","last_name","birth_date","car_number","car_color","seat_count","from_region","to_region","validate","values","errors","onSubmit","sendAllInfo","getDrivers","headers","finally","getCarNames","getInputPhoto","file","files","formData","FormData","role","gender","is_verified","is_confirmed","driver","append","Array","isArray","forEach","resetForm","patch","blockDriver","driver_id","getCarImages","getDocsImages","productList","slice","filter","searchText","toString","toLowerCase","replace","phoneNumber","includes","profile_image","user_name","translations","getInformation","available_services","available_categories","is_block","setValues","service","CSSTransition","in","timeout","classNames","unmountOnExit","TextField","handleChange","sx","m","minWidth","size","label","htmlFor","FormControl","InputLabel","Select","labelid","MenuItem","touched","Boolean","helperText","inputProps","min","fullWidth","labelId","multiple","setFieldValue","split","input","OutlinedInput","renderValue","selected","find","i","join","Checkbox","checked","ListItemText","primary","handleSubmit","rate","finished_orders_count","category","handleCheckboxChangeService","serviceId","prevSelected","handleCheckboxChangeCategory","verify","image","handleDeleteImageBase","driver_car_image","preview","prevImages","_","handleDeleteImage","reader","FileReader","onloadend","result","readAsDataURL","addCar_Images","handleDeleteImageDocsBase","driver_document_image","handleDeleteImageDocs","addCar_Images_Docs","ReactPaginate","breakLabel","previousLabel","nextLabel","onPageChange","setTimeout","_ref$current","current","scrollIntoView","behavior","containerClassName","previousLinkClassName","nextLinkClassName","disabledCalassName","activeClassName","ChatDriver","bodyRef","chats","setChats","setMessage","activeCHat","setActiveChat","messageText","setMessageText","scrollTop","scrollHeight","Authorization","user_phone","chat","getMessage","title","chat_id","closed","delChat","delete","author","is_admin","time","sendMessage","room","Clients","client_id","Colors","setTranslations","name_uz","name_ru","name_en","colorsList","setColorsList","edit","setEdit","editId","setEditId","getData","addColor","translation_list","uz","ru","en","put","color","handleEdit","delColor","CarBrand","Service","serviceList","setServiceList","start_price","price_per_km","price_per_min","wait_price_per_min","free_wait_time","includedCars","allInfo","editValues","Balance","id_number","fund","Orders","links","setLinks","Pages","setPages","activeItem","setActiveItem","orderStatus","setOrderStatus","orderId","setOrderId","reasonList","setReasonList","statistics","setStatistics","information","setInformation","client","setClient","setDriver","setStatus","direction","setDirection","tarif","setTarif","date","setDate","visiblePages","totalPages","push","max","getList","arguments","undefined","page","main","results","pages","distance","end_date","drop_off_locations","address","pick_up_locations","passanger_count","payment_type","pick_up_date","service_type","payer","receiver_phone","sender_phone","rejected_reason","comment_to_driver","changeStatus","order_id","reason_id","total_orders","finished_orders","active_orders","rejected_orders","orders_today","orders_this_month","filterData","created_at","car_category","price","previous","cursor","next","CarModel","carBrandId","setCarBrandId","make","brand","Payment","payment","balance_id","amount","payment_operator","updated_at","count","RejectReason","rejectStatus","setRejectStatus","ExtraServices","isMain","setIsMain","setPrice","is_main","handleCheckboxChange","Price","category_type","publicRoutes","path","element","adminRoutes","NotFound","createContext","setUrl","admin","routes","Provider"],"sourceRoot":""}